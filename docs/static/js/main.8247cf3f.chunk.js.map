{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadCategorias.js","actions/categoriasActions.js","helpers/loadCuentas.js","actions/cuentasActions.js","helpers/loadMovs.js","actions/movsActions.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginForm.js","components/auth/RegisterForm.js","components/auth/LoginScreen.js","actions/modalActions.js","components/ui/buttons/Buttons.js","components/ui/selects/Select.js","components/ui/tables/Table.js","components/principalRoutes/movimientos/MovimientosScreen.js","components/ui/acordeon/AcordeonTable.js","components/principalRoutes/categories/CategoriesScreen.js","helpers/convertidor.js","helpers/getCantidades.js","components/ui/lists/List.js","components/ui/acordeon/AcordeonList.js","components/principalRoutes/cuentas/CuentasScreen.js","components/EstadisticasScreen.js","components/principalRoutes/gastos/GastosScreen.js","components/principalRoutes/home/LastMovs.js","components/principalRoutes/home/CuentasHome.js","components/principalRoutes/home/PatrimonioView.js","components/principalRoutes/home/HomeScreen.js","components/principalRoutes/ingresos/IngresosScreen.js","components/ui/tables/TableTranferencias.js","components/principalRoutes/transferencias/TransferenciasScreen.js","components/principalRoutes/deudas/DeudasScreen.js","components/principalRoutes/deudasACobrar/DeudasACobrarScreen.js","helpers/fetchPares.js","components/ui/navbar/Navbar.js","actions/paresActions.js","components/modalForms/formDeudas/DetalleDeuda.js","helpers/isFormValid.js","hooks/useManySelectors.js","helpers/fileUpload.js","components/ui/uploadFile/UploadFile.js","components/modalForms/formDeudas/Deuda.js","components/modalForms/formDeudas/FormulariosDeuda.js","components/modalForms/formDeudas/SaldarDeuda.js","components/modalForms/formPrestamos/SaldarPrestamo.js","components/modalForms/formGastos/DetalleGasto.js","components/modalForms/NuevoIngresoGasto.js","components/modalForms/formGastos/FormulariosGasto.js","components/modalForms/formIngresos/DetalleIngreso.js","components/modalForms/formIngresos/FormulariosIngreso.js","components/modalForms/formDeudasACobrar/DeudasACobrar.js","components/modalForms/formPrestamos/DetallePrestamo.js","components/modalForms/formPrestamos/Prestamo.js","components/modalForms/formPrestamos/FormulariosPrestamo.js","components/modalForms/formCompraActivos/CompraActivos.js","components/modalForms/formVentaActivos/VentaActivos.js","components/modalForms/formTransferencias/DetalleTransferencia.js","components/modalForms/formTransferencias/TransferenciaForm.js","components/modalForms/formTransferencias/FormulariosTransferencia.js","components/modalForms/formEditarCategorias/EditarCategorias.js","components/modalForms/formEditarCuentas/EditarCuentas.js","components/modalForms/formEditarCuentas/EditarSubcuentas.js","components/ui/modal/Modal.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/loadings/LoadingScreen.js","AppRouter.js","reducers/categoriasReducer.js","reducers/cuentasReducer.js","reducers/modalsReducer.js","reducers/movimientosReducer.js","reducers/authReducer.js","reducers/valoresReducer.js","store/store.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","googleAuthProvider","GoogleAuthProvider","types","loadCategorias","uid","a","getDocs","collection","catsCollection","cats","forEach","cat","push","data","id","sort","b","nombre","categorias","tipo","sector","cargarCategorias","type","payload","startAgregarCategoria","dispatch","getState","auth","addDoc","nuevaCat","agregarCategoria","console","log","editarCategoria","cerrarModoEdicionCategorias","eliminarCategoria","loadCuentas","cuentasCollection","cuentas","cta","subcuentas","cargarCuentas","startAgregarCuenta","nuevaCuenta","agregarCuenta","cuenta","startAgregarSubcuenta","updateDoc","doc","agregarSubcuenta","editarCuenta","editarSubcuenta","subcuenta","cerrarModoEdicionCuentas","eliminarCuenta","eliminarSubcuenta","insertarCuentaActiva","loadMovs","movsCollection","movs","mov","fecha","Date","startNuevoMovimiento","nuevoIngreso","nuevoGasto","nuevaTransferencia","nuevoPrestamo","nuevaDeuda","insertarMovimientoActivo","cargarMovimientos","startActualizarMovimiento","movToFirestore","actualizarMovimiento","startEliminarMovimiento","deleteDoc","eliminarMovimiento","login","userName","logout","useForm","initialState","useState","formValues","setFormValues","handleChange","e","target","name","value","handleChangeCalendar","handleChangeFrom","from","handleChangeTo","to","LoginForm","handleChangeScreen","useDispatch","errorForm","setErrorForm","email","pass","isFormLoginValid","validator","isEmail","email1","trim","className","onSubmit","password","preventDefault","getAuth","signInWithEmailAndPassword","user","displayName","code","Swal","fire","onChange","placeholder","htmlFor","onClick","signInWithPopup","src","alt","RegisterForm","email2","pass1","pass2","length","isAlpha","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","createUserWithEmailAndPassword","updateProfile","autoComplete","required","LoginScreen","screen","setScreen","openModal","typeModal","modo","title","Buttons","botonEditarVisible","ruta","isButtonsOpen","setIsButtonsOpen","isEditingCuentas","useSelector","state","isEditing","isEditingCategorias","openVistaButtons","openingModal","stopPropagation","closeVistaEditar","parentElement","click","Select","options","clase","actualizarState","defaultValue","map","op","Table","movimientos","cantMostrada","cabecera","ultimosMovimientos","undefined","slice","scope","estado","detalleModal","Intl","NumberFormat","style","currency","format","cantidadPagada","cantidad","categoria","prestador","tomador","toLocaleDateString","editarModal","defaultProps","MovimientosScreen","meses","getMonth","mesFiltro","setMesFiltro","filter","el","AcordeonTable","tableElements","sumarCantidadTotalPorCategoria","cantidadTotal","parseInt","catNombre","catCantidad","classList","contains","cantElemInternos","toggle","nextSibling","height","handleToggleAccordion","CategoriesScreen","useEffect","categoriasTotales","convertidor","array","pares","coin","fiat","reduce","acumulador","actual","valor","includes","find","par","sumarCantidadTotalPorCuenta","cantidadTotalPorCuenta","sumarCantidadEnCuentasActivos","subcuentaActivo","monedaValuacion","sumarCantidadPorSubcuenta","elementos","activos","parseFloat","sumarCantidadTotal","cantidadTotalActivos","totalCuentas","totalActivos","sumarCantidadTotalActivos","sub","cantidadTotalConvertida","List","nomCuenta","moneda","setMoneda","sumarMontosEnDistintasMonedas","total","minimumFractionDigits","nomSubcuenta","AcordeonList","CuentasScreen","totalMovimientos","nombreCuentas","EstadisticasScreen","background","speed","maxWidth","maxHeight","loop","autoplay","GastosScreen","tablaGastos","categoriasGastos","LastMovs","CuentasHome","PatrimonioView","setState","HomeScreen","element","IngresosScreen","tablaIngresos","categoriasIngresos","TableTranferencias","TransferenciasScreen","transferencias","DeudasScreen","deudas","DeudasACobrarScreen","deudasACobrar","fetchPares","fetch","header","resp","json","bid","Navbar","actualizarValoresMonedas","usd_ars","btc_usd","btc_ars","eth_ars","eth_usd","then","menu","useRef","modal","handleClose","current","transform","zIndex","opacity","ref","isActive","signOut","path","DetalleDeuda","activeMov","descripcion","cuotas","cuotasPagadas","url","href","rel","verificarCaracteres","input","toString","caracter","isFormValid","form","ok","msg","now","isNaN","nuevaSubcuenta","nuevaCategoria","cuotasAPagar","cantidadAPagar","useManySelectors","modals","nombreCategorias","fileUpload","file","formData","FormData","append","method","body","cloudResp","secure_url","UploadFile","isLoading","setIsLoading","isMounted","isComprobanteAdd","setIsComprobanteAdd","comprobante","handleChangeComprobante","files","multiple","accept","Deuda","msgForm","setMsgForm","setNuevaCuenta","setNuevaCategoria","nuevoActivo","setNuevoActivo","respForm","autoFocus","label","min","disabled","window","confirm","FormulariosDeuda","SaldarDeuda","setNuevaSubuenta","idReferencia","aQuien","max","SaldarPrestamo","deQuien","DetalleGasto","Math","abs","NuevoIngresoGasto","setNuevaSubcuenta","setmonedaValuacion","deudaOriginal","parse","deuda","cantidadAnterior","cantidadNueva","cuotasAnterior","cuotasNuevas","maxDate","FormulariosGasto","DetalleIngreso","FormulariosIngreso","DeudasACobrar","DetallePrestamo","Prestamo","FormulariosPrestamo","CompraActivos","subcuentasTo","subcuentasFrom","handleSubmit","handleDelete","nuevaCuentaFrom","setNuevaCuentaFrom","nuevaSubcuentaFrom","setNuevaSubcuentaFrom","nuevaSubcuentaTo","setNuevaSubcuentaTo","VentaActivos","nuevaCuentaTo","setNuevaCuentaTo","DetalleTransferencia","TransferenciaForm","FormulariosTransferencia","cantidadRestanteEnCuenta","restaEntreCantidadEnCuentaYCantidadVendida","EditarCategorias","activeCat","stateCategorias","setStateCategorias","catToFirestore","categoriaActual","startEditarNombreCategoria","EditarCuentas","activeCuenta","stateCuentas","setStateCuentas","cuentaToFirestore","EditarSubcuentas","nombreSubcuenta","nombreCuenta","cuentaActual","subcuentaActual","stateSubcuentas","setStateSubcuentas","startEditarNombreSubcuenta","Modal","isOpen","PrivateRoute","children","PublicRoute","LoadingScreen","AppRouter","checking","setChecking","onAuthStateChanged","err","cuentasFirebase","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"wSAmBMA,EAAMC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAObC,GAFYC,YAAaV,GAEpBW,eACLC,EAAqB,IAAIC,ICvBlBC,EAEK,8BAFLA,EAGG,4BAHHA,EAIW,oCAJXA,EAKU,2CALVA,EAMU,2CANVA,EAOa,sCAPbA,EAQW,qCARXA,EASG,4BATHA,EAYM,+BAZNA,EAac,wCAbdA,EAgBW,oCAhBXA,EAiBU,mCAjBVA,EAmBE,qBAnBFA,EAoBG,sBApBHA,EAsBM,2BAtBNA,EAuBO,4BAvBPA,EAwBK,0BAxBLA,EAyBS,8BAzBTA,EA0BU,+BA1BVA,EA2BQ,6BA3BRA,EA4BgB,+BA5BhBA,EA6BiB,gCA7BjBA,EA8Ba,mCA9BbA,EA+Ba,mCA/BbA,EAgCO,4BAhCPA,EAiCM,2BAjCNA,EAmCS,iCAnCTA,EAoCU,kCApCVA,EAqCQ,gCArCRA,EAuCmB,kCAvCnBA,GAwCoB,mCAxCpBA,GAyCgB,yCAzChBA,GA0CgB,yCA1ChBA,GA2CU,kCA3CVA,GA4CS,iCA5CTA,GA8CU,+BA9CVA,GAgDF,eAhDEA,GAiDD,gB,QC9CCC,GAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,YAASC,YAAYV,EAAF,UAAUO,EAAV,qBADtB,cACpBI,EADoB,OAEpBC,EAAO,GAEbD,EAAeE,SAAS,SAAAC,GACpBF,EAAKG,KAAL,6BACOD,EAAIE,QADX,IAEIC,GAAIH,EAAIG,SAIhBL,EAAKM,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAXvB,kBAanBR,GAbmB,2CAAH,sDCErBS,GAAa,CACX,CACID,OAAQ,uBACRE,KAAM,QACNC,OAAQ,SAEZ,CACIH,OAAQ,SACRE,KAAM,QACNC,OAAQ,iBAEZ,CACIH,OAAQ,SACRE,KAAM,UACNC,OAAQ,mBAEZ,CACIH,OAAQ,SACRE,KAAM,UACNC,OAAQ,mBAEZ,CACIH,OAAQ,MACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,MACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,UACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,iBACRE,KAAM,UACNC,OAAQ,kBAEZ,CACIH,OAAQ,YACRE,KAAM,UACNC,OAAQ,aAEZ,CACIH,OAAQ,UACRE,KAAM,QACNC,OAAQ,YA4CPC,GAAmB,SAAAZ,GAAI,MAChC,CACIa,KAAMpB,GACNqB,QAASd,IAIJe,GAAwB,SAAAb,GACjC,8CAAO,WAAOc,EAAUC,GAAjB,iBAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAIwBwB,YAAQrB,YAAYV,EAAF,UAAUO,EAAV,oBAAkCO,GAJ5E,OAIOkB,EAJP,OAKCJ,EAAUK,GAAiB,cAAGhB,GAAIe,EAASf,IAAOH,KALnD,gDAQCoB,QAAQC,IAAR,MARD,yDAAP,yDAcSF,GAAmB,SAAAnB,GAAG,MAC/B,CACIW,KAAMpB,EACNqB,QAASZ,IAsBJsB,GAAkB,SAAAtB,GAAG,MAC9B,CACIW,KAAMpB,EACNqB,QAASZ,IAUJuB,GAA8B,iBACvC,CACIZ,KAAMpB,KAiBDiC,GAAoB,SAAAxB,GAAG,MAChC,CACIW,KAAMpB,EACNqB,QAASZ,ICjLJyB,GAAW,uCAAG,WAAOhC,GAAP,iBAAAC,EAAA,sEACSC,YAASC,YAAYV,EAAF,UAAUO,EAAV,kBAD5B,cACjBiC,EADiB,OAEjBC,EAAU,GAEhBD,EAAkB3B,SAAS,SAAA6B,GACvBD,EAAQ1B,KAAR,6BACO2B,EAAI1B,QADX,IAEIC,GAAIyB,EAAIzB,SAIhBwB,EAAQvB,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAX7B,kBAahBqB,GAbgB,2CAAH,sDCElBA,GAAU,CACZ,CACIrB,OAAQ,MACRuB,WAAY,CAAC,WAAY,aAAc,iBACzC,CACEvB,OAAQ,MACRuB,WAAY,CAAC,WAAW,aAAc,eAE1C,CACIvB,OAAQ,MACRuB,WAAY,CAAC,UAAW,aAE5B,CACIvB,OAAQ,MACRuB,WAAY,CAAC,UAAW,aAE5B,CACIvB,OAAQ,UACRuB,WAAY,CAAC,OAAQ,OAAQ,OAAQ,UAAW,OAAQ,SAE5D,CACIvB,OAAQ,sBACRuB,WAAY,CAAC,WAAY,aAwC3BC,GAAgB,SAAAH,GAAO,MACzB,CACIhB,KAAMpB,EACNqB,QAASe,IAIJI,GAAqB,SAAAH,GAC9B,8CAAO,WAAOd,EAAUC,GAAjB,iBAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAG2BwB,YAAQrB,YAAYV,EAAF,UAAUO,EAAV,iBAAgCmC,GAH7E,OAGOI,EAHP,OAIClB,EAAUmB,GAAc,cACpB9B,GAAI6B,EAAY7B,IACbyB,KANR,gDASCR,QAAQC,IAAR,MATD,yDAAP,yDAcSY,GAAgB,SAAAC,GAAM,MAC/B,CACIvB,KAAMpB,EACNqB,QAASsB,IAIJC,GAAwB,SAAAD,GAEjC,OADAd,QAAQC,IAAKa,GACb,uCAAO,WAAQpB,EAAUC,GAAlB,eAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAGO2C,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,wBAA+ByC,EAAO/B,KAAQ+B,GAHnE,OAICpB,EAAUwB,GAAkBJ,IAJ7B,gDAOCd,QAAQC,IAAR,MAPD,yDAAP,yDAYSiB,GAAmB,SAAAJ,GAAM,MAClC,CACIvB,KAAMpB,EACNqB,QAASsB,IA4BJK,GAAe,SAAAL,GAAM,MAC9B,CACIvB,KAAMpB,EACNqB,QAASsB,IAoBJM,GAAkB,SAAAC,GAAS,MACpC,CACI9B,KAAMpB,EACNqB,QAAS6B,IAUJC,GAA2B,iBACpC,CACI/B,KAAMpB,IAiBDoD,GAAiB,SAAAxC,GAAE,MAC5B,CACIQ,KAAMpB,EACNqB,QAAST,IAoBJyC,GAAoB,SAAAH,GAAS,MACtC,CACI9B,KAAMpB,EACNqB,QAAS6B,IAIJI,GAAuB,SAAAjB,GAAG,MACnC,CACIjB,KAAMpB,EACNqB,QAASgB,IClOJkB,GAAQ,uCAAG,WAAOrD,GAAP,iBAAAC,EAAA,sEACSC,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAD5B,cACdsD,EADc,OAEdC,EAAO,GAEbD,EAAehD,SAAS,SAAAkD,GACpBD,EAAK/C,KAAL,6BACOgD,EAAI/C,QADX,IAEIC,GAAI8C,EAAI9C,GACR+C,MAAO,IAAIC,KAAMF,EAAI/C,OAAOgD,aAIpCF,EAAK5C,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAEwD,MAAQ7C,EAAE6C,OAAS,EAAI,KAZ3B,kBAcbF,GAda,2CAAH,sDCERI,GAAuB,SAAEH,EAAKzC,GACvC,8CAAO,WAAOM,EAAUC,GAAjB,iBAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,kBAGmBwB,YAAQrB,YAAYV,EAAF,UAAUO,EAAV,qBAAmCwD,GAHxE,OAGOZ,EAHP,OAKU,iBAAT7B,GAA2BM,EAAUuC,GAAa,2BAAElD,GAAIkC,EAAIlC,IAAO8C,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WACpF,eAAT1C,GAAyBM,EAAUwC,GAAW,2BAAEnD,GAAIkC,EAAIlC,IAAO8C,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAChF,uBAAT1C,GAAiCM,EAAUyC,GAAmB,2BAAEpD,GAAIkC,EAAIlC,IAAO8C,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAChG,kBAAT1C,GAA4BM,EAAU0C,GAAc,2BAAErD,GAAIkC,EAAIlC,IAAO8C,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WACtF,eAAT1C,GAAyBM,EAAU2C,GAAW,2BAAEtD,GAAIkC,EAAIlC,IAAO8C,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAT1F,kDAYC9B,QAAQC,IAAR,MAZD,0DAAP,yDAiBSgC,GAAe,SAACJ,GAAD,MACxB,CACItC,KAAMpB,EACNqB,QAASqC,IAIJK,GAAa,SAACL,GAAD,MACtB,CACItC,KAAMpB,EACNqB,QAASqC,IAIJM,GAAqB,SAACN,GAAD,MAC9B,CACItC,KAAMpB,EACNqB,QAASqC,IAIJQ,GAAa,SAAAR,GAAG,MACzB,CACItC,KAAMpB,EACNqB,QAASqC,IAIJO,GAAgB,SAAAP,GAAG,MAC5B,CACItC,KAAMpB,EACNqB,QAASqC,IAIJS,GAA2B,SAAAT,GAAG,MACvC,CACItC,KAAMpB,EACNqB,QAASqC,IAkBXU,GAAoB,SAAAX,GAAI,MAC1B,CACIrC,KAAMpB,EACNqB,QAASoC,IAIJY,GAA4B,SAAEX,GACvC,8CAAO,WAAOnC,EAAUC,GAAjB,iBAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,WAEFoE,EAHH,gBAGyBZ,IACN9C,GAJnB,SAMGiC,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,4BAAmCwD,EAAI9C,KAAS0D,GANjE,OAQH/C,EAAUgD,GAAqB,6BAAMb,GAAP,IAAYC,MAAO,IAAIC,KAAMF,EAAIC,WAR5D,2CAAP,yDAYSY,GAAuB,SAAAb,GAAG,MACnC,CACItC,KAAMpB,EACNqB,QAASqC,IAIJc,GAA0B,SAAA5D,GACnC,8CAAO,WAAOW,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGGuE,YAAW3B,YAAKnD,EAAF,UAAUO,EAAV,4BAAmCU,KAHpD,OAIHW,EAAUmD,GAAoB9D,IAJ3B,2CAAP,yDAQS8D,GAAqB,SAAA9D,GAAE,MAChC,CACIQ,KAAMpB,EACNqB,QAAST,ICtGJ+D,GAAQ,SAAEzE,EAAK0E,GAAP,MACjB,CACIxD,KAAMpB,GACNqB,QAAQ,CACJnB,MAAK0E,cAgBXC,GAAS,iBACX,CACIzD,KAAMpB,K,QCnCD8E,GAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAAoCC,mBAAUD,GAA9C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,EAAe,SAACC,GAClBF,EAAc,6BACPD,GADM,mBAEPG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAI9BC,EAAuB,SAAAJ,GACzBF,EAAc,6BACPD,GADM,IAETtB,MAAOyB,MAITK,EAAmB,SAAAL,GACrBF,EAAc,6BACPD,GADM,IAETS,KAAK,6BACET,EAAWS,MADd,mBAEEN,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,YAKlCI,EAAiB,SAAAP,GACnBF,EAAc,6BACPD,GADM,IAETW,GAAG,6BACIX,EAAWW,IADhB,mBAEIR,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,YAKxC,MAAO,CAAEN,EAAYE,EAAcK,EAAsBC,EAAkBE,I,QCnClEE,GAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAElBvE,EAAWwE,cACjB,EAAkCf,oBAAU,GAA5C,mBAAOgB,EAAP,KAAkBC,EAAlB,KAOA,EAAqCnB,GAAQ,CACzCoB,MAAO,GACPC,KAAM,KAFV,mBAAQlB,EAAR,KAAoBE,EAApB,KAKMiB,EAAmB,WACrB,QAAMC,IAAUC,QAASrB,EAAWsB,OAAOC,UACvCP,EAAc,mBACP,IAaf,OACI,uBAAKQ,UAAU,oCAAf,UACI,sBAAKA,UAAU,WAAf,SACI,oBAAGA,UAAU,mBAEjB,iDAEIT,GACI,sBAAKS,UAAU,cAAf,SACI,oBAAGA,UAAU,YAAb,SAA2BT,MAGvC,wBAAMU,SApBM,SAAAtB,GF+Bc,IAAEc,EAAOS,EE9BvCvB,EAAEwB,iBACGR,GAED7E,GF2B4B2E,EE3BMjB,EAAWiB,MF2BVS,EE3BiB1B,EAAWkB,KF4BvE,uCAAO,WAAM5E,GAAN,mBAAApB,EAAA,sEAEOsB,EAAOoF,cAFd,SAGwBC,YAA4BrF,EAAMyE,EAAOS,GAHjE,gBAGSI,EAHT,EAGSA,KACRxF,EAAUoD,GAAOoC,EAAK7G,IAAK6G,EAAKC,cAJjC,gDAMmB,wBAAb,KAAIC,MACLC,IAAKC,KAAK,2BAAyB,uCAAqC,SAE1D,wBAAb,KAAIF,MACLC,IAAKC,KAAM,mBAAoB,wBAAyB,SAV7D,yDAAP,yDEZQ,UACI,uBAAKV,UAAU,qBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAWiB,MAAQkB,SAAWjC,EAAe/D,KAAK,QAAQqF,UAAU,eAAe7F,GAAG,gBAAgByG,YAAY,kBAC9I,wBAAOC,QAAQ,gBAAf,8BAGJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,OAAOC,MAAQN,EAAWkB,KAAOiB,SAAWjC,EAAe/D,KAAK,WAAWqF,UAAU,eAAe7F,GAAG,mBAAmByG,YAAY,aAClJ,wBAAOC,QAAQ,mBAAf,yBAGJ,yBAAQlG,KAAK,SAASqF,UAAU,aAAhC,sBAEA,uBAAKA,UAAU,wBAAf,UACI,qDACA,uBACIA,UAAU,aACVc,QAvDI,SAAAnC,GACpBA,EAAEwB,iBACFrF,EFJJ,uCAAO,WAAOA,EAAUC,GAAjB,mBAAArB,EAAA,6DACGsB,EAAOoF,cADV,SAEoBW,YAAiB/F,EAAM3B,GAF3C,gBAEKiH,EAFL,EAEKA,KACRxF,EAAUoD,GAAOoC,EAAK7G,IAAK6G,EAAKC,cAH7B,2CAAP,0DEuDgB,UAII,sBAAKP,UAAU,sBAAf,SACI,sBAAKA,UAAU,cAAcgB,IAAI,8EAA8EC,IAAI,oBAEvH,oBAAGjB,UAAU,WAAb,uCAMR,yBAAQA,UAAU,aAAac,QAAUzB,EAAzC,iECvEH6B,GAAe,SAAC,GAA4B,IAA1B7B,EAAyB,EAAzBA,mBAE3B,EAAkCd,oBAAU,GAA5C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACM1E,EAAWwE,cAEjB,EAAqCjB,GAAQ,CACzC/D,OAAQ,GACRwF,OAAQ,GACRqB,OAAQ,GACRC,MAAO,GACPC,MAAO,KALX,mBAAQ7C,EAAR,KAAoBE,EAApB,KA+CA,OACI,uBAAKsB,UAAU,oCAAf,UACI,sBAAKA,UAAU,WAAf,SACI,oBAAGA,UAAU,mBAEjB,iDAEIT,GACI,sBAAKS,UAAU,cAAf,SACI,oBAAGA,UAAU,YAAb,SAA2BT,MAGvC,wBAAMU,SArBS,SAAAtB,GHPc,IAAErE,EAAQmF,EAAOS,EGQlDvB,EAAEwB,kBA9BG3B,EAAWlE,OAAOyF,OAAOuB,OAAS,IAAM1B,IAAU2B,QAAS/C,EAAWlE,OAAOyF,OAAQ,CAAC,WACvFP,EAAa,mBACN,GAELI,IAAUC,QAASrB,EAAWsB,OAAOC,QAItCvB,EAAW2C,OAAOpB,SAAWvB,EAAWsB,OAAOC,QAChDP,EAAc,gCACP,GAELI,IAAU4B,iBAAkBhD,EAAW4C,MAAMrB,OAAQ,CACvD0B,UAAW,EACXC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZC,WAAY,IAKXrD,EAAW4C,QAAU5C,EAAW6C,QACjC7B,EAAa,wCACN,IALPA,EAAc,uFACP,IAfPA,EAAc,kBACP,MA2BP1E,GHX+BR,EGWMkE,EAAWlE,OHXTmF,EGWiBjB,EAAWsB,OHXrBI,EGW6B1B,EAAW4C,MHV9F,uCAAO,WAAOtG,GAAP,mBAAApB,EAAA,sEAEOsB,EAAOoF,cAFd,SAGwB0B,YAAgC9G,EAAMyE,EAAOS,GAHrE,uBAGSI,EAHT,EAGSA,KAHT,SAIOyB,YAAezB,EAAM,CAAEC,YAAajG,IAJ3C,OAKCQ,EAAUoD,GAAOoC,EAAK7G,IAAKa,IAL5B,kDAQmB,8BAAb,KAAIkG,MAELC,IAAKC,KAAK,MAAO,oCAAqC,SAV3D,0DAAP,wDGWQlB,GAAc,KAgBd,UACI,uBAAKQ,UAAU,qBAAf,UACI,wBAAOgC,aAAa,MAAMnD,KAAK,SAASC,MAAQN,EAAWlE,OAASqG,SAAWjC,EAAe/D,KAAK,OAAOqF,UAAU,eAAe7F,GAAG,oBAAoB8H,UAAQ,EAACrB,YAAY,sBAC/K,wBAAOC,QAAQ,oBAAf,kCAEJ,uBAAKb,UAAU,qBAAf,UACI,wBAAOgC,aAAa,MAAMnD,KAAK,SAASC,MAAQN,EAAWsB,OAASa,SAAWjC,EAAe/D,KAAK,QAAQqF,UAAU,eAAe7F,GAAG,sBAAsB8H,UAAQ,EAACrB,YAAY,qBAClL,wBAAOC,QAAQ,sBAAf,iCAEJ,uBAAKb,UAAU,qBAAf,UACI,wBAAOgC,aAAa,MAAMnD,KAAK,SAASC,MAAQN,EAAW2C,OAASR,SAAWjC,EAAe/D,KAAK,QAAQqF,UAAU,eAAe7F,GAAG,sBAAsB8H,UAAQ,EAACrB,YAAY,oBAClL,wBAAOC,QAAQ,sBAAf,gCAGJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAW4C,MAAQT,SAAWjC,EAAe/D,KAAK,WAAWqF,UAAU,eAAe7F,GAAG,oBAAoB8H,UAAQ,EAACrB,YAAY,aAC9J,wBAAOC,QAAQ,oBAAf,yBAEJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAW6C,MAAQV,SAAWjC,EAAe/D,KAAK,WAAWqF,UAAU,eAAe7F,GAAG,oBAAoB8H,UAAQ,EAACrB,YAAY,uBAC9J,wBAAOC,QAAQ,oBAAf,mCAGJ,yBAAQlG,KAAK,SAASqF,UAAU,aAAhC,yBACA,yBAAQA,UAAU,aAAac,QAAUzB,EAAzC,sEC1FH6C,GAAc,WAEvB,MAA4B3D,mBAAS,SAArC,mBAAO4D,EAAP,KAAeC,EAAf,KAEM/C,EAAqB,SAAAV,GACvBA,EAAEwB,iBACmBiC,EAAV,UAAXD,EAAgC,WAAwB,UAG5D,OACI,uCACI,sBAAKnC,UAAU,YAAYgB,IAAI,kFAAkFC,IAAI,uBACrH,uBAAKjB,UAAU,gBAAf,UAEmB,UAAXmC,GACG,eAAC,GAAD,CAAW9C,mBAAqBA,IAGxB,aAAX8C,GACG,eAAC,GAAD,CAAc9C,mBAAsBA,WCpB9CgD,GAAY,SAAEC,GAAF,MACrB,CACI3H,KAAMpB,EACNqB,QAAS,CACLJ,KAAM8H,EAAU9H,KAChB+H,KAAMD,EAAUC,KAChBC,MAAOF,EAAUE,SCFhBC,GAAU,SAAC,GAAyC,IAAD,IAAtCC,0BAAsC,SAAXC,EAAW,EAAXA,KAE3C7H,EAAWwE,cACjB,EAA0Cf,oBAAS,GAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KACkBC,EAAqBC,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAA1DsH,UACUC,EAAwBH,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA7DmJ,UAEFE,EAAmB,SAAAxE,GACrBA,EAAEwB,iBACF0C,GAAmBD,IAGjBQ,EAAe,SAAEzE,EAAGnE,GACtBmE,EAAEwB,iBACFxB,EAAE0E,kBACFvI,EAAUuH,GAAW,CACjB7H,KAAMA,GAAQmE,EAAEC,OAAOE,MACvByD,KAAM,WAETM,GAAkB,IAUjBS,EAAmB,SAAA3E,GACrBA,EAAEwB,iBACO,YAATwC,GAAsB7H,EAAU4B,MACvB,eAATiG,GAAyB7H,EAAUS,OAGvC,OAEI,uCACA,uBAAKyE,UAAU,eAAf,UACO0C,IAAuBI,GAAuB,yBAAQ9C,UAAU,6BAAlB,SACO,oBAAGc,QAlB3C,SAAAnC,GACpBA,EAAEwB,iBACO,YAATwC,GAAsB7H,ET6I1B,CACIH,KAAMpB,IS7IG,eAAToJ,GAAyB7H,EXyH7B,CACIH,KAAMpB,KW3GqFyG,UAAU,mBAG9F0C,GAAsBI,GAAqB,yBAAQ9C,UAAU,gCAAlB,SACM,oBAAGc,QAAUwC,EAAmBtD,UAAU,cAG3F0C,GAAsBQ,GAAwB,yBAAQlD,UAAU,gCAAlB,SACG,oBAAGc,QAAUwC,EAAmBtD,UAAU,iBAIlG,uBAAKA,UAAU,aAAf,UAES4C,EACe,yBAAQ5C,UAAU,iBAAiBc,QAAUqC,EAA7C,SAAgE,oBAAGnD,UAAU,cAD5E,yBAAQA,UAAU,gBAAgBc,QAAUqC,EAA5C,eAGrB,uBAAKnD,UAAS,wBAAoB4C,EAAgB,UAAY,IAA9D,UAEQ,0BAAQ9B,QAAUsC,EAAetE,MAAM,UAAUkB,UAAU,eAA3D,0BAAuF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,4BAG3K,0BAAQc,QAAUsC,EAAetE,MAAM,gBAAgBkB,UAAU,eAAjE,qCAAwG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,8BAG5L,0BAAQc,QAAUsC,EAAetE,MAAM,QAAQkB,UAAU,eAAzD,wBAAmF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,8BAGvK,0BAAQc,QAAUsC,EAAetE,MAAM,QAAQkB,UAAU,eAAzD,wBAAmF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,kBAGvK,0BAAQc,QAAUsC,EAAetE,MAAM,WAAWkB,UAAU,eAA5D,2BAAyF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,kBAG7K,0BAAQc,QAAUsC,EAAetE,MAAM,eAAekB,UAAU,eAAhE,iCAAmG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,qBAGvL,0BAAQc,QAAUsC,EAAetE,MAAM,gBAAgBkB,UAAU,eAAjE,8BAAiG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,kBAGrL,0BAAQc,QAAUsC,EAAetE,MAAM,eAAekB,UAAU,eAAhE,6BAA+F,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE0E,kBAAmB1E,EAAEC,OAAO2E,cAAcC,SAAWxD,UAAU,kCCrF1LyD,GAAS,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,gBAAiBZ,EAAY,EAAZA,MACrD,OACI,uBAAMhD,UAAU,eAAhB,SACI,yBAAQA,UAAY2D,EAAQhD,SAAWiD,EAAkBC,aAAeb,EAAxE,SAEQU,EAAQI,KAAK,SAAAC,GAAE,OAAI,0BAAmBjF,MAAQiF,EAA3B,UAAkCA,EAAlC,MAAcA,WCDxCC,GAAQ,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAEzCrJ,EAAWwE,cAsBb8E,EAAqBH,EAMzB,YAJsBI,IAAjBH,IACDE,EAAqBH,EAAYK,MAAM,EAAEJ,IAIzC,qCACI,yBAAOlE,UAAU,yBAAjB,UACI,iCACI,gCACI,qBAAIuE,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAEvBA,EAAS,IAAM,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAG1CA,EAAS,IAAM,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,UAItD,iCAEQC,EAAmBN,KAAK,SAAA7G,GAAG,OACvB,sBAAmB+C,UAAS,4BAAuC,YAAf/C,EAAIuH,OAAuB,UAAY,aAAgB1D,QAAU,SAAAnC,GAAC,OApCzH,SAAEA,EAAG1B,GACtB0B,EAAE0E,kBACF1E,EAAEwB,iBACFrF,EAAU4C,GAA0BT,IACpCnC,EAAUuH,GAAW,CACjB7H,KAAMyC,EAAIzC,KACV+H,KAAM,cA8BoIkC,CAAc9F,EAAG1B,IAA3I,UAEuB,YAAfA,EAAIuH,OACA,sBAAID,MAAM,MAAV,UAA+B,UAAbtH,EAAIzC,MAAoB,IAAO,IAAIkK,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAQC,OAAQ7H,EAAI8H,eAAiB9H,EAAI+H,SAAW/H,EAAI8H,eAAiB9H,EAAI+H,aAC3L,qBAAIT,MAAM,MAAV,qBAGR,8BAAMtH,EAAIgI,YAA2B,iBAAbhI,EAAIzC,KAA0B,iBAAmByC,EAAIzC,QAExEyC,EAAIiI,WAAc,8BAAMjI,EAAIiI,YAG7BjI,EAAIkI,SAAW,8BAAMlI,EAAIkI,UAGzBlI,EAAIR,UAAY,gCAAMQ,EAAIR,UAAV,KAAwBQ,EAAIf,OAA5B,OACE,8BAAMe,EAAIf,SAEhC,8BAAM,IAAIiB,KAAMF,EAAIC,OAAQkI,wBAEvBnI,EAAIiI,WAAajI,EAAIkI,UAClB,8BACI,0BAAQnF,UAAU,aAAlB,UACmB,YAAf/C,EAAIuH,OAAuB,oBAAGxE,UAAU,wBACV,oBAAGA,UAAU,wBAF/C,SAQQ,YAAf/C,EAAIuH,QAA0C,qBAAlBvH,EAAIgI,WAAqC,8BAClC,yBAAQjF,UAAU,aAAlB,SAA+B,oBAAGA,UAAU,eAAec,QAAU,SAAAnC,GAAC,OA7EtH,SAAEA,EAAG1B,GACrB0B,EAAE0E,kBACF1E,EAAEwB,iBACFrF,EAAU4C,GAA0BT,IACpCnC,EAAUuH,GAAW,CACjB7H,KAAMyC,EAAIzC,KACV+H,KAAM,YAuEiI8C,CAAa1G,EAAG1B,YA/B7HA,EAAI9C,eA+C1C6J,GAAMsB,aAAe,CACjBnB,SAAW,CAAC,WAAY,YAAa,SAAU,UCjG5C,IAAMoB,GAAoB,WAE7B,IAAMC,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCjH,mBAAUiH,GAAO,IAAIrI,MAAOsI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAQM1B,EAFWlB,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KAEiB4I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG3I,MAAMuI,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,MAAgC,aAAZqL,EAAGrL,MAAmC,kBAAZqL,EAAGrL,MAAwC,iBAAZqL,EAAGrL,MAAuC,kBAAZqL,EAAGrL,MAAwC,iBAAZqL,EAAGrL,QAEhP,OACI,uCACI,eAAC,IAAD,CAAM2E,GAAG,IAAIa,UAAU,UAAvB,SACI,oBAAGA,UAAU,6BAEjB,uBAAKA,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ4D,gBAdI,SAAAjF,GACpBgH,EAAchH,EAAEC,OAAOE,QAa6B4E,QAAU8B,EAAQxC,MAAQ0C,IACtE,qBAAI1F,UAAU,sBAAd,mCACA,eAAC,GAAD,CAAOiE,YAAcA,IACrB,eAAC,GAAD,WCxBH6B,GAAgB,SAAC,GAAmC,IAAjCvL,EAAgC,EAAhCA,WAAYwL,EAAoB,EAApBA,cAElCjL,EAAWwE,cACT2D,EAAcF,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAAzCmJ,UAwBF+C,EAAiC,SAAEhM,GACrC,IAAIiM,EAAgB,EAEpB,OADAF,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcjL,KAAM8J,KAAK,SAAA+B,GAAE,OAAII,GAAiBC,SAAUL,EAAGb,aACpFiB,GAGL7C,EAAe,SAAEzE,EAAGwH,EAAWC,EAAajM,EAAIK,GAClDmE,EAAEwB,iBAEFrF,EAAUuH,GAAU,CAChB7H,KAAM,uBAEVM,Ef6IJ,CACIH,KAAMpB,GACNqB,Qe/ImC,CAAEuL,YAAWC,cAAajM,KAAIK,WAIrE,OACI,sBAAKwF,UAAU,YAAY7F,GAAG,iCAA9B,SAEQI,EAAWuJ,KAAK,SAAA9J,GAAG,OACf,uBAAKgG,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmB7F,GAAG,4BAApC,SACI,0BAAQ2G,QAAU,SAACnC,GAAD,OA3CZ,SAACA,EAAG3E,GAE9B,GAAK2E,EAAE0H,UAAUC,SAAS,oBAAsB,CAEhD,IAAIC,EAAmBR,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcjL,KAAMsH,OAEzE3C,EAAE0H,UAAUG,OAAO,aACnB7H,EAAE4E,cAAckD,YAAYJ,UAAUG,OAAO,QAEzC7H,EAAE4E,cAAckD,YAAYJ,UAAUC,SAAS,QAE/C3H,EAAE4E,cAAckD,YAAY7B,MAAM8B,OAAS,IAAOH,EAAmB,GAAM,KAG3E5H,EAAE4E,cAAckD,YAAY7B,MAAM8B,OAAS,OA6BFC,CAAuBhI,EAAEC,OAAQ5E,EAAIM,SAAW0F,UAAU,+EAA+ErF,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,OAAO,gBAAc,6BAA1R,UACMX,EAAIM,OACN,uBAAMwG,QAAU,SAAAnC,GAAC,OAAIA,EAAEC,OAAO2E,cAAcC,SAAUxD,UAAS,gCAA0C,UAAbhG,EAAIQ,MAAqE,IAAjDwL,EAAgChM,EAAIM,QAAmB,SAAW,IAAvH,OAA6I,YAAbN,EAAIQ,MAAuE,IAAjDwL,EAAgChM,EAAIM,QAAmB,UAAY,IAA5R,SAAqS,IAAIoK,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQkB,EAAgChM,EAAIM,WACpb2I,GAAa,oBAAGnC,QAAU,SAAAnC,GAAC,OAAIyE,EAAczE,EAAG3E,EAAIM,OAAQ0L,EAAgChM,EAAIM,QAAUN,EAAIG,GAAIH,EAAIQ,OAAQwF,UAAU,sBAGlJ,sBAAK7F,GAAG,6BAA6B6F,UAAU,8BAA8B,kBAAgB,4BAA7F,SACI,sBAAKA,UAAU,iBAAf,SACI,eAAC,GAAD,CAAOiE,YAAa8B,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcjL,EAAIM,kBAV1CN,EAAIM,cC5CjDsM,GAAmB,WAE5B,IAAMpB,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCjH,mBAAUiH,GAAO,IAAIrI,MAAOsI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAEM7K,EAAWwE,cAEjBuH,qBAAU,WACN,OAAO,WACH/L,EAAUS,SAEf,CAAET,IAEL,IAIQkC,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACAzC,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WAEF0J,EAAcjH,EAAK4I,QAAQ,SAAAC,GAAE,OAAIL,EAAO,IAAIrI,KAAM0I,EAAG3I,OAAQuI,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,MAAgC,aAAZqL,EAAGrL,MAAmC,kBAAZqL,EAAGrL,QAE3JsM,EAAoBvM,EAAWH,MAAM,SAACV,EAAEW,GAAH,OAASX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAE/E,OACI,uBAAK0F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ0D,QAAU8B,EAAQ5B,gBAbV,SAAAjF,GACpBgH,EAAchH,EAAEC,OAAOE,QAY2CkE,MAAQ0C,IACtE,6CACA,eAAC,GAAD,CAAenL,WAAauM,EAAoBf,cAAgB9B,IAChE,eAAC,GAAD,CAASvB,oBAAqB,EAAOC,KAAK,mBCnCzCoE,GAAc,SAAEC,EAAOhE,EAAOiE,GAGvC,IAAMC,EAAO,CAAE,MAAO,MAAO,MAAO,MAAO,OACrCC,EAAO,CAAC,MAAO,MAAO,OAE5B,OAAOH,EAAMI,QAAQ,SAACC,EAAYC,GAG9B,GAAsB,IAAjBA,EAAOC,MAAa,CAErB,GAAKD,EAAOhN,SAAW0I,EAInB,OAAOqE,GAFPC,EAASA,EAAOC,OAKpB,GAAKL,EAAKM,SAAUxE,IAAWmE,EAAKK,SAAUF,EAAOhN,QAGjD,OAAO+M,GADPC,EAASA,EAAOC,MAAQN,EAAMQ,MAAM,SAAAC,GAAG,OAAIA,EAAIpN,SAAJ,UAAmB0I,EAAnB,YAA8BsE,EAAOhN,WAAWiN,OAI/F,GAAKL,EAAKM,SAAUF,EAAOhN,SAAY6M,EAAKK,SAAUxE,GAGlD,OAAOqE,GADPC,EAASA,EAAOC,MAAQN,EAAMQ,MAAM,SAAAC,GAAG,OAAIA,EAAIpN,SAAWgN,EAAOhN,OAAS,IAAM0I,KAAQuE,OAKhG,OAAOF,EAAaC,EAAOC,QAE5B,IChCMI,GAA8B,SAAE3K,EAAMrB,EAASC,GAExD,IAAIgM,EAAyB,EAgB7B,OAdA5K,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,KAAMgK,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAGrL,QAAoBsJ,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC7HhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,KAAMgK,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,QAAkBsJ,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC3HhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,KAAMgK,QAAQ,SAAAC,GAAE,MAAgB,aAAZA,EAAGrL,QAAqBsJ,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC9HhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,KAAMgK,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,QAAyBsJ,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAClIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACzIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACvIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACzIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACvIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,QAAyBoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACxIhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,QAAyBoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,KAAMkI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAGtIhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIlK,EAAQ8L,MAAK,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWsB,KAAMC,WAAW2L,SAAU3B,EAAGZ,cAAcW,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,QAAkBsJ,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAE7K,CACH1K,OAAQsB,EACR2L,MAAQK,IAIHC,GAAgC,SAAE7K,EAAMpB,EAAKkM,GAEtD,IAAIF,EAAyB,CACzBtN,OAAQsB,EACR2L,MAAO,GAOX,OAJAvK,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,kBAAbA,EAAIzC,MAA4ByC,EAAIgC,KAAK/C,SAAWN,GAAOqB,EAAIkC,GAAG1C,YAAcqL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAC9KhI,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,iBAAbA,EAAIzC,MAA2ByC,EAAIkC,GAAGjD,SAAWN,GAAOqB,EAAIgC,KAAKxC,YAAcqL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAC7KhI,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,YAAbA,EAAIzC,MAAqC,YAAfyC,EAAIf,QAAwBe,EAAI8K,kBAAoBnM,GAAOqB,EAAIR,YAAcqL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAE9L4C,GAIEI,GAA4B,SAAEhL,EAAMrB,EAASC,EAAKqL,GAE3D,IAAIgB,EAAY,GAiDhB,OA/CmBtM,EAAQ8L,MAAK,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWsB,KAAMC,WAE/C9B,SAAS,SAAA4E,GAEhB,IAAIuJ,EAAS,GACTH,EAAgB,GAChB9B,EAAgB,EAEpBjJ,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,GAAOiK,EAAGpJ,YAAckC,KAAIiH,QAAQ,SAAA3I,GAAG,MAAiB,YAAbA,EAAIzC,QAAqBsJ,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC/IhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,GAAOiK,EAAGpJ,YAAckC,KAAIiH,QAAQ,SAAA3I,GAAG,MAAiB,UAAbA,EAAIzC,QAAmBsJ,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC7IhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,GAAOiK,EAAGpJ,YAAckC,KAAIiH,QAAQ,SAAA3I,GAAG,MAAiB,aAAbA,EAAIzC,QAAsBsJ,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAChJhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAG3J,SAAWN,GAAOiK,EAAGpJ,YAAckC,KAAIiH,QAAQ,SAAA3I,GAAG,MAAiB,iBAAbA,EAAIzC,QAA0BsJ,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aACpJhI,EAAK4I,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAActG,KAAIiH,QAAQ,SAAA3I,GAAG,MAAiB,UAAbA,EAAIzC,QAAmBsJ,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aACxHhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA2BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,GAAOiK,EAAG5G,KAAKxC,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC9JhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA2BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,GAAOiK,EAAG1G,GAAG1C,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC1JhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA2BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,GAAOiK,EAAG5G,KAAKxC,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC9JhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAGrL,QAA2BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,GAAOiK,EAAG1G,GAAG1C,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC1JhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG5G,KAAK/C,SAAWN,GAAOiK,EAAG5G,KAAKxC,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC7JhI,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,QAA0BoL,QAAQ,SAAAC,GAAE,OAAIA,EAAG1G,GAAGjD,SAAWN,GAAOiK,EAAG1G,GAAG1C,YAAckC,KAAImF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAEzJhI,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,kBAAbA,EAAIzC,MAA4ByC,EAAIkC,GAAG1C,YAAckC,KAAImF,KAAK,SAAA7G,GAAG,OAAI8K,EAAkB9K,EAAI8K,mBAC/G/K,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,kBAAbA,EAAIzC,MAA4ByC,EAAIkC,GAAG1C,YAAckC,KAAI5E,SAAS,SAAAkD,GAClFiL,EAAQjO,KAAK,CACTK,OAAQ2C,EAAIgC,KAAK/C,OACjBqL,MAAOtB,IAEXA,EAAgBc,GAAamB,EAAS,MAAOjB,MAEjDjK,EAAK4I,QAAQ,SAAA3I,GAAG,MAAiB,YAAbA,EAAIzC,MAAqC,YAAfyC,EAAIf,QAAwBe,EAAIR,YAAckC,KAAImF,KAAK,SAAA7G,GAAG,OAAI8K,EAAkB9K,EAAI8K,mBAGzG,KAApBA,IACDA,EAAkBnM,GAET,YAARA,IACDmM,EAAkB,OAKtBE,EAAUhO,KAAK,CACXwC,UAAWkC,EACXqG,SAAUiB,EACV8B,uBAIDE,GAGEG,GAAqB,SAAEpL,EAAMrB,EAASqH,EAAOiE,GACtD,IAAIhB,EAAgB,GAChBoC,EAAuB,CAAE/N,OAAQ,UAAWiN,MAAO,IA4BvD,OAxBA5L,EAAQ5B,SAAS,SAAA6B,GAEO,YAAfA,EAAItB,OAEL2L,EAAchM,KAAM0N,GAA6B3K,EAAMrB,EAASC,EAAItB,SAMnD,YAARsB,GAEDyM,EAAqBd,MAAMtN,KAAM4N,GAA+B7K,EAAMpB,OAY/E,CAAC0M,aAJavB,GAAad,EAAejD,EAAOiE,GAIlCsB,aAHDxB,GAAasB,EAAqBd,MAAOvE,EAAOiE,KAM5DuB,GAA4B,SAAExL,EAAMrB,EAASqH,EAAOiE,GAAW,IAAD,EAEnEoB,EAAuB,CAAE/N,OAAQ,UAAWuB,WAAY,IAE5D,UAAAF,EAAQ8L,MAAM,SAAA7L,GAAG,MAAmB,YAAfA,EAAItB,iBAAzB,SAAiDuB,WAAWiI,KAAK,SAAA2E,GAE7D,IAAMhM,EAAY,CACdnC,OAAQmO,EACRlB,MAAO,IAQX,OALA5L,EAAQiK,QAAQ,SAAA1J,GAAM,MAAsB,YAAlBA,EAAO5B,UAAuBP,SAAS,SAAA8L,GAE7DpJ,EAAU8K,MAAMtN,KAAM4N,GAA+B7K,EAAM6I,EAAGvL,OAAQmO,OAGnEJ,EAAqBxM,WAAW5B,KAAKwC,MAKhD,IAAIiM,EAA0B,EAM9B,OAJAL,EAAqBxM,WAAW9B,SAAS,SAAA0O,GACrCC,GAA2B3B,GAAa0B,EAAIlB,MAAOvE,EAAOiE,MAGvD,CAAEoB,uBAAsBK,4BCnJtBC,GAAO,SAAC,GAAyC,IAAvCV,EAAsC,EAAtCA,UAAWhF,EAA2B,EAA3BA,UAAW2F,EAAgB,EAAhBA,UAEnC9N,EAAWwE,cACjB,EAA4Bf,mBAAS,OAArC,mBAAOsK,EAAP,KAAeC,EAAf,KACQ7B,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MACAjK,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACArB,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QAgBFoN,EAAgC,SAACN,GAEnC,IAAIO,EAAQ,EAcZ,MAZ6B,YAAxBP,EAAIV,iBACLS,GAA2BxL,EAAMrB,EAASkN,EAAQ5B,GAAOoB,qBAAqBxM,WAAW9B,SAAS,SAAA8L,GACzFA,EAAGvL,SAAWmO,EAAIhM,YACnBuM,EAAQjC,GAAalB,EAAG0B,MAAOsB,EAAQ5B,OAK7B,IAAjBwB,EAAIzD,WACLgE,EAAQjC,GAAY,CAAC,CAAEzM,OAAQmO,EAAIV,gBAAiBR,MAAQkB,EAAIzD,WAAa6D,EAAQ5B,IAGlF+B,GAIX,OACI,uBAAKhJ,UAAU,aAAf,UACI,eAAC,GAAD,CAAQ0D,QAAS,CAAC,MAAO,MAAO,MAAO,OAAQV,MAAQ6F,EAASjF,gBA3BnD,SAAAjF,GACjBA,EAAEwB,iBACF2I,EAAWnK,EAAEC,OAAOE,UA0BhB,qBAAIkB,UAAU,aAAd,SAEQiI,EAAUnE,KAAK,SAAA+B,GAAE,OACb,sBAAyB7F,UAAU,oEAAnC,UACM6F,EAAGpJ,UACL,uBAAMuD,UAAS,gCAA4B6F,EAAGb,SAAW,EAAI,SAAU,IAAxD,OAA8Da,EAAGb,SAAW,EAAI,UAAW,IAA1G,SAAkH,IAAIN,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,MAAOoE,sBAAuB,IAAKnE,OAAQiE,EAA+BlD,MACvP5C,GAAa,oBAAGjD,UAAU,eAAec,QAAU,SAAAnC,GAAC,OA3CzD,SAAEA,EAAGuK,EAAclE,GACpCrG,EAAEwB,iBACFrF,EAAUuH,GAAU,CAChB7H,KAAM,uBAEVM,EAAU+B,GAAsB,CAAE+L,YAAWM,eAAclE,cAsCmB5B,CAAczE,EAAGkH,EAAGpJ,UAAWoJ,EAAGb,eAHtFa,EAAGpJ,oBClDxB0M,GAAe,WAExB,IAAQnM,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACAiK,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MACR,EAA+BlE,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAlDA,EAAR,EAAQA,QAASsH,EAAjB,EAAiBA,UAEXnI,EAAWwE,cAgCjB,OACI,sBAAKU,UAAU,2BAA2B7F,GAAG,iCAA7C,SAEQwB,EAAQmI,KAAK,SAAAlI,GAAG,OACZ,uBAAKoE,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmB7F,GAAG,4BAApC,SACI,0BAAQ2G,QAAU,SAACnC,GAAD,OApCZ,SAACA,EAAG/C,GAE9B,GAAK+C,EAAE0H,UAAUC,SAAS,oBAAsB,CAE5C,IAAIC,EAAmB5K,EAAQ8L,MAAK,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWsB,KAAMC,WAAWyF,OAEzE3C,EAAE0H,UAAUG,OAAO,aACnB7H,EAAE4E,cAAckD,YAAYJ,UAAUG,OAAO,QACzC7H,EAAE4E,cAAckD,YAAYJ,UAAUC,SAAS,QAE/C3H,EAAE4E,cAAckD,YAAY7B,MAAM8B,OAAS,QAAU,GAAOH,EAAqB,aAEjF5H,EAAE4E,cAAckD,YAAY7B,MAAM8B,OAAS,OAwBNC,CAAuBhI,EAAEC,OAAQhD,EAAItB,SAAW0F,UAAU,+EAA+ErF,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,OAAO,gBAAc,6BAA1R,UACqB,QAAfiB,EAAItB,OAAmB,UAAYsB,EAAItB,OACzC,uBAAMwG,QAAU,SAAAnC,GAAC,OAAIA,EAAEC,OAAO2E,cAAcC,SAAUxD,UAAS,gCAA4B2H,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,MAAQ,EAAI,SAAU,IAA3G,OAAiHI,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,MAAQ,EAAI,UAAW,IAAhQ,SAAwQ,IAAI7C,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAuB,YAAflJ,EAAItB,OAAuBkO,GAA2BxL,EAAMrB,EAAS,MAAOsL,GAAQyB,wBAA0Bf,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,SAC1hBtE,GAAa,oBAAGnC,QAAU,SAAAnC,GAAC,OArBpC,SAAEA,EAAG/C,EAAKoJ,GAC3BrG,EAAEwB,iBACFrF,EAAUuH,GAAU,CAChB7H,KAAM,oBAEVM,EAAU+B,GAAqB,6BACxBjB,GADuB,IAE1BoJ,eAcqD5B,CAAczE,EAAG/C,EAAK+L,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,QAAUvH,UAAU,sBAI5I,sBAAK7F,GAAG,6BAA6B6F,UAAU,8BAA8B,kBAAgB,4BAA7F,SACI,sBAAKA,UAAU,iBAAf,SAEI,eAAC,GAAD,CAAMiI,UAAYD,GAA2BhL,EAAMrB,EAASC,EAAItB,OAAQ2M,GAAUhE,UAAYA,EAAY2F,UAAYhN,EAAItB,eAZhGsB,EAAItB,cC1CjD8O,GAAgB,WAEzB,IAAQpM,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACArB,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACFb,EAAWwE,cAEjBuH,qBAAU,WACN,OAAO,WACH/L,EAAU4B,SAEhB,CAAE5B,IAEJ,IAAMuO,EAAmBrM,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,QAEzC8O,EAAgB3N,EAAQmI,KAAK,SAAA+B,GAAE,OAAIA,EAAGvL,UAE5C,OACI,uBAAK0F,UAAU,iBAAf,UACI,0CACA,eAAC,GAAD,CAAcsJ,cAAgBA,EAAgBvD,cAAgBsD,IAC9D,eAAC,GAAD,CAAS3G,oBAAqB,EAAOC,KAAK,gBC3BzC4G,GAAqB,WAC9B,OACI,iCACI,+DACA,sBAAKvJ,UAAU,uBAAf,SACI,gCAAeA,UAAU,YAAYgB,IAAI,4DAA6DwI,WAAW,cAAeC,MAAM,IAAK7E,MAAO,CAAC8E,SAAU,QAASC,UAAW,SAAWC,MAAI,EAACC,UAAQ,UCC5MC,GAAe,WAExB,IAAMtE,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCjH,mBAAUiH,GAAO,IAAIrI,MAAOsI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAMQ3I,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACAzC,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WAEFwP,EAAc/M,EAAK4I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG3I,MAAMuI,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,QAE7FwP,EAAmBzP,EAAWqL,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,QAAmBJ,MAAM,SAAEV,EAAEW,GAAJ,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAEpH,OACI,uBAAK0F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ0D,QAAU8B,EAAQ5B,gBAbV,SAAAjF,GACpBgH,EAAchH,EAAEC,OAAOE,QAY2CkE,MAAQ0C,IACtE,yCACA,eAAC,GAAD,CAAenL,WAAayP,EAAmBjE,cAAgBgE,IAC/D,eAAC,GAAD,QCzBCE,GAAW,SAAC,GAAqB,IAAnBhG,EAAkB,EAAlBA,YAGvB,OACI,2BAASjE,UAAU,gBAAnB,UAEA,sDAEA,eAAC,GAAD,CAAOiE,YAAcA,EAAcC,aAAe,QCP7CgG,GAAc,SAAC,GAAmB,IAAhBvO,EAAe,EAAfA,QAEnBqB,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACAiK,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MAER,OACI,+BAEQtL,EAAQmI,KAAK,SAAAlI,GAAG,OAEX+L,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,MAAQ,GAE9D,qBAAGvH,UAAU,oBAAb,UAAsDpE,EAAItB,OAA1D,IAAmE,+BAAK,IAAIoK,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAuB,YAAflJ,EAAItB,OAAuBkO,GAA2BxL,EAAMrB,EAAS,MAAOsL,GAAQyB,wBAA0Bf,GAA6B3K,EAAMrB,EAASC,EAAItB,QAASiN,OAAzR,IAAoT,YAAf3L,EAAItB,QAAwB,WAA7VsB,EAAItB,cCRtD6P,GAAiB,WAE1B,MAA0B5L,mBAAS,OAAnC,mBAAOyE,EAAP,KAAcoH,EAAd,KACA,EAAkBrH,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,EAAR,EAAQA,MAQR,EAAiBlE,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,EAAR,EAAQA,KACR,EAAoB+F,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,EAAR,EAAQA,QAGR,OACI,uBAAKqE,UAAU,mBAAf,UACI,eAAC,GAAD,CAAQ0D,QAAU,CAAC,MAAO,MAAO,MAAO,OAASC,MAAM,YAAYC,gBAVtD,SAAEjF,GACnByL,EAAUzL,EAAEC,OAAOE,UAUf,uBAAKkB,UAAU,uBAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,mCAASgD,EAAT,OACA,oCAAO,IAAI0B,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQsD,GAAoBpL,EAAMrB,EAASqH,EAAOiE,GAAQqB,aAAeE,GAA2BxL,EAAMrB,EAASqH,EAAOiE,GAAQyB,+BAElP,eAAC,GAAD,CAAa/M,QAAUA,WCxB1B0O,GAAa,WAEtB,IACMpG,EADWlB,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACiB4I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,MAAgC,aAAZqL,EAAGrL,MAAmC,kBAAZqL,EAAGrL,MAAwC,iBAAZqL,EAAGrL,MAAuC,kBAAZqL,EAAGrL,MAAwC,iBAAZqL,EAAGrL,QAEvL,OACI,uBAAKwF,UAAU,iBAAf,UACI,eAAC,GAAD,IACA,eAAC,GAAD,CAAUiE,YAAcA,IAEpBA,EAAY3C,OAAS,GAEjB,eAAC,IAAD,CAAMnC,GAAG,eAAemL,QAAQ,GAAGtK,UAAU,UAA7C,iCAKR,eAAC,GAAD,QCjBCuK,GAAiB,WAE1B,IAAM/E,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCjH,mBAAUiH,GAAO,IAAIrI,MAAOsI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAMQ3I,EAAS+F,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KACAzC,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WAEFiQ,EAAgBxN,EAAK4I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG3I,MAAMuI,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAGrL,QAE/FiQ,EAAqBlQ,EAAWqL,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAGrL,QAAqBJ,MAAM,SAAEV,EAAEW,GAAJ,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAExH,OACI,uBAAK0F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ0D,QAAU8B,EAAQ5B,gBAbV,SAAAjF,GACpBgH,EAAchH,EAAEC,OAAOE,QAY2CkE,MAAQ0C,IACtE,2CACA,eAAC,GAAD,CAAeK,cAAgByE,EAAgBjQ,WAAakQ,IAC5D,eAAC,GAAD,QCvBCC,GAAqB,SAAC,GAAmB,IAAjBzC,EAAgB,EAAhBA,UAE3BnN,EAAWwE,cAsBjB,OACI,sBAAKU,UAAU,aAAf,SACI,yBAAOA,UAAU,yBAAjB,UACI,iCACI,gCACI,qBAAIuE,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,gBACA,qBAAIA,MAAM,QACV,qBAAIA,MAAM,MAAV,eACA,qBAAIA,MAAM,MAAV,wBAGR,iCAEQ0D,EAAUnE,KAAK,SAAA7G,GAAG,OACd,sBAAmB+C,UAAU,oBAAoBc,QAAU,SAAAnC,GAAC,OAzB/D,SAAEA,EAAG1B,GACtB0B,EAAE0E,kBACF1E,EAAEwB,iBACFrF,EAAU4C,GAA0BT,IACpCnC,EAAUuH,GAAW,CACjB7H,KAAMyC,EAAIzC,KACV+H,KAAM,cAmB0EkC,CAAc9F,EAAG1B,IAAjF,UACI,qBAAIsH,MAAM,MAAV,SAAkB,IAAIG,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQoB,SAAUjJ,EAAI+H,aAC7I,oCAAO/H,EAAIgC,KAAKxC,UAAhB,KAA+BQ,EAAIgC,KAAK/C,OAAxC,OACA,8BAAI,oBAAG8D,UAAU,wBACjB,oCAAO/C,EAAIkC,GAAG1C,UAAd,KAA6BQ,EAAIkC,GAAGjD,OAApC,OACA,8BAAMe,EAAIC,MAAMkI,uBAChB,8BAAI,yBAAQpF,UAAU,aAAlB,SAA+B,oBAAGA,UAAU,eAAec,QAAU,SAAAnC,GAAC,OAzClF,SAAEA,EAAG1B,GACrB0B,EAAE0E,kBACF1E,EAAEwB,iBACFrF,EAAU4C,GAA0BT,IACpCnC,EAAUuH,GAAW,CACjB7H,KAAMyC,EAAIzC,KACV+H,KAAM,YAmC6F8C,CAAa1G,EAAG1B,YANzFA,EAAI9C,eCrC7BwQ,GAAuB,SAAC,GAAc,IAAZnQ,EAAW,EAAXA,KAE7BgL,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCjH,mBAAUiH,GAAO,IAAIrI,MAAOsI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAQMiF,EAFW7H,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KAEoB4I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG3I,MAAMuI,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,OAAIA,EAAGrL,OAASA,KAG/G,OACI,uBAAKwF,UAAU,+BAAf,UACI,eAAC,GAAD,CAAQ0D,QAAU8B,EAAQ5B,gBAXV,SAAAjF,GACpBgH,EAAchH,EAAEC,OAAOE,QAU2CkE,MAAQ0C,IAC3D,kBAATlL,GAA4B,iDACnB,kBAATA,GAA4B,0CACnB,iBAATA,GAA2B,yCAC7B,eAAC,GAAD,CAAoByN,UAAY2C,IAChC,eAAC,GAAD,QCvBCC,GAAe,WAExB,IAEMC,EAFW/H,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KAEY4I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAGrL,MAAgC,aAAZqL,EAAGrL,QAE5D,OACI,uBAAKwF,UAAU,iBAAf,UACI,yCACA,eAAC,GAAD,CAAOiE,YAAc6G,EAAS3G,SAAU,CAAC,WAAY,SAAS,UAAW,SAAU,QAAS,YAC5F,eAAC,GAAD,QCVC4G,GAAsB,WAE/B,IAEMC,EAFWjI,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAApCA,KAEmB4I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAGrL,MAAuC,oBAAZqL,EAAGrL,QAE1E,OACI,uBAAKwF,UAAU,iBAAf,UACI,kDACA,eAAC,GAAD,CAAOiE,YAAc+G,EAAgB7G,SAAU,CAAC,WAAY,SAAS,WAAY,SAAU,QAAS,YACpG,eAAC,GAAD,QCZC8G,GAAU,uCAAG,WAAMvD,GAAN,mBAAAhO,EAAA,4DAEV,yCAFU,SAIHwR,MAFP,yCAEoBxD,EAAK,CACjCyD,OAAO,CACH,eAAgB,sBANF,cAIhBC,EAJgB,gBAUAA,EAAKC,OAVL,uBAUdC,EAVc,EAUdA,IAVc,kBAYfA,GAZe,2CAAH,sDCkBVC,GAAS,WAElB,IAAMzQ,EAAWwE,cACTT,EAASkE,aAAY,SAAAC,GAAK,OAAIA,EAAMhI,QAApC6D,KAERgI,qBAAU,WAEN,IAAM2E,EAAwB,uCAAG,oCAAA9R,EAAA,sEAEPuR,GAAY,WAFL,cAEvBQ,EAFuB,gBAGPR,GAAY,WAHL,cAGvBS,EAHuB,gBAIPT,GAAY,WAJL,cAIvBU,EAJuB,iBAKPV,GAAY,WALL,eAKvBW,EALuB,iBAMPX,GAAY,WANL,eAMvBY,EANuB,yBAQtB,CACH,CACIvR,OAAQ,UACRiN,MAAOkE,GACT,CACEnR,OAAQ,UACRiN,MAAOmE,GACT,CACEpR,OAAQ,UACRiN,MAAOoE,GACT,CACErR,OAAQ,UACRiN,MAAOqE,GACT,CACEtR,OAAQ,UACRiN,MAAOsE,KAvBc,4CAAH,qDA4B9BL,IAA2BM,MAAM,SAAAnN,GAAC,OAAI7D,ECnDpC,CACFH,KAAMpB,GACNqB,QDiDmE+D,SAEpE,CAAE7D,IAGL,IAAMiR,EAAOC,mBACPC,EAAQD,mBAQRE,EAAc,WAChBH,EAAKI,QAAQvH,MAAMwH,UAAW,qBAC9BH,EAAME,QAAQvH,MAAMyH,OAAS,KAC7BJ,EAAME,QAAQvH,MAAM0H,QAAU,KAQlC,OACI,uBAAKtM,UAAU,eAAf,UAEI,0BAAQA,UAAU,iBAAlB,UACI,yBAAQc,QArBD,WACfiL,EAAKI,QAAQvH,MAAMwH,UAAW,kBAC9BH,EAAME,QAAQvH,MAAMyH,OAAS,IAC7BJ,EAAME,QAAQvH,MAAM0H,QAAU,KAkBtB,SAA+B,oBAAGtM,UAAU,iBAC5C,oDAGJ,uBAAKuM,IAAMR,EAAO/L,UAAS,eAA3B,UACI,gCACI,qBAAIA,UAAU,cAAd,SACI,qBAAIA,UAAU,cAAd,SAA8BnB,MAElC,8BACI,gBAAC,IAAD,CAASM,GAAG,IAAI2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAA5F,UACI,oBAAGxM,UAAU,gBADjB,YAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,cAAc2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAtG,UACI,oBAAGxM,UAAU,oBADjB,kBAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,YAAY2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAApG,UACI,oBAAGxM,UAAU,yBADjB,gBAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,UAAU2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAlG,UACI,oBAAGxM,UAAU,2BADjB,cAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,UAAU2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAlG,UACA,oBAAGxM,UAAU,eADb,cAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,mBAAmB2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAA3G,UACA,oBAAGxM,UAAU,kBADb,uBAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,kBAAkB2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAA1G,UACI,oBAAGxM,UAAU,2BADjB,sBAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,WAAW2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAnG,UACI,oBAAGxM,UAAU,iBADjB,eAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,gBAAgB2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAxG,UACI,oBAAGxM,UAAU,oBADjB,oBAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,WAAW2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAnG,UACA,oBAAGxM,UAAU,eADb,eAIJ,8BACI,gBAAC,IAAD,CAASb,GAAG,UAAU2B,QAAUoL,EAAclM,UAAY,qBAAGwM,SAA0B,SAAW,IAAlG,UACA,oBAAGxM,UAAU,qBADb,iBAKR,8BACI,8BACI,gBAAC,IAAD,CAASb,GAAG,SAAS2B,QA5EpB,SAAAnC,GACjBA,EAAEwB,iBACFrF,E7BnDJ,uCAAQ,WAAMA,GAAN,eAAApB,EAAA,6DACEsB,EAAOoF,cADT,SAEEqM,YAASzR,GAFX,OAGJF,EAAUsD,MACVtD,EDwOJ,CACIH,KAAMpB,ICxONuB,EHiNJ,CACIH,KAAMpB,IGjNNuB,ELsKJ,CACIH,KAAMpB,KK7KF,2CAAR,wD6B6HkEyG,UAAU,SAAxD,UACI,oBAAGA,UAAU,4BADjB,mBAOZ,2BAASc,QAAUoL,EAAclM,UAAU,oBAA3C,UACI,sBAAKA,UAAU,gBAAgBuM,IAAMN,IAErC,sBAAKjM,UAAU,gBAAf,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO0M,KAAK,IAAIpC,QAAU,eAAC,GAAD,MAC1B,eAAC,IAAD,CAAOoC,KAAK,cAAcpC,QAAU,eAAC,GAAD,MACpC,eAAC,IAAD,CAAOoC,KAAK,YAAYpC,QAAU,eAAC,GAAD,MAClC,eAAC,IAAD,CAAOoC,KAAK,UAAUpC,QAAU,eAAC,GAAD,MAChC,eAAC,IAAD,CAAOoC,KAAK,kBAAkBpC,QAAU,eAAC,GAAD,CAAsB9P,KAAO,oBACrE,eAAC,IAAD,CAAOkS,KAAK,gBAAgBpC,QAAU,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOoC,KAAK,WAAWpC,QAAU,eAAC,GAAD,MACjC,eAAC,IAAD,CAAOoC,KAAK,eAAepC,QAAU,eAAC,GAAD,MACrC,eAAC,IAAD,CAAOoC,KAAK,UAAUpC,QAAU,eAAC,GAAD,MAChC,eAAC,IAAD,CAAOoC,KAAK,mBAAmBpC,QAAU,eAAC,GAAD,MACzC,eAAC,IAAD,CAAOoC,KAAK,WAAWpC,QAAU,eAAC,GAAD,CAAsB9P,KAAM,oBAC7D,eAAC,IAAD,CAAOkS,KAAK,UAAUpC,QAAU,eAAC,GAAD,CAAsB9P,KAAM,mBAC5D,eAAC,IAAD,CAAOkS,KAAK,IAAIpC,QAAU,eAAC,IAAD,CAAUnL,GAAG,oBE3KlDwN,GAAe,WAExB,IAAM7R,EAAWwE,cAETsN,EAAa7J,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAAxC4P,UAEA5H,EAAmH4H,EAAnH5H,SAAUD,EAAyG6H,EAAzG7H,eAAgBE,EAAyF2H,EAAzF3H,UAAWC,EAA8E0H,EAA9E1H,UAAWhJ,EAAmE0Q,EAAnE1Q,OAAQgB,EAA2D0P,EAA3D1P,MAAO2P,EAAoDD,EAApDC,YAAarI,EAAuCoI,EAAvCpI,OAAQsI,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,cAAeC,EAAQJ,EAARI,IASnH,OACI,uBAAKhN,UAAU,gBAAf,UACI,gDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,6CAEV,0CAAW,gCAAQ9C,EAAMkI,0BAEzB,mDAAoB,uCAAUJ,QAE9B,qDAAsB,uCAAUD,QAEhC,sDAAuB,uCAAUC,EAAWD,QAE5C,8CAAe,gCAAQG,OAEvB,2CAAY,gCAAQhJ,OAEpB,2CAAY,gCAAQ+I,OAEpB,oDAAqB,sCAAS8H,EAAT,IAA2BD,QAE9CE,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMpO,OAAO,SAASsO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,OAEzB,2CAAY,gCAAQrI,UAKL,cAAXA,GAA0B,yBAAQ1D,QAvCxB,SAAAnC,GACtBA,EAAEwB,iBACFrF,EAAUuH,GAAW,CACjB7H,KAAM,mBAoCkEwF,UAAU,mBAAhD,8B,6BCnDxCmN,GAAsB,SAAAC,GAExB,GAAKA,EAAQ,CAIT,IAFAA,EAAQA,EAAMC,YAEH7F,SAAS,UAChB,OAAO,EAGX,IAAI,IAAJ,MAP2B,CAAC,IAAK,IAAK,IAAK,IAAK,UAOhD,eAA0C,CAArC,IAAI8F,EAAQ,KACb,GAAKF,EAAM5F,SAAU8F,GACjB,OAAO,EAIf,OAAO,IAKFC,GAAc,SAAAC,GAAQ,IAAD,sDAE9B,MAAqB,kBAATA,IACHA,EAAKlM,OAAS,GAAc,KAATkM,GAAwB,MAATA,GAAgBL,GAAqBK,IAClE,CACFC,IAAI,EACJC,IAAK,mBAKZF,EAAKtQ,MAAQC,KAAKwQ,MACZ,CACHF,IAAI,EACJC,IAAK,kDAGR,UAAAF,EAAKtR,cAAL,eAAaoF,QAAS,GAAqB,KAAhBkM,EAAKtR,QAAiC,MAAhBsR,EAAKtR,QAAkBiR,GAAqBK,EAAKtR,QAC5F,CACHuR,IAAI,EACJC,IAAK,gCAGY,KAArBF,EAAKxR,cAAuB4R,MAAOJ,EAAKxR,eAAiB,UAAAwR,EAAKxR,mBAAL,eAAkBsF,QAAS,GAAK6L,GAAqBK,EAAKxR,aAC7G,CACFyR,IAAI,EACJC,IAAK,uCAGR,UAAAF,EAAKvO,YAAL,eAAW/C,OAAOoF,QAAS,GAA2B,MAAtB,UAAAkM,EAAKvO,YAAL,eAAW/C,SAAuC,OAAtB,UAAAsR,EAAKvO,YAAL,eAAW/C,SAAkBiR,GAAmB,UAAEK,EAAKvO,YAAP,aAAE,EAAW/C,QACnH,CACHuR,IAAI,EACJC,IAAK,2CAGR,UAAAF,EAAKrO,UAAL,eAASjD,OAAOoF,QAAS,GAAyB,MAApB,UAAAkM,EAAKrO,UAAL,eAASjD,SAAqC,OAApB,UAAAsR,EAAKrO,UAAL,eAASjD,SAAkBiR,GAAmB,UAAEK,EAAKrO,UAAP,aAAE,EAASjD,QAC3G,CACHuR,IAAI,EACJC,IAAK,6CAGR,UAAAF,EAAK/Q,iBAAL,eAAgB6E,QAAS,GAAwB,KAAnBkM,EAAK/Q,WAAuC,MAAnB+Q,EAAK/Q,WAAqB0Q,GAAqBK,EAAK/Q,WACrG,CACHgR,IAAI,EACJC,IAAK,mCAGe,KAAxBF,EAAKK,iBAA0BD,MAAOJ,EAAKK,kBAAoB,UAAAL,EAAKK,sBAAL,eAAqBvM,QAAS,GAAK6L,GAAqBK,EAAKK,gBACtH,CACFJ,IAAI,EACJC,IAAK,0CAGR,UAAAF,EAAKvO,YAAL,eAAWxC,UAAU6E,QAAS,GAA8B,MAAzB,UAAAkM,EAAKvO,YAAL,eAAWxC,YAA6C,OAAzB,UAAA+Q,EAAKvO,YAAL,eAAWxC,YAAqB0Q,GAAmB,UAAEK,EAAKvO,YAAP,aAAE,EAAW/C,QAC5H,CACHuR,IAAI,EACJC,IAAK,8CAGR,UAAAF,EAAKrO,UAAL,eAAS1C,UAAU6E,QAAS,GAA4B,MAAvB,UAAAkM,EAAKrO,UAAL,eAAS1C,YAA2C,OAAvB,UAAA+Q,EAAKrO,UAAL,eAAS1C,YAAqB0Q,GAAmB,UAAEK,EAAKrO,UAAP,aAAE,EAASjD,QACpH,CACHuR,IAAI,EACJC,IAAK,+CAGW,KAAnBF,EAAKtI,YAAqB0I,MAAOJ,EAAKtI,aAAe,UAAAsI,EAAKtI,iBAAL,eAAgB5D,QAAS,GAAK6L,GAAqBK,EAAKtI,WACvG,CACHuI,IAAI,EACJC,IAAK,kCAGS,KAAjBF,EAAKrI,UAAmByI,MAAOJ,EAAKrI,WAAa,UAAAqI,EAAKrI,eAAL,eAAc7D,QAAS,GAAK6L,GAAqBK,EAAKrI,SACjG,CACHsI,IAAI,EACJC,IAAK,iCAGR,UAAAF,EAAKvI,iBAAL,eAAgB3D,QAAS,GAAwB,KAAnBkM,EAAKvI,WAAuC,MAAnBuI,EAAKvI,WAAqBkI,GAAqBK,EAAKvI,WACrG,CACHwI,IAAI,EACJC,IAAK,oCAGR,UAAAF,EAAKlT,cAAL,eAAagH,QAAS,GAAqB,KAAhBkM,EAAKlT,QAAiC,MAAhBkT,EAAKlT,QAAkB6S,GAAqBK,EAAKlT,QAC5F,CACHmT,IAAI,EACJC,IAAK,mDAGR,UAAAF,EAAK/S,cAAL,eAAa6G,QAAS,GAAqB,KAAhBkM,EAAK/S,QAAiC,MAAhB+S,EAAK/S,QAAkB0S,GAAqBK,EAAK/S,QAC5F,CACHgT,IAAI,EACJC,IAAK,oDAGWrJ,IAAlBmJ,EAAKxI,WAA4BwI,EAAKxI,UAAY,GAAuB,KAAlBwI,EAAKxI,UAAqC,MAAlBwI,EAAKxI,UAAoB4I,MAAOJ,EAAKxI,WAAcmI,GAAqBK,EAAKxI,WACvJ,CACHyI,IAAI,EACJC,IAAK,iDAGRP,GAAqBK,EAAKX,aACpB,CACHY,IAAI,EACJC,IAAK,iEAGgB,KAAxBF,EAAKM,iBAA0BF,MAAOJ,EAAKM,kBAAoB,UAAAN,EAAKM,sBAAL,eAAqBxM,QAAS,GAAK6L,GAAqBK,EAAKM,gBACvH,CACFL,IAAI,EACJC,IAAK,uDAGerJ,IAAtBmJ,EAAKO,eAAgCP,EAAKO,cAAgB,GAA2B,KAAtBP,EAAKO,cAA6C,MAAtBP,EAAKO,cAAwBH,MAAOJ,EAAKO,eAAkBZ,GAAqBK,EAAKO,eAC3K,CACHN,IAAI,EACJC,IAAK,gEAGiBrJ,IAAxBmJ,EAAKQ,iBAAkCR,EAAKQ,gBAAkB,GAA6B,KAAxBR,EAAKQ,gBAAiD,MAAxBR,EAAKQ,gBAA0BJ,MAAOJ,EAAKQ,iBAAoBb,GAAqBK,EAAKQ,iBACrL,CACHP,IAAI,EACJC,IAAK,sDAGSrJ,IAAhBmJ,EAAKV,SAA0BU,EAAKV,QAAU,GAAqB,KAAhBU,EAAKV,QAAiC,MAAhBU,EAAKV,QAAkBc,MAAOJ,EAAKV,SAAYK,GAAqBK,EAAKV,SAC7I,CACHW,IAAI,EACJC,IAAK,4DAGR,UAAAF,EAAKzF,uBAAL,eAAsBzG,QAAS,GAA8B,KAAzBkM,EAAKzF,iBAAmD,MAAzByF,EAAKzF,iBAA2BoF,GAAqBK,EAAKzF,iBACvH,CACH0F,IAAI,EACJC,IAAK,kDAIN,CACHD,IAAI,IC9JCQ,GAAmB,SAAEzT,GAE9B,MAA4BuI,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAA/CA,EAAR,EAAQA,KAAM4P,EAAd,EAAcA,UACNtK,EAAcS,aAAY,SAAAC,GAAK,OAAIA,EAAMkL,UAAzC5L,UACA/H,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WACAoB,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QAEF0N,EAAmBrM,EAAK4I,QAAQ,SAAAC,GAAE,MAAgB,aAAZA,EAAGrL,MAAmC,kBAAZqL,EAAGrL,MAAwC,UAAZqL,EAAGrL,QAElG8O,EAAgB3N,EAAQmI,KAAK,SAAA+B,GAAE,OAAIA,EAAGvL,UAExC6T,EAAmB,GAKvB,OAJOA,EAAP3T,EAA0BD,EAAWqL,QAAQ,SAAAC,GAAE,OAAIA,EAAGrL,OAASA,KAAOsJ,KAAK,SAAA+B,GAAE,OAAIA,EAAGvL,UAASF,OACnEG,EAAWqL,QAAQ,SAAAC,GAAE,OAAIA,EAAGrL,OAAS8H,KAAYwB,KAAK,SAAA+B,GAAE,OAAIA,EAAGvL,UAASF,OAG3F,CACH4C,OACA4P,YACAtK,YACA+G,mBACA1N,UACA2N,gBACA6E,qBCvBKC,GAAU,uCAAG,WAAQC,GAAR,mBAAA3U,EAAA,4DAEL,oDACX4U,EAAW,IAAIC,UACZC,OAAO,gBAAiB,kBACjCF,EAASE,OAAO,OAAQH,GALF,kBAQCnD,MANN,mDAMuB,CAChCuD,OAAQ,OACRC,KAAMJ,IAVQ,YAQZlD,EARY,QAaRqC,GAbQ,kCAcUrC,EAAKC,OAdf,eAcRsD,EAdQ,yBAePA,EAAUC,YAfH,yBAiBFxD,EAAKC,OAjBH,+EAoBlBjQ,QAAQC,IAAR,MApBkB,0DAAH,sDCCVwT,GAAa,SAAC,GAA6C,IAA3CrQ,EAA0C,EAA1CA,WAAYsQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAE1CC,EAAYhD,kBAAQ,GAE1BnF,qBAAU,WACN,OAAO,WACHmI,EAAU7C,SAAU,KAEzB,IAEH,MAAgD5N,mBAAUC,EAAWwO,KAArE,mBAAOiC,EAAP,KAAyBC,EAAzB,KACMC,EAAcnD,mBAOdoD,EAAuB,uCAAI,WAAMzQ,GAAN,eAAAjF,EAAA,yDAC7BiF,EAAEwB,iBAE6B,IAA1BxB,EAAEC,OAAOyQ,MAAM/N,OAHS,gBAIzB4N,GAAqB,GAJI,8BAMzBH,GAAc,GANW,SAOPX,GAAYzP,EAAEC,OAAOyQ,MAAM,IAPpB,OAOnBrC,EAPmB,OAQpBgC,EAAU7C,UACX3N,EAAWwO,IAAMA,EACjBkC,GAAqB,GACrBH,GAAc,IAXO,4CAAJ,sDAgB7B,OACI,uBAAK/O,UAAU,iBAAf,UACI,wBAAOuM,IAAM4C,EAAcG,UAAU,EAAO3O,SAAWyO,EAA0BzU,KAAK,OAAOkE,KAAK,UAAU1E,GAAG,UAAUoV,OAAO,4BAChI,yBAAQvP,UAAS,cAAUiP,EAAmB,QAAU,IAAMnO,QAxB3C,SAAAnC,GACvBA,EAAEwB,iBACFgP,EAAYhD,QAAQ3I,SAsBhB,SACEyL,EACM,+DACyB,oBAAGjP,UAAU,gCAEtC,8DACwB,oBAAGA,UAAU,qCAI3C8O,GAAa,iDCtCdU,GAAQ,SAAC,GAAqB,IAAnBtD,EAAkB,EAAlBA,YAEdpR,EAAWwE,cACjB,EAAkCf,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BxQ,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAAsCnR,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB2T,EAApB,KACA,EAA4CpR,mBAAS,CACjDjE,OAAQ,GACRG,OAAQ,KAFZ,mBAAOqT,EAAP,KAAuB8B,EAAvB,KAIA,EAAsCrR,mBAAS,IAA/C,mBAAOsR,EAAP,KAAoBC,EAApB,KAEA,EAAgE7B,GAAkB,SAA1ErB,EAAR,EAAQA,UAAWtD,EAAnB,EAAmBA,cAAe6E,EAAlC,EAAkCA,iBAAkBxS,EAApD,EAAoDA,QAEpD,EAA2D0C,GAASuO,GAAwB,CACxF1P,MAAOC,KAAKwQ,MACZzR,OAAQoN,EAAc,GACtBpE,UAAW,GACX1K,KAAM,QACNyK,UAAWkJ,EAAiB,GAC5BnJ,SAAU,EACVD,eAAgB,EAChB+H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbrI,OAAQ,cAXZ,mBAAQhG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KA+FA,OACI,wBAAMkB,SAlFW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM4P,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,OAA0B,CACrC,IAAM6T,EAAWxC,GAAavR,GAC9B,IAAM+T,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAWtC,OAASF,EACpBlB,EAAUiB,GAAoB,CAC1BzB,OAAQ0B,EACRH,WAAY,MAKpB,GAA6B,mBAAzB2C,EAAWyG,UAAgC,CAC3C,IAAM8K,EAAWxC,GAAaO,GAC9B,IAAMiC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAWyG,UAAY6I,EAAexT,OAEtCQ,EAAUD,GAAsB,CAC5BP,OAAQwT,EAAexT,OACvBE,KAAM,QACNC,OAAQqT,EAAerT,UAK/B,GAA8B,gBAAzB+D,EAAWyG,UAA8B,CAC1C,IAAM8K,EAAWxC,GAAasC,GAC9B,IAAME,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAWyG,UAAY4K,EAEvB/U,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,MAAmB,YAAfA,EAAItB,UAAuBH,GACpDG,OAAQ,UACRuB,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAGvL,UAAuBuB,YAArD,CAAiEgU,OAI9EjD,GACD9R,EAAU8C,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/D5F,EAAUsC,GAAqB,6BACxBoB,GADuB,IAE1BrE,GAAIgD,KAAKwQ,QACT,eACJlN,IAAKC,KAAK,cAAe,kCAAmC,YAEhEwL,EAAYvN,QA5DR+Q,EAAYK,EAASrC,MA4EzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAH,gBAEX6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE5C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMgR,EAAgBhR,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGjK,uBAAKZ,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOrF,KAAK,OAAOkE,KAAK,YAAYC,MAAQN,EAAW0G,UAAYvE,SAAWjC,EAAekC,YAAY,8BAGjH,uBAAKZ,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWyG,UAAYtE,SAAWjC,EAAesB,UAAqC,mBAAzBxB,EAAWyG,UAAiC,WAAa,GAAvJ,UACI,4BAAUgL,MAAM,aAAhB,UAEQ9B,EAAiBrK,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAAKyJ,UAAW,EAA3C,SAAqDzJ,GAAvCA,MAE9C,yBAAQ/G,MAAM,iBAAd,mCAEJ,4BAAUmR,MAAM,UAAhB,UAEQtU,EAAQ8L,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAGvL,UAAsBuB,WAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAErF,yBAAQ/G,MAAM,cAAd,0CAIqB,mBAAzBN,EAAWyG,WACC,uCACI,wBAAOpE,QAAQ,iBAAf,qCACA,wBAAO1G,GAAG,iBAAiB0E,KAAK,SAASC,MAAQgP,EAAexT,OAASqG,SAAW,SAAAhC,GAAC,OAAIiR,EAAkB,6BAAI9B,GAAL,mBAAsBnP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,gCACtM,wBAAOC,QAAQ,cAAf,qBACA,wBAAO1G,GAAG,cAAc0E,KAAK,SAASC,MAAQgP,EAAerT,OAASkG,SAAW,SAAAhC,GAAC,OAAIiR,EAAkB,6BAAK9B,GAAN,mBAAuBnP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWnE,KAAK,OAAOiG,YAAY,iCAKjL,gBAAzBpC,EAAWyG,WACC,uCACI,wBAAOpE,QAAQ,cAAf,yCACA,wBAAO1G,GAAG,cAAc0E,KAAK,SAASC,MAAQ+Q,EAAclP,SAAW,SAAAhC,GAAC,OAAImR,EAAgBnR,EAAEC,OAAOE,QAAUkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,gCAKzK,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,uBAAKlQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAOlG,KAAK,SAASkE,KAAK,SAASC,MAAQN,EAAWsO,OAASnM,SAAWjC,EAAekC,YAAY,IAAIsP,IAAK,OAElH,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QAjGhB,SAAAnC,GACjBA,EAAEwB,iBACciQ,OAAOC,QAAQ,2EAG3BvV,EAAUiD,GAAyB6O,EAAUzS,KAC7C+R,EAAYvN,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aA0FPV,UAAU,iCAA3C,6BC3MpBsQ,GAAmB,SAAC,GAA2B,IAAzB/N,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YAErC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,CAAc2J,YAAcA,IAC5B,eAAC,GAAD,CAAOA,YAAaA,OCE7CqE,GAAc,SAAC,GAAqB,IAyFzC1U,EAzFsBqQ,EAAkB,EAAlBA,YAEpBpR,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACR,EAA2C4C,mBAAS,IAApD,mBAAOsP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BjS,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KAEA,EAAuDzB,GAAiB,SAAhErB,EAAR,EAAQA,UAAWtD,EAAnB,EAAmBA,cAAe6E,EAAlC,EAAkCA,iBAElC,EAA2D9P,GAAQ,6BAC5DuO,GAD2D,IAE9DnQ,UAAW,IACXsR,aAAc,EACdC,eAAgBpB,EAAU5H,SAAW4H,EAAU7H,kBAJnD,mBAAQvG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAmFA,OAFsClD,EAAhB,gBAAtB2C,EAAWtC,OAAwC,IAAmBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,WAGxH,wBAAMoE,SA7EW,SAAAtB,GAYjB,GAXAA,EAAEwB,iBAEFxE,EAAQ8L,MAAM,SAAA7L,GAAG,MAAmB,YAAfA,EAAItB,UAAuBuB,WAAW9B,SAAS,SAAA0O,GACnDjK,EAAWyG,aAQvBiB,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmB,SAAU1H,EAAWwP,kBAAqB,GAAK9H,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAkB7G,SAAU1H,EAAWuP,cAAiB,EAEhOtN,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAKwF,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmB,SAAU1H,EAAWwP,gBAAmB,GAAK9H,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAkB7G,SAAU1H,EAAWuP,gBAAmB,EAEhOtN,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMqP,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMsT,EAAWxC,GAAaM,GAClC,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGrBlP,EAAW/B,UAAYoR,EAEvB/S,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWtC,OACnBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,YAA7D,CAAyEgS,OAK3FjB,EAAUG,cAAgBvO,EAAWuO,cAAgB7G,SAAS1H,EAAWuP,cACzEnB,EAAU7H,eAAiBvG,EAAWuG,eAAiBmB,SAAS1H,EAAWwP,gBAC3EpB,EAAUpI,OAAWhG,EAAWsO,OAAStO,EAAWuO,cAAgBvO,EAAWuP,aAAiB,EAAI,YAAc,UAElHjT,EAAU8C,GAA2BgP,IAErC9R,EAAUsC,GAAsB,CAC5BjD,GAAIgD,KAAKwQ,MACT8C,aAAcjS,EAAWrE,GACzB+C,MAAOsB,EAAWtB,MAClB8H,SAAUxG,EAAWwP,eACrB9R,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtBwI,UAAWzG,EAAWyG,UACtByL,OAAQ9D,EAAU1H,UAClB1K,KAAM,QACNsS,OAAQtO,EAAWuP,cACpB,eAEHtN,IAAKC,KAAK,iBAAV,UAAgClC,EAAWuP,aAA3C,kCAA0F,WAE1F7B,EAAYvN,QA1CR+Q,EAAYK,EAASrC,OAkDzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,+CACEyP,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQsP,UAAQ,EAACtR,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAtE,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGR,uBAAKkB,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAEIjD,EAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAEvC,yBAAQ/G,MAAM,iBAAd,gCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQ+O,EAAiBlN,SAAW,SAAAhC,GAAC,OAAI6R,EAAkB7R,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAG3K,uBAAKZ,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOmQ,UAAQ,EAACxV,KAAK,OAAOkE,KAAK,YAAYC,MAAQN,EAAW0G,UAAYvE,SAAWjC,EAAekC,YAAY,gBAG1H,uBAAKZ,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQsP,UAAQ,EAACtR,KAAK,YAAYC,MAAQN,EAAWyG,UAAYtE,SAAWjC,EAA5E,UACI,4BAAUuR,MAAM,aAAhB,UAEQ9B,EAAiBrK,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAAKyJ,UAAW,EAA3C,SAAqDzJ,GAAvCA,MAE9C,yBAAQ/G,MAAM,iBAAd,mCAEJ,4BAAUmR,MAAM,UAAhB,UAEQtU,EAAQ8L,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAGvL,UAAsBuB,WAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAErF,yBAAQ/G,MAAM,cAAd,6CAIZ,uBAAKkB,UAAU,kBAAf,UACI,wBAAOa,QAAQ,iBAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOmQ,SAAWjK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,iBAAmB,EAAmBpS,KAAK,SAASkE,KAAK,iBAAiBC,MAAQN,EAAWwP,eAAiB2C,IAAMzK,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmL,IAAK,EAAGvP,SAAWjC,EAAekC,YAAa,OAEjT,sDAAyBgM,EAAU5H,SAAW4H,EAAU7H,qBAE5D,uBAAK/E,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAOsP,SAAWjK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,iBAAmB,EAAmBpS,KAAK,SAASkE,KAAK,eAAeC,MAAQN,EAAWuP,aAAe4C,IAAMzK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAiBmD,IAAK,EAAGvP,SAAWjC,EAAekC,YAAY,MACrS,6CAAgBgM,EAAUE,OAASF,EAAUG,cAA7C,0BAEJ,2BAAU/M,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAEzH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBrF,KAAK,SAA3C,0BACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,6BCtKP4Q,GAAiB,SAAC,GAAqB,IAoG5C/U,EApGyBqQ,EAAkB,EAAlBA,YAEvBpR,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACA6G,EAAUO,aAAY,SAAAC,GAAK,OAAIA,EAAMkL,UAArC1L,MACR,EAA2CjE,mBAAS,IAApD,mBAAOsP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BjS,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KAEA,EAAqCzB,KAA7BrB,EAAR,EAAQA,UAAWtD,EAAnB,EAAmBA,cAEnB,EAA2DjL,GAAQ,6BAC5DuO,GAD2D,IAE9DoB,eAAgBpB,EAAU5H,SAAW4H,EAAU7H,eAC/CgJ,aAAc,KAHlB,mBAAQvP,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KA8FA,OAHsClD,EAAhB,gBAAtB2C,EAAWtC,OAAwC,IAAmBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,WAIxH,wBAAMoE,SAzFW,SAAAtB,GAIjB,GAHAA,EAAEwB,iBAGG+F,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmB,SAAU1H,EAAWwP,kBAAqB,GAAK9H,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAkB7G,SAAU1H,EAAWuP,cAAiB,EAEhOtN,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAKwF,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmB,SAAU1H,EAAWwP,gBAAmB,GAAK9H,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAkB7G,SAAU1H,EAAWuP,gBAAmB,EAEhOtN,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMqP,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMsT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAW/B,UAAYoR,EAEvB/S,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWtC,OACnBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,YAA7D,CAAyEgS,OAK3FjB,EAAUG,cAAgBvO,EAAWuO,cAAgB7G,SAAS1H,EAAWuP,cACzEnB,EAAU7H,eAAiBvG,EAAWuG,eAAiBmB,SAAS1H,EAAWwP,gBAC3EpB,EAAUpI,OAAWhG,EAAWsO,OAAStO,EAAWuO,cAAgBvO,EAAWuP,aAAiB,EAAI,YAAc,UAElHjT,EAAU8C,GAA2BgP,IAEb,aAAnBA,EAAUpS,MAEXM,EAAUsC,GAAsB,CAC5BjD,GAAIgD,KAAKwQ,MACT8C,aAAcjS,EAAWrE,GACzB+C,MAAOsB,EAAWtB,MAClB8H,SAAUxG,EAAWwP,eACrB9R,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtBwI,UAAW,QAASzG,EAAWhE,KAC/BkW,OAAQ9D,EAAU1H,UAClB4H,OAAQtO,EAAWuP,aACnBvT,KAAM,SACP,eACHiG,IAAKC,KAAK,iBAAV,UAAgClC,EAAWuP,aAA3C,kCAA0F,YAE/D,iBAAnBnB,EAAUpS,OAElBM,EAAUsC,GAAsB,CAC5BjD,GAAIgD,KAAKwQ,MACT8C,aAAcjS,EAAWrE,GACzB+C,MAAOsB,EAAWtB,MAClB8H,SAAUxG,EAAWwP,eACrB9R,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtBwI,UAAW,iBACX4L,QAASjE,EAAUzH,QACnB3K,KAAM,UACNsS,OAAQtO,EAAWuP,cACpB,iBAEHtN,IAAKC,KAAK,kBAAV,UAAiClC,EAAWuP,aAA5C,kCAA2F,YAG/F7B,EAAYvN,QA7DR+Q,EAAYK,EAASrC,OAsEzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,8BAAgB,aAAVwC,EAAuB,kBAAoB,0BAC/CiN,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQsP,UAAQ,EAACtR,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAtE,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGR,uBAAKkB,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BL,EAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQ/G,MAAM,iBAAd,gCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQ+O,EAAiBlN,SAAW,SAAAhC,GAAC,OAAI6R,EAAkB7R,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAG3K,sBAAKZ,UAAU,iBAAf,SAEQxB,EAAW0G,UACP,uCACI,wBAAOrE,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOmQ,UAAQ,EAACxV,KAAK,OAAOkE,KAAK,YAAYC,MAAQN,EAAW0G,UAAYvE,SAAWjC,EAAekC,YAAY,gBAI1H,uCACI,wBAAOC,QAAQ,UAAf,uBACA,sBAAKb,UAAU,UAAf,SACI,wBAAOmQ,UAAQ,EAACxV,KAAK,OAAOkE,KAAK,UAAUC,MAAQN,EAAW2G,QAAUxE,SAAWjC,EAAekC,YAAY,kBAKlI,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,iBAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOmQ,SAAWjK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,iBAAmB,EAAmBpS,KAAK,SAASkE,KAAK,iBAAiBC,MAAQN,EAAWwP,eAAiB2C,IAAMzK,SAAS1H,EAAWwG,UAAYkB,SAAS1H,EAAWuG,gBAAkBmL,IAAK,EAAGvP,SAAWjC,EAAekC,YAAa,OAEjT,sDAAyBgM,EAAU5H,SAAW4H,EAAU7H,qBAE5D,uBAAK/E,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAOsP,SAAWjK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,iBAAmB,EAAmBpS,KAAK,SAASkE,KAAK,eAAeC,MAAQN,EAAWuP,aAAe4C,IAAMzK,SAAS1H,EAAWsO,QAAU5G,SAAS1H,EAAWuO,eAAiBmD,IAAK,EAAGvP,SAAWjC,EAAekC,YAAY,MACrS,6CAAgBgM,EAAUE,OAASF,EAAUG,cAA7C,0BAEJ,2BAAU/M,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBrF,KAAK,SAA3C,0BACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,6BCtLH8Q,GAAe,WAExB,MAA4F/N,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,KAAK4P,aAApH5H,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAW/I,EAA7B,EAA6BA,OAAQO,EAArC,EAAqCA,UAAWS,EAAhD,EAAgDA,MAAO2P,EAAvD,EAAuDA,YAAaC,EAApE,EAAoEA,OAAQ4D,EAA5E,EAA4EA,OAAQ1D,EAApF,EAAoFA,IAEpF,OACI,uBAAKhN,UAAU,gBAAf,UACI,gDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,+CAEV,0CAAW,gCAAQ9C,EAAMkI,0BAEzB,6CAAc,uCAAU2L,KAAKC,IAAKhM,SAElC,oDAAqB,gCAAQ9I,OAE7B,8CAAe,gCAAQO,OAErBqQ,GAAU,2CAAY,gCAAQA,OAEhC,2CAAY,gCAAQ7H,OAElByL,GAAU,2CAAY,gCAAQA,OAE9B1D,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMpO,OAAO,SAASsO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCf5BoE,GAAoB,SAAC,GAAqB,IAAD,IAAlB/E,EAAkB,EAAlBA,YAE1BpR,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACAsL,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MAER,EAAkC1I,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BxQ,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAAsCnR,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB2T,EAApB,KACA,EAA4CpR,mBAAS,IAArD,mBAAOsP,EAAP,KAAuBqD,EAAvB,KACA,EAA4C3S,mBAAS,CACjDjE,OAAQ,GACRG,OAAQ,KAFZ,mBAAOqT,EAAP,KAAuB8B,EAAvB,KAIA,EAA8CrR,mBAAS,IAAvD,mBAAOwJ,EAAP,KAAwBoJ,EAAxB,KAEA,EAAwElD,KAAhE3L,EAAR,EAAQA,UAAWsK,EAAnB,EAAmBA,UAAWtD,EAA9B,EAA8BA,cAAe6E,EAA7C,EAA6CA,iBAAkBnR,EAA/D,EAA+DA,KAE/D,EAA2DqB,GAASuO,GAAwB,CACxF1P,MAAO,IAAIC,KACXjB,OAAQoN,EAAc,GACtB7M,UAAS,UAAEd,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWgP,EAAc,aAAlD,aAAE,EAAqDzN,WAAW,GAC3EoJ,UAAWkJ,EAAiB,GAC5BnJ,SAAU,GACV6H,YAAa,GACbG,IAAK,KAPT,mBAAQxO,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KASAP,EAAWtB,MAAQ,IAAIC,KAAMqB,EAAWtB,OAGxC,IA2IIrB,EA3IEuV,GAAyB,OAATxE,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eAAgBzT,EAAKyK,MAAM,SAAA5B,GAAE,OAAIA,EAAG1L,KAAOyS,EAAU6D,gBA+ItF,OAHsC5U,EAAhB,gBAAtB2C,EAAWtC,OAAwC,IAAgB,UAAGP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,iBAAhD,aAAG,EAAuDL,WAIzH,qCACA,wBAAMoE,SA/IW,SAAAtB,GAOjB,GANAA,EAAEwB,iBAEF3B,EAAWtB,MAAQC,KAAKkU,MAAM7S,EAAWtB,OAIpCgJ,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAepM,WAAckB,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAerM,iBAAxB,OAA0C6H,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW5H,WAAakB,SAAU1H,EAAWwG,YAAe,GAAKkB,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAetE,SAAY5G,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAerE,gBAAxB,OAA0CH,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWE,SAAW5G,SAAU1H,EAAWsO,QAAW,EAEtRrM,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAKwF,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAepM,WAAckB,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAerM,iBAAxB,OAA0C6H,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW5H,WAAakB,SAAU1H,EAAWwG,UAAa,GAAKkB,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAetE,SAAY5G,SAAQ,OAACkL,QAAD,IAACA,OAAD,EAACA,EAAerE,gBAAxB,OAA0CH,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWE,SAAW5G,SAAU1H,EAAWsO,UAAa,EAEtRrM,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMqP,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,OAA0B,CAErC,IADiBqR,GAAa,CAAEvR,YAAaA,EAAa6R,eAAgBA,IAC3DJ,GAEX,YADAiC,EAAY,2CAIhBlR,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYoR,EACvB/S,EAAUiB,GAAoB,CAC1BzB,OAAQ0B,EACRH,WAAY,CAAEgS,MAKtB,GAA0B,gBAAtBrP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMsT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAW/B,UAAYoR,EAEvB/S,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWtC,OACnBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,YAA7D,CAAyEgS,OAK3F,GAA6B,mBAAzBrP,EAAWyG,UAAgC,CAE3C,IAAM8K,EAAWxC,GAAaO,GAC9B,IAAMiC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAIzBlP,EAAWyG,UAAY6I,EAAexT,OAEtCQ,EAAUD,GAAsB,CAC5BP,OAAQwT,EAAexT,OACvBE,KAAM8H,EACN7H,OAAQqT,EAAerT,U1CwFD,IAAA6W,E0CpFzB1E,GAEIA,EAAU6D,cACX3V,G1CiFsBwW,E0CjFW,CAC7Bb,aAAc7D,EAAU6D,aACxBhU,UAAW+B,EAAW/B,UACtB8U,iBAAkBrL,SAAU0G,EAAU5H,UACtCwM,cAAetL,SAAU1H,EAAWwG,UACpCyM,eAAgB7E,EAAUE,OAC1B4E,aAAcxL,SAAU1H,EAAWsO,S1C4EnD,uCAAO,WAAOhS,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAkD,GACLA,EAAI9C,KAAOmX,EAAMb,cAClB3V,EAAU8C,GAA0B,6BAC7BX,EAAI/C,QADwB,IAE/BC,GAAI8C,EAAI9C,GACRsC,UAAW6U,EAAM7U,UACjBsI,eAAkB9H,EAAI/C,OAAO6K,eAAiBuM,EAAMC,iBAAmBD,EAAME,cAC7EzE,cAAiB9P,EAAI/C,OAAO6S,cAAgBuE,EAAMG,eAAiBH,EAAMI,aACzElN,OAAUvH,EAAI/C,OAAO8K,UAAY/H,EAAI/C,OAAO6K,eAAiBuM,EAAMC,kBAAoBD,EAAME,cAAiB,EAAI,YAAc,iBAbzI,2CAAP,0D0CvEQ1W,EAAU8C,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,YAEzC,YAAd4B,GAEmB,YAAtB9D,EAAWtC,SACZsC,EAAWwG,SAAW+B,GAAY,CAAC,CAACzM,OAAQyN,EAAiBR,MAAOrB,SAAS1H,EAAWwG,YAAc,MAAOiC,GAC7GzI,EAAWuJ,gBAAkB,OAGjCjN,EAAUsC,GAAqB,cAE3B5C,KAAM8H,GACH9D,GACJ,iBACHiC,IAAKC,KAAK,mBAAoB,kCAAmC,YAE5C,UAAd4B,IAEPxH,EAAUsC,GAAqB,cAC3B5C,KAAM8H,GACH9D,GACJ,eACHiC,IAAKC,KAAK,mBAAoB,kCAAmC,YAErEwL,EAAYvN,QA7FR+Q,EAAYK,EAASrC,OAyHzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,gCAAM4M,EAAY,oBAAH,gBAAmCtK,GAAlD,OACEmN,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,WACV2R,QAAU,IAAIxU,OAElB,uBAAK6C,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,SAAwC,YAAdyB,EAA0B,sBAAwB,sBAC5E,0BAAQ6N,YAAoB,OAATvD,QAAS,IAATA,OAAA,EAAAA,EAAW6D,cAA8B5R,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAjH,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMgR,EAAgBhR,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BL,EAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQ/G,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQ+O,EAAiBlN,SAAW,SAAAhC,GAAC,OAAIuS,EAAmBvS,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAKlJ,YAAtBpC,EAAWtC,QACX,uBAAK8D,UAAU,iBAAf,UACI,wBAAOa,QAAQ,kBAAf,qCACA,0BAAQhC,KAAK,kBAAkB1E,GAAG,kBAAkB2E,MAAQiJ,EAAkBpH,SAAW,SAAAhC,GAAC,OAAIwS,EAAoBxS,EAAEC,OAAOE,QAA3H,UACI,yBAAQA,MAAM,IAAd,eACEwK,EAAc1D,QAAQ,SAAAhK,GAAG,MAAY,YAARA,KAAoBkI,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,YAKxF,uBAAK7F,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQsP,YAAoB,OAATvD,QAAS,IAATA,OAAA,EAAAA,EAAW6D,cAA8B5R,KAAK,YAAYC,MAAQN,EAAWyG,UAAYtE,SAAWjC,EAAvH,UACIyP,EAAiBrK,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE9C,yBAAQ/G,MAAM,iBAAd,mCAG6B,mBAAzBN,EAAWyG,WACH,uCACI,wBAAOpE,QAAQ,iBAAf,qCACA,wBAAO1G,GAAG,iBAAiB0E,KAAK,SAASC,MAAQgP,EAAexT,OAASqG,SAAW,SAAAhC,GAAC,OAAIiR,EAAkB,6BAAI9B,GAAL,mBAAsBnP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,gCACtM,wBAAOC,QAAQ,cAAf,qBACA,wBAAO1G,GAAG,cAAc0E,KAAK,SAASC,MAAQgP,EAAerT,OAASkG,SAAW,SAAAhC,GAAC,OAAIiR,EAAkB,6BAAK9B,GAAN,mBAAuBnP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWnE,KAAK,OAAOiG,YAAY,oCAK9M,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAeiS,IAAMS,IAA8B,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAepM,YAA0B,OAAboM,QAAa,IAAbA,OAAA,EAAAA,EAAerM,iBAAf,OAAgC6H,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW5H,WAAckL,IAAK,EAAGtP,YAAY,aAEtN,OAATgM,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eAAgB,4DAA2C,OAAbW,QAAa,IAAbA,OAAA,EAAAA,EAAepM,YAA0B,OAAboM,QAAa,IAAbA,OAAA,EAAAA,EAAerM,iBAAf,OAAgC6H,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW5H,kBAGzH,OAAT4H,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eACX,uBAAKzQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAOlG,KAAK,SAASkE,KAAK,SAASC,MAAQN,EAAWsO,OAAS6D,KAAmB,OAAbS,QAAa,IAAbA,OAAA,EAAAA,EAAetE,UAAuB,OAAbsE,QAAa,IAAbA,OAAA,EAAAA,EAAerE,gBAAf,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWE,SAAYoD,IAAK,EAAGvP,SAAWjC,EAAekC,YAAY,MAClM,qDAAoC,OAAbwQ,QAAa,IAAbA,OAAA,EAAAA,EAAetE,UAAuB,OAAbsE,QAAa,IAAbA,OAAA,EAAAA,EAAerE,gBAAf,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWE,eAGlG,eAAC,GAAD,CAAYtO,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QAnHhB,SAAAnC,GAIjB,I1CkE+B2S,E0CrE/B3S,EAAEwB,iBAGciQ,OAAOC,QAAQ,2EAG3BvV,G1C+D2BwW,E0C/DO,CAC9Bb,aAAc7D,EAAU6D,aACxBc,iBAAkBrL,SAAU0G,EAAU5H,UACtCyM,eAAgB7E,EAAUE,Q1C6DtC,uCAAO,WAAOhS,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAkD,GACLA,EAAI9C,KAAOmX,EAAMb,cAClB3V,EAAUgD,GAAqB,6BACxBb,EAAI/C,QADmB,IAE1BC,GAAI8C,EAAI9C,GACR4K,eAAkB9H,EAAI/C,OAAO6K,eAAiBuM,EAAMC,iBACpDxE,cAAiB9P,EAAI/C,OAAO6S,cAAgBuE,EAAMG,eAClDjN,OAAUvH,EAAI/C,OAAO8K,UAAa/H,EAAI/C,OAAO6S,cAAgBuE,EAAMG,gBAAqB,EAAI,YAAc,iBAZnH,2CAAP,0D0C1DQ3W,EAAUiD,GAAyB6O,EAAUzS,KAC7C+R,EAAYvN,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAoGPV,UAAU,iCAA3C,+BCpRpB4R,GAAmB,SAAC,GAA2B,IAAzBrP,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YACrC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAmB2J,YAAcA,OCN1D2F,GAAiB,WAE1B,MAAqF9O,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,KAAK4P,aAA7G5H,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAW/I,EAA7B,EAA6BA,OAAQO,EAArC,EAAqCA,UAAWS,EAAhD,EAAgDA,MAAO2P,EAAvD,EAAuDA,YAAagE,EAApE,EAAoEA,QAAS7D,EAA7E,EAA6EA,IAE7E,OACI,uBAAKhN,UAAU,gBAAf,UACI,kDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,iDAEV,0CAAW,gCAAQ,IAAI7C,KAAMD,GAAQkI,0BAErC,6CAAc,uCAAU2L,KAAKC,IAAKhM,SAElC,sDAAuB,gCAAQ9I,OAE/B,8CAAe,gCAAQO,OAEvB,2CAAY,gCAAQwI,OAElB4L,GAAW,4CAAa,gCAAQA,OAEhC7D,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMpO,OAAO,SAASsO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCvB5BiF,GAAqB,SAAC,GAA2B,IAAzBvP,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YACvC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAmB2J,YAAcA,OCG1D6F,GAAgB,SAAC,GAAqB,IAyF3ClW,EAzFwBqQ,EAAkB,EAAlBA,YAEtBpR,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACR,EAAsC4C,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB2T,EAApB,KACA,EAA2CpR,mBAAS,IAApD,mBAAOsP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BjS,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAAkCnR,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KAEA,EAAqCd,KAA7BrB,EAAR,EAAQA,UAAWtD,EAAnB,EAAmBA,cAEnB,EAA2DjL,GAASuO,GAAwB,CACxF1P,MAAOC,KAAKwQ,MACZzR,OAAQoN,EAAc,GACtB7M,UAAWd,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWgP,EAAc,MAAIzN,WAAW,GAC1EmJ,SAAU,EACVD,eAAgB,EAChBvK,KAAM,eACN2K,QAAS,GACT2H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbrI,OAAQ,cAXZ,mBAAQhG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAkFA,OAHsClD,EAAhB,gBAAtB2C,EAAWtC,OAAwC,IAAmBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,WAIxH,wBAAMoE,SArEW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM4P,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,OAA0B,CACrC,IAAM6T,EAAWxC,GAAa,CAAEvR,YAAaA,EAAa6R,eAAgBA,IAC1E,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYoR,EACvB/S,EAAUiB,GAAoB,CAC1BzB,OAAQ0B,EACRH,WAAY,CAAEgS,MAKtB,GAA0B,gBAAtBrP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMsT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAW/B,UAAYoR,EAEvB/S,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWtC,OACnBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,YAA7D,CAAyEgS,OAItFjB,GACD9R,EAAU8C,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/D5F,EAAUsC,GAAqB,gBACxBoB,GACJ,kBACHiC,IAAKC,KAAK,uBAAwB,kCAAmC,YAEzEwL,EAAYvN,QA5CR+Q,EAAYK,EAASrC,MA+DzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAsB,yBACtC6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,iBAAf,UACI,wBAAOa,QAAQ,UAAf,uBACA,sBAAKb,UAAU,UAAf,SACI,wBAAOrF,KAAK,OAAOkE,KAAK,UAAUC,MAAQN,EAAW2G,QAAUxE,SAAWjC,EAAekC,YAAY,4BAG7G,uBAAKZ,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMgR,EAAgBhR,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BL,EAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQ/G,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQ+O,EAAiBlN,SAAW,SAAAhC,GAAC,OAAI6R,EAAkB7R,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAI3K,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,uBAAKlQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAOlG,KAAK,SAASkE,KAAK,SAASC,MAAQN,EAAWsO,OAASnM,SAAWjC,EAAekC,YAAY,IAAIsP,IAAK,OAElH,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QA7EhB,SAAAnC,GACjBA,EAAEwB,iBACciQ,OAAOC,QAAQ,2EAG3BvV,EAAUiD,GAAyB6O,EAAUzS,KAC7C+R,EAAYvN,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAsEPV,UAAU,iCAA3C,6BCpKpBgS,GAAkB,WAE3B,IAAMlX,EAAWwE,cAETsN,EAAc7J,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,QAAzC4P,UAEA5H,EAAkI4H,EAAlI5H,SAAU9I,EAAwH0Q,EAAxH1Q,OAAQO,EAAgHmQ,EAAhHnQ,UAAWyI,EAAqG0H,EAArG1H,UAAWC,EAA0FyH,EAA1FzH,QAASjI,EAAiF0P,EAAjF1P,MAAO2P,EAA0ED,EAA1EC,YAAarI,EAA6DoI,EAA7DpI,OAAQO,EAAqD6H,EAArD7H,eAAgB+H,EAAqCF,EAArCE,OAAQC,EAA6BH,EAA7BG,cAAevS,EAAcoS,EAAdpS,KAAMwS,EAAQJ,EAARI,IAWlI,OACI,uBAAKhN,UAAU,gBAAf,UACe,aAATxF,EAAuB,mDAA4B,yDAGrD,2BAASwF,UAAU,mBAAnB,UACI,yCAAU,gCAAgB,aAATxF,EAAuB,WAAa,sBAErD,0CAAW,gCAAQ0C,EAAMkI,0BAEzB,mDAAoB,uCAAU2L,KAAKC,IAAKhM,SAExC,qDAAsB,uCAAUD,QAEhC,sDAAuB,uCAAUgM,KAAKC,IAAKhM,GAAaD,QAGpDG,EAAY,8CAAe,gCAAQA,OACvB,4CAAa,gCAAQC,OAGrC,2CAAY,gCAAQjJ,OAEpB,8CAAe,gCAAQO,OAEvB,oDAAqB,kCAAQsQ,EAAR,IAA0BD,QAE7CE,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMpO,OAAO,SAASsO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,OAEzB,2CAAY,gCAAQrI,UAIL,cAAXA,GAA0B,yBAAQ1D,QA3CrB,SAAAnC,GACzBA,EAAEwB,iBACFrF,EAAUuH,GAAW,CACjB7H,KAAM,kBACNgI,MAAOhI,MAuCoEwF,UAAU,mBAAnD,8BC3CjCiS,GAAW,SAAC,GAAgC,IAAD,IA0FhDpW,EA1FmBqQ,EAA6B,EAA7BA,YAAa5J,EAAgB,EAAhBA,UAE9BxH,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACR,EAAsC4C,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB2T,EAApB,KACA,EAA2CpR,mBAAS,IAApD,mBAAOsP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BjS,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAAkCnR,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KAEA,EAAqCd,KAA7BrB,EAAR,EAAQA,UAAWtD,EAAnB,EAAmBA,cAEnB,EAA2DjL,GAASuO,GAAwB,CACxF1P,MAAOC,KAAKwQ,MACZzR,OAAQoN,EAAc,GACtB7M,UAAS,UAAEd,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWgP,EAAc,aAAlD,aAAE,EAAqDzN,WAAW,GAC3EmJ,SAAU,EACVD,eAAgB,EAChBvK,KAAM8H,EACN4C,UAAW,GACX4H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbrI,OAAQ,cAXZ,mBAAQhG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAmFA,OAHsClD,EAAhB,gBAAtB2C,EAAWtC,OAAwC,IAAgB,UAAGP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,iBAAhD,aAAG,EAAuDL,WAIzH,wBAAMoE,SAtEW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM4P,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBjP,EAAWtC,OAA0B,CACrC,IAAM6T,EAAWxC,GAAa,CAAEvR,YAAaA,EAAa6R,eAAgBA,IAC1E,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYoR,EACvB/S,EAAUiB,GAAoB,CAC1BzB,OAAQ0B,EACRH,WAAY,CAAEgS,MAKtB,GAA0B,gBAAtBrP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMsT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBlP,EAAW/B,UAAYoR,EAEvB/S,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWtC,OACnBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWtC,UAASL,YAA7D,CAAyEgS,OAItFjB,GACD9R,EAAU8C,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/D5F,EAAUsC,GAAqB,6BACxBoB,GADuB,IAE1BrE,GAAIgD,KAAKwQ,QACV,kBACHlN,IAAKC,KAAK,iBAAkB,kCAAmC,YAEnEwL,EAAYvN,QA7CR+Q,EAAYK,EAASrC,MAgEzB,UACI,uBAAK1N,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAsB,mBACtC6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOrF,KAAK,OAAOkE,KAAK,YAAYC,MAAQN,EAAW0G,UAAYvE,SAAWjC,EAAekC,YAAY,8BAGjH,uBAAKZ,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ4K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMgR,EAAgBhR,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BL,EAAWiI,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQ/G,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQ+O,EAAiBlN,SAAW,SAAAhC,GAAC,OAAI6R,EAAkB7R,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAI3K,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,uBAAKlQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAOlG,KAAK,SAASkE,KAAK,SAASC,MAAQN,EAAWsO,OAASnM,SAAWjC,EAAekC,YAAY,IAAIsP,IAAK,OAElH,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,mBAAmBmQ,WAAWrB,EAA2BnU,KAAK,SAAhF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QA7EhB,SAAAnC,GACjBA,EAAEwB,iBACciQ,OAAOC,QAAQ,2EAG3BvV,EAAUiD,GAAyB6O,EAAUzS,KAC7C+R,EAAYvN,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAsEPV,UAAU,iCAA3C,6BCnKpBkS,GAAsB,SAAC,GAAsC,IAApC3P,EAAmC,EAAnCA,KAAM2J,EAA6B,EAA7BA,YAAa5J,EAAgB,EAAhBA,UAErD,OACI,uCAEsB,aAAdA,IACkB,aAATC,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAU2J,YAAaA,EAAa5J,UAAYA,KAGjE,iBAAdA,IACkB,aAATC,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAe2J,YAAcA,SCd/DiG,GAAgB,SAAC,GAA+T,IAKrVC,EAGAC,EARwBnG,EAA4T,EAA5TA,YAAaoG,EAA+S,EAA/SA,aAAcC,EAAiS,EAAjSA,aAAc3F,EAAmR,EAAnRA,UAAWtD,EAAwQ,EAAxQA,cAAemG,EAAyP,EAAzPA,QAAS1Q,EAAgP,EAAhPA,qBAAsBP,EAA0N,EAA1NA,WAAYQ,EAA8M,EAA9MA,iBAAkBrD,EAA4L,EAA5LA,QAASuD,EAAmL,EAAnLA,eAAgBsT,EAAmK,EAAnKA,gBAAiBC,EAAkJ,EAAlJA,mBAAoBC,EAA8H,EAA9HA,mBAAoBC,EAA0G,EAA1GA,sBAAuBC,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBnU,EAA4C,EAA5CA,aAAcoQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAWrU,OATAvQ,EAAWW,GAAGjD,OAAS,UACvBsC,EAAWhE,KAAM,gBAGwB4X,EAAhB,gBAAzB5T,EAAWW,GAAGjD,OAA0C,IAAqBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWW,GAAGjD,UAASL,WAG3FwW,EAAhB,gBAA3B7T,EAAWS,KAAK/C,OAA4C,IAAwBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWS,KAAK/C,UAASL,WAG3I,wBAAMoE,SAAWqS,EAAetS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAH,mBAEX6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE5C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,0BACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWS,KAAK/C,OAASyE,SAAW3B,EAAlE,UAEQsK,EAAc1D,QAAQ,SAAAhK,GAAG,MAAY,YAARA,KAAoBkI,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE9E,yBAAQ/G,MAAM,cAAd,gCAEyB,gBAA3BN,EAAWS,KAAK/C,QAA4B,wBAAO4C,MAAQ0T,EAAkB7R,SAAW,SAAChC,GAAD,OAAM8T,EAAoB9T,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAE5K,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BmW,EAAevO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAEvF,yBAAQ/G,MAAM,iBAAd,mCAE4B,mBAA9BN,EAAWS,KAAKxC,WAAkC,wBAAOqC,MAAQ4T,EAAqB/R,SAAW,SAAAhC,GAAC,OAAIgU,EAAuBhU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAEvL,wBACA,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,gCACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BkW,EAAatO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQ/G,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQ8T,EAAmBjS,SAAW,SAAAhC,GAAC,OAAIkU,EAAqBlU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QAAUyR,EAAevS,UAAU,iCAA3C,6BC1EpB8S,GAAe,SAAC,GAAiR,IAKtST,EAGAD,EARuBlG,EAA8Q,EAA9QA,YAAaoG,EAAiQ,EAAjQA,aAAcC,EAAmP,EAAnPA,aAAc3F,EAAqO,EAArOA,UAAWtD,EAA0N,EAA1NA,cAAemG,EAA2M,EAA3MA,QAAS1Q,EAAkM,EAAlMA,qBAAsBP,EAA4K,EAA5KA,WAAYQ,EAAgK,EAAhKA,iBAAkBE,EAA8I,EAA9IA,eAAgBvD,EAA8H,EAA9HA,QAASoX,EAAqH,EAArHA,cAAeC,EAAsG,EAAtGA,iBAAmBJ,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBnU,EAA4C,EAA5CA,aAAcoQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAWtR,OATAvQ,EAAWS,KAAK/C,OAAS,UACzBsC,EAAWhE,KAAM,eAG0B6X,EAAhB,gBAA3B7T,EAAWS,KAAK/C,OAA4C,IAAuBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWS,KAAK/C,UAASL,WAGrGuW,EAAhB,gBAAzB5T,EAAWW,GAAGjD,OAA0C,IAAqBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWW,GAAGjD,UAASL,WAGlI,wBAAMoE,SAAWqS,EAAetS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAH,kBAEX6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE5C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,+BACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BmW,EAAevO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,YAK/F,wBACA,uBAAK7F,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sCACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWW,GAAGjD,OAASyE,SAAWzB,EAAhE,UAEQoK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGyB,gBAAzBN,EAAWW,GAAGjD,QAA4B,wBAAO4C,MAAQiU,EAAgBpS,SAAW,SAAChC,GAAD,OAAMqU,EAAkBrU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGxK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BkW,EAAatO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQ/G,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQ8T,EAAmBjS,SAAW,SAAAhC,GAAC,OAAIkU,EAAqBlU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEI4M,GAAa,yBAAQ9L,QAAUyR,EAAevS,UAAU,iCAA3C,6BC5EpBiT,GAAuB,WAEhC,MAAwDlQ,aAAY,SAAAC,GAAK,OAAIA,EAAMhG,KAAK4P,aAAhF5H,EAAR,EAAQA,SAAU/F,EAAlB,EAAkBA,KAAME,EAAxB,EAAwBA,GAAIjC,EAA5B,EAA4BA,MAAO2P,EAAnC,EAAmCA,YAAaG,EAAhD,EAAgDA,IAEhD,OACI,uBAAKhN,UAAU,gBAAf,UACI,wDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,uDAEV,0CAAW,gCAAQ9C,EAAMkI,0BAEzB,6CAAc,uCAAU2L,KAAKC,IAAKhM,SAElC,iDAAkB,kCAAQ/F,EAAKxC,UAAb,KAA4BwC,EAAK/C,OAAjC,UAElB,6CAAc,kCAAQiD,EAAG1C,UAAX,KAA0B0C,EAAGjD,OAA7B,UAEZ8Q,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMpO,OAAO,SAASsO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCpB5BqG,GAAoB,SAAC,GAAiR,IAI3Sd,EAGAC,EAP4BnG,EAA8Q,EAA9QA,YAAaoG,EAAiQ,EAAjQA,aAAcC,EAAmP,EAAnPA,aAAc3F,EAAqO,EAArOA,UAAWtD,EAA0N,EAA1NA,cAAemG,EAA2M,EAA3MA,QAAS1Q,EAAkM,EAAlMA,qBAAsBP,EAA4K,EAA5KA,WAAYQ,EAAgK,EAAhKA,iBAAkBE,EAA8I,EAA9IA,eAAgBvD,EAA8H,EAA9HA,QAASoX,EAAqH,EAArHA,cAAeC,EAAsG,EAAtGA,iBAAmBJ,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBnU,EAA4C,EAA5CA,aAAcoQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAU3R,OARAvQ,EAAWhE,KAAM,gBAGwB4X,EAAhB,gBAAzB5T,EAAWW,GAAGjD,OAA0C,IAAqBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWW,GAAGjD,UAASL,WAG3FwW,EAAhB,gBAA3B7T,EAAWS,KAAK/C,OAA4C,IAAwBP,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWS,KAAK/C,UAASL,WAG3I,wBAAMoE,SAAWqS,EAAetS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM4M,EAAY,oBAAH,wBAEX6C,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE5C,eAAC,KAAD,CACI9O,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLiG,OAAO,UACP9E,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,4BACA,yBAAQhC,KAAK,SAASC,MAAQN,EAAWS,KAAK/C,OAASyE,SAAW3B,EAAlE,SAEQsK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,WAKnD,uBAAK7F,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BmW,EAAevO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,YAK/F,wBACA,uBAAK7F,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,wBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWW,GAAGjD,OAASyE,SAAWzB,EAAhE,UAEQoK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmB/G,MAAQ+G,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQ/G,MAAM,cAAd,gCAGyB,gBAAzBN,EAAWW,GAAGjD,QAA4B,wBAAO4C,MAAQiU,EAAgBpS,SAAW,SAAChC,GAAD,OAAMqU,EAAkBrU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,oBAGxK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BkW,EAAatO,KAAK,SAAA+B,GAAE,OAAI,yBAAkB/G,MAAQ+G,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQ/G,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQ8T,EAAmBjS,SAAW,SAAAhC,GAAC,OAAIkU,EAAqBlU,EAAEC,OAAOE,QAASkR,WAAS,EAACrV,KAAK,OAAOiG,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOrF,KAAK,SAASkE,KAAK,WAAWC,MAAQN,EAAWwG,SAAWrE,SAAWjC,EAAekC,YAAY,OAAOsP,IAAK,UAG7H,eAAC,GAAD,CAAY1R,WAAaA,EAAasQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAU/O,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWqO,YAAclM,SAAWjC,EAAekC,YAAY,gCAEzH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBmQ,WAAWrB,EAA2BnU,KAAK,SAAjF,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAEA4M,GAAa,yBAAQ9L,QAAUyR,EAAevS,UAAU,iCAA3C,6BCtEpBmT,GAA2B,SAAC,GAAsC,IAApCjH,EAAmC,EAAnCA,YAAa3J,EAAsB,EAAtBA,KAAMD,EAAgB,EAAhBA,UAEpDxH,EAAWwE,cACjB,EAAkCf,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KACA,EAA8CxQ,mBAAS,IAAvD,mBAAOiU,EAAP,KAAwBC,EAAxB,KACA,EAA0ClU,mBAAS,IAAnD,mBAAOwU,EAAP,KAAsBC,EAAtB,KACA,EAAoDzU,mBAAS,IAA7D,mBAAOmU,EAAP,KAA2BC,EAA3B,KACA,EAAgDpU,mBAAS,IAAzD,mBAAOqU,EAAP,KAAyBC,EAAzB,KACA,EAA8BtU,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACQ/T,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACApB,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WAER,EAA2C0T,KAAnC3E,EAAR,EAAQA,cAAesD,EAAvB,EAAuBA,UAAW5P,EAAlC,EAAkCA,KAGlC,EAA6FqB,GAASuO,GAAwB,CAC1H1P,MAAOC,KAAKwQ,MACZ1O,KAAM,CACF/C,OAAQoN,EAAc,GACtB7M,UAAW,KAEf0C,GAAI,CACAjD,OAAQoN,EAAc,GACtB7M,UAAW,KAEfuI,SAAU,EACV6H,YAAa,GACbrS,KAAM,GACNwS,IAAK,KAbT,mBAAQxO,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAAwDC,EAAxD,KAA0EE,EAA1E,KAgBMoT,EAAe,SAAA3T,GACjBA,EAAEwB,iBAGF,IAAM4P,EAAWxC,GAAa/O,GAC9B,GAAMuR,EAAStC,GAAf,CAMA,GAA6B,gBAAzBjP,EAAWW,GAAGjD,OAA0B,CAGxC,IADiBqR,GAAa,CAAEvR,YAAa+W,EAAelF,eAAgB+E,IAC7DnF,GAEX,YADAiC,EAAY,2CAIhBlR,EAAWW,GAAGjD,OAAS6W,EACvBvU,EAAWW,GAAG1C,UAAYmW,EAC1B9X,EAAUiB,GAAoB,CAC1BzB,OAAQyY,EACRlX,WAAY,CAAE+W,MAMtB,GAA+B,gBAA3BpU,EAAWS,KAAK/C,OAA0B,CAG1C,IADiBqR,GAAa,CAAEvR,YAAawW,EAAiB3E,eAAgB6E,IAC/DjF,GAEX,YADAiC,EAAY,2CAIhBlR,EAAWS,KAAK/C,OAASsW,EACzBhU,EAAWS,KAAKxC,UAAYiW,EAC5B5X,EAAUiB,GAAoB,CAC1BzB,OAAQkY,EACR3W,WAAY,CAAE6W,MAsBtB,GAA6B,gBAAzBlU,EAAWW,GAAGjD,QAAwD,mBAA5BsC,EAAWW,GAAG1C,UAAiC,CAEzF,IADiB8Q,GAAaqF,GACfnF,GAEX,YADAiC,EAAY,2CAIhBlR,EAAWW,GAAG1C,UAAYmW,EAE1B9X,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWW,GAAGjD,OACtBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWW,GAAGjD,UAASL,YAAhE,CAA4E+W,OAK9F,GAA+B,gBAA3BpU,EAAWS,KAAK/C,QAA0D,mBAA9BsC,EAAWS,KAAKxC,UAAiC,CAG7F,IADiB8Q,GAAamF,GACfjF,GAEX,YADAiC,EAAY,2CAIhBlR,EAAWS,KAAKxC,UAAYiW,EAE5B5X,EAAUqB,GAAuB,CAC7BhC,GAAIwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAWkE,EAAWtC,UAAS/B,GAC5DG,OAAQkE,EAAWS,KAAK/C,OACxBL,WAAW,GAAD,oBAAOF,EAAQ8L,MAAM,SAAA5B,GAAE,OAAIA,EAAGvL,SAAWkE,EAAWS,KAAK/C,UAASL,YAAlE,CAA8E6W,OAKhG,GAAK9F,EACD9R,EAAU8C,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,eAC5D,CACH,GAAyB,iBAApBlC,EAAWhE,KAAyB,CAGrC,IAAM4Y,EAA2BpL,GAA2BhL,EAAMrB,EAAS6C,EAAWS,KAAK/C,QAASuL,MAAM,SAAAxK,GAAG,OAAIA,EAAIR,YAAc+B,EAAWS,KAAKxC,aAAYuI,SACzJqO,EAA6CD,EAA2BlN,SAAS1H,EAAWwG,UAE9FqO,EAA6C,IACvC9Y,EAAWkN,MAAM,SAAAzN,GAAG,MAAmB,wBAAfA,EAAIM,WAC9BQ,EAAUD,GAAsB,CAC5BP,OAAQ,sBACRE,KAAM,UACNC,OAAQ,YAIhB+D,EAAWwG,SAAWoO,EAEtBtY,EAAUsC,GAAqB,CAC3BjD,GAAIgD,KAAKwQ,MACT3I,SAAU+L,KAAKC,IAAKqC,GACpB7Y,KAAM,UACNyK,UAAW,sBACX/I,OAAQsC,EAAWW,GAAGjD,OACtBO,UAAW+B,EAAWW,GAAG1C,UACzBS,MAAOC,KAAKwQ,MACZwB,YAAa3Q,EAAWwO,IACxBH,YAAY,YAAD,OAAerO,EAAWS,KAAKxC,YAC3C,kBAIX3B,EAAUsC,GAAqB,gBACxBoB,GACJ,uBAEHiC,IAAKC,KAAK,mBAAoB,kCAAmC,WAGrEwL,EAAYvN,QAtIR+Q,EAAYK,EAASrC,MAyIvB6E,EAAe,SAAA5T,GACjBA,EAAEwB,iBACciQ,OAAOC,QAAQ,2EAG3BvV,EAAUiD,GAAyB6O,EAAUzS,KAC7C+R,EAAYvN,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAIrE,OACI,uCAEiB,aAAT6B,GAAuB,eAAC,GAAD,IAGN,kBAAdD,IAA4C,UAATC,GAA6B,WAATA,IAClD,eAAC,GAAD,CACA2J,YAAcA,EACdoG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZjR,QAAUA,EACV2N,cAAgBA,EAChBmG,QAAUA,EACV1Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClB6T,cAAgBA,EAChBC,iBAAmBA,EACnBJ,iBAAmBA,EACnBC,oBAAuBA,EACvBnU,aAAeA,EACfoQ,UAAYA,EACZC,aAAeA,IAIR,kBAAdzM,IAA4C,UAATC,GAA6B,WAATA,IAC/C,eAAC,GAAD,CACA2J,YAAcA,EACfoG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZjR,QAAUA,EACV2N,cAAgBA,EAChBmG,QAAUA,EACV1Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClBsT,gBAAkBA,EAClBC,mBAAqBA,EACrBC,mBAAqBA,EACrBC,sBAAyBA,EACzBC,iBAAmBA,EACnBC,oBAAuBA,EACvBnU,aAAeA,EACfoQ,UAAYA,EACZC,aAAeA,IAGR,iBAAdzM,IAA2C,UAATC,GAA6B,WAATA,IAC/C,eAAC,GAAD,CACA2J,YAAcA,EACdoG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZjR,QAAWA,EACX2N,cAAgBA,EAChBmG,QAAUA,EACV1Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClB6T,cAAgBA,EAChBC,iBAAmBA,EACnBJ,iBAAmBA,EACnBC,oBAAuBA,EACvBnU,aAAeA,EACfoQ,UAAYA,EACZC,aAAeA,QCzQ1BuE,GAAmB,SAAC,GAAgC,IAA9BpH,EAA6B,EAA7BA,YAAaqH,EAAgB,EAAhBA,UAEpChZ,EAAewI,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAA1CS,WAEFO,EAAWwE,cACjB,EAA8Bf,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAA+CnR,mBAAS,CACpDpE,GAAIoZ,EAAUpZ,GACdK,KAAM+Y,EAAU/Y,KAChBF,OAAQ,GACRG,OAAQF,EAAWkN,MAAM,SAAAzN,GAAG,OAAIA,EAAIM,SAAWiZ,EAAUpN,aAAY1L,SAJzE,mBAAQ+Y,EAAR,KAAyBC,EAAzB,KAOM/U,EAAe,SAAAC,GACjB8U,EAAmB,6BACZD,GADW,mBAEb7U,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAqClC,OACI,qCACI,wBAAMkB,UAAU,mBAAmBC,SAnChB,SAAAtB,GACvBA,EAAEwB,iBAGF,I3D+F4BnG,E2D/FtB+V,EAAWxC,GAAa,CAC1BO,eAAgB0F,EAAgBlZ,SAG9ByV,EAAStC,IAKf3S,G3DsF4Bd,E2DtFIwZ,E3DuFpC,uCAAO,WAAO1Y,EAAUC,GAAjB,iBAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,WAEFia,EAJP,gBAI6B1Z,IACNG,GALvB,SAOOiC,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,2BAAkCO,EAAIG,KAASuZ,GAPpE,OASC5Y,EAAUQ,GAAiBtB,IAT5B,gDAYCoB,QAAQC,IAAR,MAZD,yDAAP,0D2DtFIP,EvDgFkC,SAAAd,GACtC,8CAAO,WAAOc,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAkD,GACLA,EAAI/C,OAAO+K,YAAcjL,EAAI2Z,iBAE9B7Y,EAAU8C,GAA0B,6BAAKX,EAAI/C,QAAV,IAAkBC,GAAI8C,EAAI9C,GAAI8K,UAAWjL,EAAI8T,sBARrF,2CAAP,wDuDjFc8F,CAA4BJ,IACtCtH,EAAYvN,GACZ8B,IAAKC,KAAK,wBAAyB8S,EAAgBlZ,OAAQ,sCAAuC,YAP9FoV,EAAYK,EAASrC,MA0BrB,UACI,uBAAK1N,UAAU,iBAAf,UACI,mDACEyP,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAC1C,2BAASzP,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,kBAAf,6BACA,8BAAM0S,EAAUpN,eAEpB,2BAASnG,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,SAAf,4BACA,wBAAO/B,MAAQ0U,EAAgBlZ,OAASuE,KAAK,SAAS8B,SAAWjC,EAAe/D,KAAK,OAAOiG,YAAY,8BAE5G,2BAASZ,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAOhC,KAAK,SAASC,MAAQ0U,EAAgB/Y,OAASkG,SAAWjC,EAAe/D,KAAK,OAAOiG,YAAY,uBAGhH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBrF,KAAK,SAA3C,qBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBAC4B,IAA1BuT,EAAUnN,aAAqB,yBAAQtF,QApCpC,SAAAnC,GAIb,I3DiH0B3E,G2DpH9B2E,EAAEwB,iBAE6B,IAA1BoT,EAAUnN,eACQgK,OAAOC,QAAP,4DAAkEkD,EAAUpN,UAA5E,SAEfrL,G3D+GsBd,E2D/GYwZ,E3DgH9CpY,QAAQC,IAAKrB,GACb,uCAAO,WAAOc,EAAUC,GAAjB,eAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAGOuE,YAAW3B,YAAKnD,EAAF,UAAUO,EAAV,2BAAkCO,EAAIG,MAH3D,OAICW,EAAUU,GAAmBxB,IAJ9B,gDAMCoB,QAAQC,IAAR,MAND,yDAAP,0D2DhHYoF,IAAKC,KAAK,sBAAV,uBAAkD6S,EAAUpN,UAA5D,iCAAuG,aAI/G+F,EAAYvN,IAyBkEqB,UAAU,gCAA3C,+BC3ExC6T,GAAgB,SAAC,GAA+B,IAA7B3H,EAA4B,EAA5BA,YAAalH,EAAe,EAAfA,SAEnClK,EAAWwE,cACjB,EAA8Bf,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACOoE,EAAiB/Q,aAAa,SAAAC,GAAK,OAAIA,EAAMrH,WAA7CmY,aACP,EAAyCvV,mBAAS,6BAC3CuV,GAD0C,IAE7C9X,YAAa,MAFjB,mBAAQ+X,EAAR,KAAsBC,EAAtB,KA8CA,OACI,qCACI,wBAAMhU,UAAU,gBAAgBC,SAnCb,SAAAtB,GACvBA,EAAEwB,iBAGF,I1DuFyBjE,EE2BMN,EwDlHzBmU,EAAWxC,GAAa,CAC1BvR,YAAa+X,EAAa/X,cAGxB+T,EAAStC,IAKf3S,G1D8EyBoB,E0D9EI6X,E1D+EjC,uCAAO,WAAOjZ,EAAUC,GAAjB,iBAAArB,EAAA,sEAGSD,EAAQsB,IAAWC,KAAnBvB,WAEFwa,EALP,6BAKgC/X,GALhC,IAKwC5B,OAAQ4B,EAAOF,eAE7B7B,UAClB8Z,EAAkBjP,gBAClBiP,EAAkBjY,YACzBZ,QAAQC,IAAK4Y,GAVd,SAYO7X,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,wBAA+ByC,EAAO/B,KAAS8Z,GAZpE,OAcCnZ,EAAUyB,GAAa,6BAAM0X,GAAP,IAA0B9Z,GAAI+B,EAAO/B,OAd5D,kDAiBCiB,QAAQC,IAAR,MAjBD,0DAAP,0D0D9EIP,GxDwG+Bc,EwDxGImY,ExDyGvC,uCAAO,WAAOjZ,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAkD,GAAQ,IAAD,IACZA,EAAI/C,OAAOgC,SAAWN,EAAItB,QAC3BQ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAI+B,OAASN,EAAII,iBAE9E,UAAAiB,EAAI/C,OAAO+E,YAAX,eAAiB/C,UAAWN,EAAItB,QACjCQ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAI8E,KAAK,6BAAMhC,EAAIgC,MAAX,IAAiB/C,OAAQN,EAAII,mBAElG,UAAAiB,EAAI/C,OAAOiF,UAAX,eAAejD,UAAWN,EAAItB,QAC/BQ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAIgF,GAAG,6BAAMlC,EAAIkC,IAAX,IAAejD,OAAQN,EAAII,qBAbpG,2CAAP,0DwDxGIyE,IAAKC,KAAK,wBAAyBqT,EAAa/X,YAAa,mCAAoC,WAEjGkQ,EAAYvN,IARR+Q,EAAYK,EAASrC,MA0BrB,UACI,uBAAK1N,UAAU,iBAAf,UACI,gDACEyP,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE1C,2BAASzP,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,eAAf,oCACA,8BAAMiT,EAAaxZ,YAEvB,2BAAS0F,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,cAAf,4BACA,wBAAO/B,MAAQiV,EAAa/X,YAAc2E,SAtDzC,SAAAhC,GAEjBqV,EAAgB,6BACTD,GADQ,mBAEVpV,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkDsDnE,KAAK,OAAOkE,KAAK,cAAc+B,YAAY,uBAIvH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBrF,KAAK,SAA3C,oBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBACc,IAAbgF,GAAkB,yBAAQlE,QAjCtB,SAAAnC,GAIb,I1DqIuBxE,G0DxI3BwE,EAAEwB,iBAEgB,IAAb6E,KACkBoL,OAAOC,QAAP,yDAA+DyD,EAAaxZ,OAA5E,QACHQ,G1DoIOX,E0DpIwB2Z,EAAa3Z,G1DqIpE,uCAAO,WAAOW,EAAUC,GAAjB,eAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAGOuE,YAAW3B,YAAKnD,EAAF,UAAUO,EAAV,wBAA+BU,KAHpD,OAICW,EAAU6B,GAAgBxC,IAJ3B,gDAOCiB,QAAQC,IAAR,MAPD,yDAAP,2D0DlII6Q,EAAYvN,GACZ8B,IAAKC,KAAK,mBAAV,oBAA4CoT,EAAaxZ,OAAzD,iCAAiG,YAwBjC0F,UAAU,gCAA3C,+BCvE1BkU,GAAmB,SAAC,GAA8D,IAAD,EAA3DhI,EAA2D,EAA3DA,YAAaiI,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,aAAcpP,EAAe,EAAfA,SAErElK,EAAWwE,cACT3D,EAAYoH,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAAvCA,QACR,EAA8B4C,oBAAS,GAAvC,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAA+CnR,mBAAS,CACpDpE,GAAE,UAAEwB,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAW8Z,YAAtC,aAAE,EAAoDja,GACxDka,aAAcD,EACdE,gBAAiBH,EACjBtG,eAAgB,KAJpB,mBAAQ0G,EAAR,KAAyBC,EAAzB,KA0DA,OACI,qCACI,wBAAMxU,UAAU,gBAAgBC,SA5Cb,SAAAtB,GACvBA,EAAEwB,iBAGF,I3DmH4BsI,E2DnHtBsH,EAAWxC,GAAa,CAC1BvR,YAAauY,EAAgB1G,iBAG3BkC,EAAStC,IAKf3S,G3D0G4B2N,E2D1GG,6BACxB8L,GADuB,IAE1B1Y,WAAW,aAAMF,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAW8Z,KAAevY,WAAW+J,QAAQ,SAAA6C,GAAG,OAAIA,IAAQ0L,GAAmB1L,Q3DyGjI,uCAAO,WAAO3N,EAAUC,GAAjB,eAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IACRgP,EAAI5M,WAAW5B,KAAMwO,EAAIoF,gBAH1B,SAIOzR,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,wBAA+BgP,EAAItO,KAAS,CAC5DG,OAAQmO,EAAI4L,aACZxY,WAAY4M,EAAI5M,aANrB,OAQCf,EAAU0B,GAAiBiM,IAR5B,gDAUCrN,QAAQC,IAAR,MAVD,yDAAP,0D2DvGIP,EzD6HkC,SAAA2N,GACtC,8CAAO,WAAO3N,EAAUC,GAAjB,eAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAkD,GAAQ,IAAD,IAI2H,IAHvIA,EAAI/C,OAAO+K,YAAcwD,EAAI6L,iBAC9BxZ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAI8K,UAAWwD,EAAIoF,oBAEhF5Q,EAAI/C,OAAOgC,SAAWuM,EAAI4L,eAAgB,UAAApX,EAAI/C,OAAO+E,YAAX,eAAiB/C,UAAWuM,EAAI4L,eAAgB,UAAApX,EAAI/C,OAAOiF,UAAX,eAAejD,UAAWuM,EAAI4L,gBAEpHpX,EAAI/C,OAAOuC,YAAcgM,EAAI6L,iBAC9BxZ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAIsC,UAAWgM,EAAIoF,oBAEhF,UAAA5Q,EAAI/C,OAAO+E,YAAX,eAAiBxC,aAAcgM,EAAI6L,iBACpCxZ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAI8E,KAAK,6BAAMhC,EAAI/C,OAAO+E,MAAlB,IAAwBxC,UAAWgM,EAAIoF,sBAE5G,UAAA5Q,EAAI/C,OAAOiF,UAAX,eAAe1C,aAAcgM,EAAI6L,iBAClCxZ,EAAU8C,GAA0B,6BAAMX,EAAI/C,QAAX,IAAmBC,GAAI8C,EAAI9C,GAAIgF,GAAG,6BAAMlC,EAAI/C,OAAOiF,IAAlB,IAAsB1C,UAAWgM,EAAIoF,yBAlBlH,2CAAP,wDyD9Hc4G,CAA4BF,IACtC9T,IAAKC,KAAK,wBAAyB6T,EAAgB1G,eAAgB,mCAAoC,WAEvG3B,EAAYvN,IAXR+Q,EAAYK,EAASrC,MAmCrB,UACI,uBAAK1N,UAAU,iBAAf,UACI,mDACEyP,GAAW,sBAAKzP,UAAU,YAAf,SAA6ByP,IAE1C,2BAASzP,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,eAAf,oCACA,8BAAMuT,OAEV,2BAASpU,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,kBAAf,uCACA,8BAAMsT,OAEV,2BAASnU,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,iBAAf,4BACA,wBAAO/B,MAAQyV,EAAgB1G,eAAiBlN,SApE/C,SAAAhC,GACjBA,EAAEwB,iBAEFqU,EAAmB,6BACZD,GADW,mBAEb5V,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UA+D4DnE,KAAK,OAAOkE,KAAK,iBAAiB+B,YAAY,uBAIhI,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBrF,KAAK,SAA3C,oBACA,yBAAQmG,QAAUoL,EAAclM,UAAU,iCAA1C,sBACe,IAAbgF,GAAkB,yBAAQlE,QA3CvB,SAAAnC,GAIb,I3DmJ0B8J,G2DtJ9B9J,EAAEwB,iBAEgB,IAAb6E,KACkBoL,OAAOC,QAAP,4DAAkEkE,EAAgBD,gBAAlF,SAEfxZ,G3DiJsB2N,E2DjJW,6BAC1B8L,GADyB,IAE5B1Y,WAAW,aAAMF,EAAQ8L,MAAM,SAAA7L,GAAG,OAAIA,EAAItB,SAAW8Z,KAAevY,WAAW+J,QAAQ,SAAA6C,GAAG,OAAIA,IAAQ0L,GAAmB1L,Q3DgJzIrN,QAAQC,IAAKoN,GACb,uCAAO,WAAO3N,EAAUC,GAAjB,eAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAGO2C,YAAWC,YAAKnD,EAAF,UAAUO,EAAV,wBAA+BgP,EAAItO,KAAQ,CAC3DG,OAAQmO,EAAI4L,aACZxY,WAAY4M,EAAI5M,aALrB,OAOCf,EAAU8B,GAAmB6L,IAP9B,gDASCrN,QAAQC,IAAR,MATD,yDAAP,0D2D/IYoF,IAAKC,KAAK,mBAAV,uBAA+C6T,EAAgBD,gBAA/D,iCAAgH,aAIxHpI,EAAYvN,IA6BqDqB,UAAU,gCAA3C,+BC/E3B0U,GAAQ,WAEjB,IAAM5Z,EAAWwE,cACjB,EAAoCyD,aAAY,SAAAC,GAAK,OAAIA,EAAMkL,UAAvDyG,EAAR,EAAQA,OAAQrS,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,KACnBgR,EAAcxQ,aAAY,SAAAC,GAAK,OAAIA,EAAMlJ,QAAzCyZ,UACAO,EAAiB/Q,aAAY,SAAAC,GAAK,OAAIA,EAAMrH,WAA5CmY,aAGF5H,EAAc,SAAAvN,GAChBA,EAAEwB,iBACFrF,EpDXJ,CACIH,KAAMpB,IoDWNuB,E1DuCJ,CACIH,KAAMpB,I0DvCNuB,E9DoKJ,CACIH,KAAMpB,K8DpKNuB,E5D6MJ,CACIH,KAAMpB,K4D3MV,OACI,uCACI,sBAAKyG,UAAU,sEAAsEc,QAAUoL,IAE/F,uBAAKlM,UAAU,eAAf,UACI,oBAAGc,QAAUoL,EAAclM,UAAU,eAE/B2U,GAAwB,UAAdrS,GAA2B,eAAC,GAAD,CAAkB4J,YAAcA,EAAc3J,KAAOA,IAG1FoS,GAAwB,YAAdrS,GAA6B,eAAC,GAAD,CAAoB4J,YAAcA,EAAc3J,KAAOA,IAG9FoS,GAAwB,kBAAdrS,GAAmC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAG7HqS,GAAwB,UAAdrS,GAA2B,eAAC,GAAD,CAAkB4J,YAAcA,EAAc3J,KAAOA,KAGxFoS,GAAwB,aAAdrS,GAAgCqS,GAAwB,iBAAdrS,IAAoC,eAAC,GAAD,CAAqB4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAGrKqS,GAAwB,iBAAdrS,GAAkC,eAAC,GAAD,CAAa4J,YAAcA,IAGvEyI,GAAwB,oBAAdrS,GAAqC,eAAC,GAAD,CAAgB4J,YAAcA,IAG7EyI,GAAwB,sBAAdrS,GAAuC,eAAC,GAAD,CAAkB4J,YAAcA,EAAcqH,UAAYA,IAG3GoB,GAAwB,mBAAdrS,GAAoC,eAAC,GAAD,CAAe4J,YAAcA,EAAckI,aAAeN,EAAalL,UAAY5D,SAAW8O,EAAa9O,WAGzJ2P,GAAwB,sBAAdrS,GAAuC,eAAC,GAAD,CAAkB4J,YAAcA,EAAciI,gBAAkBL,EAAa5K,aAAekL,aAAeN,EAAalL,UAAY5D,SAAW8O,EAAa9O,WAG7M2P,GAAwB,kBAAdrS,GAAmC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAG7HqS,GAAwB,iBAAdrS,GAAkC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,WCnErIsS,GAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElBF,EAAW5R,aAAY,SAAAC,GAAK,OAAIA,EAAMkL,UAAtCyG,OACAlb,EAAQsJ,aAAY,SAAAC,GAAK,OAAIA,EAAMhI,QAAnCvB,IAER,OACI,iCAEQkb,GAAU,eAAC,GAAD,IAGVlb,EACMob,EACA,eAAC,IAAD,CAAU1V,GAAG,eCdtB2V,GAAc,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAI1B,OAFgB9R,aAAY,SAAAC,GAAK,OAAIA,EAAMhI,QAAnCvB,IAIO,eAAC,IAAD,CAAU0F,GAAG,MACd0V,GCXLE,GAAgB,WACzB,OACI,sBAAK/U,UAAU,kBAAf,SACI,4CAAa,+CCYZgV,GAAY,WAErB,IAAMla,EAAWwE,cACjB,EAAgCf,oBAAU,GAA1C,mBAAO0W,EAAP,KAAiBC,EAAjB,KAeA,OAbArO,qBAAW,WACP,IAAM7L,EAAOoF,cACb+U,YAAoBna,GAAM,SAAAsF,IACtB,OAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAM7G,OACPqB,EAAUoD,GAAOoC,EAAK7G,IAAK6G,EAAKC,cAChCzF,E9D+CZ,uCAAO,WAAOA,EAAUC,GAAjB,iBAAArB,EAAA,6DACKD,EAAQsB,IAAWC,KAAnBvB,IADL,SAEgBqD,GAAUrD,GAF1B,OAEGuD,EAFH,OAGHlC,EAAU6C,GAAmBX,IAH1B,2CAAP,yD8D9CYlC,ElEmDZ,uCAAO,WAAOA,EAAUC,GAAjB,iBAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAGoBD,GAAgBC,GAHpC,OAKsB,KAFfK,EAHP,QAKWwH,QACNxG,EAvBZ,uCAAO,WAAOA,EAAUC,GAAjB,eAAArB,EAAA,sDAEH,IACYD,EAAQsB,IAAWC,KAAnBvB,IAERc,GAAWR,QAAX,uCAAoB,WAAMC,GAAN,SAAAN,EAAA,sEAEVuB,YAAQrB,YAAYV,EAAF,UAAUO,EAAV,oBAAmCO,GAF3C,2CAApB,uDAKF,MAAOob,GACLha,QAAQC,IAAK+Z,GAXd,2CAAP,yDAwBYta,EAAUJ,GAAkBH,MAG5BO,EAAUJ,GAAkBZ,IAVjC,gDAeCsB,QAAQC,IAAR,MAfD,yDAAP,yDkElDYP,EhEoBZ,uCAAO,WAAQA,EAAUC,GAAlB,iBAAArB,EAAA,sEAESD,EAAQsB,IAAWC,KAAnBvB,IAFT,SAG+BgC,GAAahC,GAH5C,OAKiC,KAF1B4b,EAHP,QAKsB/T,QACjBxG,EArBZ,uCAAO,WAAOA,EAAUC,GAAjB,eAAArB,EAAA,sDACH,IACYD,EAAQsB,IAAWC,KAAnBvB,IAERkC,GAAQ5B,QAAR,uCAAiB,WAAM6B,GAAN,SAAAlC,EAAA,sEACPuB,YAAQrB,YAAYV,EAAF,UAAUO,EAAV,iBAA+BmC,GAD1C,2CAAjB,uDAIF,MAAQwZ,GACNha,QAAQC,IAAK+Z,GATd,2CAAP,yDAsBYta,EAAUgB,GAAeH,MAGzBb,EAAUgB,GAAeuZ,IAV9B,gDAeCja,QAAQC,IAAR,MAfD,yDAAP,0DgElBQ6Z,GAAa,QAElB,CAAEpa,IAEAma,EACM,eAAC,GAAD,IAKP,eAAC,IAAD,UACI,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAQvI,KAAK,KACLpC,QACI,eAAC,GAAD,UACI,eAAC,GAAD,QAIhB,eAAC,IAAD,CAAQoC,KAAK,WACLpC,QACI,eAAC,GAAD,UACI,eAAC,GAAD,c,kBCjD1BhM,GAAe,CACjB/D,WAAY,GACZ0I,WAAW,EACXsQ,UAAW,MCHTjV,GAAe,CACjB3C,QAAS,GACTsH,WAAW,EACX6Q,aAAc,MCJZxV,GAAe,CACjBqW,QAAQ,EACRrS,UAAW,KACXC,KAAM,ICHJjE,GAAe,CACjBsO,UAAW,KACX5P,KAAM,ICFJsB,GAAe,CACjB7E,IAAK,KACLoF,KAAM,MCFJP,GAAe,CACjB2I,MAAM,CACF,CACI3M,OAAQ,UACRiN,MAAO,GAEX,CACIjN,OAAQ,UACRiN,MAAO,GAGX,CACIjN,OAAQ,UACRiN,MAAO,KCNb+N,GAAsC,qBAAXlF,QAA0BA,OAAOmF,sCAAyCC,KAGrGC,GAAWC,aAAgB,CAC7B1Y,KHN8B,WAAoC,IAAlCgG,EAAiC,uDAAzB1E,GAAcqX,EAAW,uCAEjE,OAASA,EAAOhb,MAEZ,KAAKpB,EACD,oCACOyJ,GADP,IAEIhG,KAAM2Y,EAAO/a,UAGrB,KAAKrB,EAML,KAAKA,EAKL,KAAKA,EACD,oCACOyJ,GADP,IAEIhG,KAAK,CAAG2Y,EAAO/a,SAAX,oBAAuBoI,EAAMhG,SAEzC,KAAKzD,EACD,oCACOyJ,GADP,IAEI4J,UAAU,gBACH+I,EAAO/a,WAGtB,KAAKrB,EACD,oCACOyJ,GADP,IAEI4J,UAAW,OAEnB,KAAKrT,EACD,oCACOyJ,GADP,IAEIhG,KAAMgG,EAAMhG,KAAK8G,KAAK,SAAA+B,GAAE,OAAIA,EAAG1L,KAAOwb,EAAO/a,QAAQT,GAAK0L,EAAK8P,EAAO/a,aAE9E,KAAKrB,EACD,oCACOyJ,GADP,IAEIhG,KAAMgG,EAAMhG,KAAK4I,QAAQ,SAAAC,GAAE,OAAIA,EAAG1L,KAAOwb,EAAO/a,SAAWiL,OAEnE,KAAKtM,EAKL,KAAKA,EACD,oCACOyJ,GADP,IAEIhG,KAAK,CAAG2Y,EAAO/a,SAAX,oBAAuBoI,EAAMhG,SAGzC,KAAKzD,EACD,oCACOyJ,GADP,IAEIhG,KAAMgG,EAAMhG,KAAK8G,KAAK,SAAA+B,GAAE,OAAIA,EAAGZ,YAAc0Q,EAAO/a,QAAQ+Y,gBAAhC,6BAAuD9N,GAAvD,IAA2DZ,UAAW0Q,EAAO/a,QAAQkT,eAAgBrT,OAAQkb,EAAO/a,QAAQH,SAAWoL,OAsE3K,KAAKtM,EACD,oCACOyJ,GADP,IAEIhG,KAAM,GACN4P,UAAW,OAInB,QACI,OAAO5J,IGtIfkL,OJNyB,WAAmC,IAAjClL,EAAgC,uDAA1B1E,GAAcqX,EAAY,uCAC3D,OAASA,EAAOhb,MAEZ,KAAKpB,EACD,OAAO,6BACAyJ,GADP,IAEI2R,QAAQ,EACRrS,UAAWqT,EAAO/a,QAAQJ,KAC1B+H,KAAMoT,EAAO/a,QAAQ2H,KACrBC,MAAOmT,EAAO/a,QAAQ4H,QAG9B,KAAKjJ,EACD,OAAO,6BACAyJ,GADP,IAEI2R,QAAQ,EACRrS,UAAW,KACXC,KAAM,GACNC,MAAO,OAGf,QACI,OAAOQ,IIfflJ,KNN6B,WAAoC,IAAlCkJ,EAAiC,uDAA1B1E,GAAcqX,EAAY,uCAEhE,OAASA,EAAOhb,MAEZ,KAAKpB,GACD,oCACOyJ,GADP,IAEIzI,WAAYob,EAAO/a,UAG3B,KAAKrB,EACD,oCACOyJ,GADP,IAEIzI,WAAW,GAAD,oBAAOyI,EAAMzI,YAAb,CAAyBob,EAAO/a,YAIlD,KAAKrB,EACD,oCACOyJ,GADP,IAEIzI,WAAYyI,EAAMzI,WAAWuJ,KAAK,SAAA9J,GAAG,OAAIA,EAAIG,KAAOwb,EAAO/a,QAAQT,GAAKwb,EAAO/a,QAAUZ,OAGjG,KAAKT,EACD,oCACOyJ,GADP,IAEIC,WAAW,IAGnB,KAAK1J,GACD,oCACOyJ,GADP,IAEIC,WAAW,IAGnB,KAAK1J,EACD,oCACOyJ,GADP,IAEIzI,WAAYyI,EAAMzI,WAAWqL,QAAQ,SAAA5L,GAAG,OAAIA,EAAIG,KAAOwb,EAAO/a,QAAQT,IAAMH,OAGpF,KAAKT,GACD,oCACOyJ,GADP,IAEIuQ,UAAWoC,EAAO/a,UAG1B,KAAKrB,GACD,oCACOyJ,GADP,IAEIuQ,UAAW,OAGnB,KAAKha,GACD,oCACOyJ,GADP,IAEIzI,WAAY,GACZ0I,WAAW,EACXsQ,UAAW,OAInB,QACI,OAAOvQ,IMxDfrH,QLP0B,WAAoC,IAAlCqH,EAAiC,uDAA1B1E,GAAcqX,EAAY,uCAE7D,OAASA,EAAOhb,MAEZ,KAAKpB,EACD,oCACOyJ,GADP,IAEIrH,QAASga,EAAO/a,UAGxB,KAAKrB,EACD,oCACOyJ,GADP,IAEIrH,QAAQ,GAAD,oBAAOqH,EAAMrH,SAAb,CAAsBga,EAAO/a,YAI5C,KAAKrB,EACD,oCACOyJ,GADP,IAEIrH,QAASqH,EAAMrH,QAAQmI,KAAK,SAAA+B,GAAE,OAAIA,EAAGvL,SAAWqb,EAAO/a,QAAQN,OAASqb,EAAO/a,QAAUiL,OAGjG,KAAKtM,EAED,OADA6B,QAAQC,IAAKsa,EAAO/a,SACpB,6BACOoI,GADP,IAEIrH,QAASqH,EAAMrH,QAAQmI,KAAK,SAAAlI,GAAG,OAAIA,EAAIzB,KAAOwb,EAAO/a,QAAQT,GAAKwb,EAAO/a,QAAUgB,OAG3F,KAAKrC,EACD,oCACOyJ,GADP,IAEIrH,QAASqH,EAAMrH,QAAQmI,KAAK,SAAAlI,GAAG,OAAIA,EAAItB,SAAWqb,EAAO/a,QAAQyZ,aACnDzY,EADqB,6BAEhBA,GAFgB,IAEXC,WAAYD,EAAIC,WAAWiI,KAAK,SAAA2E,GAAG,OAAIA,IAAQkN,EAAO/a,QAAQ0Z,gBAC5DqB,EAAO/a,QAAQiT,eACfpF,YAGlC,KAAKlP,EACD,oCACOyJ,GADP,IAEIC,WAAW,IAGnB,KAAK1J,EACD,oCACOyJ,GADP,IAEIC,WAAW,IAGnB,KAAK1J,EACD,oCACOyJ,GADP,IAEIrH,QAASqH,EAAMrH,QAAQiK,QAAQ,SAAAhK,GAAG,OAAIA,EAAIzB,KAAOwb,EAAO/a,SAAWgB,OAG3E,KAAKrC,EACD,oCACOyJ,GADP,IAEIrH,QAASqH,EAAMrH,QAAQmI,KAAK,SAAAlI,GAAG,OAAIA,EAAItB,SAAWqb,EAAO/a,QAAQyZ,aACnDzY,EADqB,6BAEhBA,GAFgB,IAEXC,WAAY8Z,EAAO/a,QAAQiB,kBAI3D,KAAKtC,EACD,oCACOyJ,GADP,IAEI8Q,aAAc6B,EAAO/a,UAG7B,KAAKrB,EACD,oCACOyJ,GADP,IAEI8Q,aAAc,OAGtB,KAAKva,EACD,oCACOyJ,GADP,IAEIrH,QAAS,GACTsH,WAAW,EACX6Q,aAAc,OAGtB,QACI,OAAO9Q,IKhFfiE,MDI0B,WAAmC,IAAjCjE,EAAgC,uDAAzB1E,GAAcqX,EAAW,uCAE5D,OAASA,EAAOhb,OACPpB,GACD,6BACOyJ,GADP,IAGIiE,MAAO0O,EAAO/a,UAIXoI,GCdfhI,KFXuB,WAAqC,IAAnCgI,EAAkC,uDAA1B1E,GAAcqX,EAAY,uCAE3D,OAASA,EAAOhb,MAEZ,KAAKpB,GACD,oCACOyJ,GADP,IAEIvJ,IAAKkc,EAAO/a,QAAQnB,IACpBoF,KAAM8W,EAAO/a,QAAQuD,WAG7B,KAAK5E,GACD,oCACOyJ,GADP,IAEIvJ,IAAK,KACLoF,KAAM,OAGd,QACI,OAAOmE,MELN4S,GAAQC,aACjBJ,GACAH,GACIQ,aAAiBC,QCXVC,OARf,WACI,OACI,eAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,eAAC,GAAD,O,OCHZK,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8247cf3f.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { GoogleAuthProvider } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBX0u1mqveILXYZTpAk7IYYZ1LpETpP-XQ\",\r\n    authDomain: \"cuentas-claras-react.firebaseapp.com\",\r\n    projectId: \"cuentas-claras-react\",\r\n    storageBucket: \"cuentas-claras-react.appspot.com\",\r\n    messagingSenderId: \"668234537938\",\r\n    appId: \"1:668234537938:web:1e1d45c820953a6fd3860b\",\r\n    measurementId: \"G-GZG5TZLLN9\"\r\n  };\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider()\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    analytics\r\n}","export const types = {\r\n\r\n    nuevoIngreso: '[Movimientos] Nuevo Ingreso',\r\n    nuevoGasto: '[Movimientos] Nuevo Gasto',\r\n    nuevaTransferencia: '[Movimientos] Nueva Transferencia',\r\n    insertarMovActivo: '[Movimientos] Insertar Movimiento Activo',\r\n    eliminarMovActivo: '[Movimientos] Eliminar Movimiento Activo',\r\n    actualizarMovimiento: '[Movimientos] Actualizar Movimiento',\r\n    eliminarMovimiento: '[Movimientos] Eliminar Movimientos',\r\n    nuevaDeuda: '[Movimientos] Nueva Deuda',\r\n    editarMontosDeuda: '[Movimientos] Editar Montos Deuda',\r\n    eliminarCuotaDeuda: '[Movimientos] Eliminar Cuota Deuda',\r\n    nuevoPrestamo: '[Movimientos] Nuevo Prestamo',\r\n    editarNombreCategoria: '[Movimientos] Editar Nombre Categoria',\r\n    editarNombreCuenta: '[Movimientos] Editar Nombre Cuenta',\r\n    editarNombreSubcuenta: '[Movimientos] Editar Nombre Subcuenta',\r\n    limpiarMovimientos: '[Movimientos] Limpiar Movimientos',\r\n    cargarMovimientos: '[Movimientos] Cargar Movimientos',\r\n\r\n    openModal: '[Modal] Open Modal',\r\n    closeModal: '[Modal] Close Modal',\r\n\r\n    agregarCuenta: '[Cuentas] Agregar Cuenta',\r\n    eliminarCuenta: '[Cuentas] Eliminar Cuenta',\r\n    editarCuenta: '[Cuentas] Editar Cuenta',\r\n    agregarSubcuenta: '[Cuentas] Agregar Subcuenta',\r\n    eliminarSubcuenta: '[Cuentas] Eliminar Subcuenta',\r\n    editarSubcuenta: '[Cuentas] Editar Subcuenta',\r\n    abrirModoEdicionCuentas: '[Cuentas] Abrir Modo Edicion',\r\n    cerrarModoEdicionCuentas: '[Cuentas] Cerrar Modo Edicion',\r\n    insertarCuentaActiva: '[Cuentas] Insertar cuenta activa',\r\n    eliminarCuentaActiva: '[Cuentas] Eliminar cuenta activa',\r\n    limpiarCuentas: '[Cuentas] Limpiar Cuentas',\r\n    cargarCuentas: '[Cuentas] Cargar Cuentas',\r\n\r\n    agregarCategoria: '[Categorias] Agregar Categoria',\r\n    eliminarCategoria: '[Categorias] Eliminar Categoria',\r\n    editarCategoria: '[Categorias] Editar Categoria',\r\n    botonEditarCategoriaVisible: '[Categorias] Boton Editar Categoria Visible',\r\n    abrirModoEdicionCategorias: '[Categorias] Abrir Modo Edicion',\r\n    cerrarModoEdicionCategorias: '[Categorias] Cerrar Modo Edicion',\r\n    insertarCategoriaActiva: '[Categorias] Insertar Categoria activa',\r\n    eliminarCategoriaActiva: '[Categorias] Eliminar Categoria activa',\r\n    limpiarCategorias: '[Categorias] Limpiar Categorias',\r\n    cargarCategorias: '[Categorias] Cargar Categorias',\r\n\r\n    actualizarValores: '[Valores] Actualizar Valores',\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n\r\n}","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadCategorias = async( uid ) => {\r\n    const catsCollection = await getDocs( collection( db, `${ uid }/app/categorias` ) )\r\n    const cats = []\r\n\r\n    catsCollection.forEach( cat => {\r\n        cats.push({\r\n            ...cat.data(),\r\n            id: cat.id\r\n        })\r\n    })\r\n\r\n    cats.sort( ( a, b) => a.nombre > b.nombre ? 1 : -1 )\r\n    \r\n    return cats\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadCategorias } from '../helpers/loadCategorias';\r\nimport { types } from \"../types/types\";\r\n\r\nconst categorias = [\r\n        {\r\n            nombre: 'Materiales de cocina',\r\n            tipo: 'gasto',\r\n            sector: 'hogar'\r\n        },\r\n        {\r\n            nombre: 'Comida',\r\n            tipo: 'gasto',\r\n            sector: 'gastos varios'\r\n        },\r\n        {\r\n            nombre: 'Sueldo',\r\n            tipo: 'ingreso',\r\n            sector: 'ingresos varios'\r\n        },\r\n        {\r\n            nombre: 'Ventas',\r\n            tipo: 'ingreso',\r\n            sector: 'ingresos varios'\r\n        },\r\n        {\r\n            nombre: 'Luz',\r\n            tipo: 'gasto',\r\n            sector: 'servicios'\r\n        },\r\n        {\r\n            nombre: 'Gas',\r\n            tipo: 'gasto',\r\n            sector: 'servicios'\r\n        },\r\n        {\r\n            nombre: 'Netflix',\r\n            tipo: 'gasto',\r\n            sector: 'streaming'\r\n        },\r\n        {\r\n            nombre: 'Aporte inicial',\r\n            tipo: 'ingreso',\r\n            sector: 'Aporte inicial'\r\n        },\r\n        {\r\n            nombre: 'Intereses',\r\n            tipo: 'ingreso',\r\n            sector: 'Intereses'\r\n        },\r\n        {\r\n            nombre: 'Perdida',\r\n            tipo: 'gasto',\r\n            sector: 'Perdida'\r\n        },\r\n        \r\n    ]\r\n\r\nexport const startAgregarCategoriasPorDefecto = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            categorias.forEach( async cat => {\r\n\r\n                await addDoc( collection( db, `${ uid }/app/categorias` ), cat )\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCargarCategorias = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const cats = await loadCategorias( uid );\r\n\r\n            if ( cats.length === 0) {\r\n                dispatch( startAgregarCategoriasPorDefecto() )\r\n                dispatch( cargarCategorias( categorias ))\r\n            }else{\r\n\r\n                dispatch( cargarCategorias( cats ))\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const cargarCategorias = cats => (\r\n    {\r\n        type: types.cargarCategorias,\r\n        payload: cats\r\n    }\r\n)\r\n\r\nexport const startAgregarCategoria = cat => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const nuevaCat = await addDoc( collection( db, `${ uid }/app/categorias`), cat );\r\n            dispatch( agregarCategoria( { id: nuevaCat.id, ...cat }))\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }   \r\n\r\n    }\r\n}\r\n\r\nexport const agregarCategoria = cat => (\r\n    {\r\n        type: types.agregarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const startEditarCategoria = cat => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const catToFirestore = { ...cat };\r\n            delete catToFirestore.id;\r\n\r\n            await updateDoc( doc( db, `${ uid }/app/categorias/${ cat.id }` ), catToFirestore );\r\n\r\n            dispatch( editarCategoria( cat ))\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const editarCategoria = cat => (\r\n    {\r\n        type: types.editarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const abrirModoEdicionCategorias = () => (\r\n    {\r\n        type: types.abrirModoEdicionCategorias\r\n    }\r\n)\r\n\r\nexport const cerrarModoEdicionCategorias = () => (\r\n    {\r\n        type: types.cerrarModoEdicionCategorias\r\n    }\r\n)\r\n\r\nexport const startEliminarCategoria = cat => {\r\n    console.log( cat );\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await deleteDoc( doc( db, `${ uid }/app/categorias/${ cat.id }` ));\r\n            dispatch( eliminarCategoria( cat ) )\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarCategoria = cat => (\r\n    {\r\n        type: types.eliminarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const insertarCategoriaActiva = cat =>(\r\n    {\r\n        type: types.insertarCategoriaActiva,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const eliminarCategoriaActiva = () => (\r\n    {\r\n        type: types.eliminarCategoriaActiva\r\n    }\r\n)\r\n\r\nexport const limpiarCategorias = () => (\r\n    {\r\n        type: types.limpiarCategorias\r\n    }\r\n)","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadCuentas = async( uid ) => {\r\n    const cuentasCollection = await getDocs( collection( db, `${ uid }/app/cuentas` ) )\r\n    const cuentas = []\r\n\r\n    cuentasCollection.forEach( cta => {\r\n        cuentas.push({\r\n            ...cta.data(),\r\n            id: cta.id\r\n        })\r\n    })\r\n\r\n    cuentas.sort( ( a, b) => a.nombre > b.nombre ? 1 : -1 )\r\n    \r\n    return cuentas\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadCuentas } from '../helpers/loadCuentas';\r\nimport { types } from \"../types/types\";\r\n\r\nconst cuentas = [\r\n    {\r\n        nombre: 'ARS',\r\n        subcuentas: ['Efectivo', 'Banco HSBC', 'Mercado Pago']\r\n    },{\r\n        nombre: 'USD',\r\n        subcuentas: ['Efectivo','Banco HSBC', 'Plazo Fijo']\r\n    },\r\n    {\r\n        nombre: 'BTC',\r\n        subcuentas: ['Binance', 'Decrypto']\r\n    },\r\n    {\r\n        nombre: 'ETH',\r\n        subcuentas: ['Binance', 'Decrypto']\r\n    },\r\n    {\r\n        nombre: 'Activos',\r\n        subcuentas: ['Auto', 'Moto', 'Casa', 'Terreno', 'Bici', 'NFTs' ]\r\n    },\r\n    {\r\n        nombre: 'Otras criptomonedas',\r\n        subcuentas: ['Ethereum', 'Cardano']\r\n    },\r\n]\r\n\r\nexport const startAgregarCuentasPorDefecto = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            cuentas.forEach( async cta => {\r\n                await addDoc( collection( db, `${ uid }/app/cuentas`), cta )\r\n\r\n            })\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCargarCuentas = () => {\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const cuentasFirebase = await loadCuentas( uid )\r\n\r\n            if ( cuentasFirebase.length === 0 ) {\r\n                dispatch( startAgregarCuentasPorDefecto() )\r\n                dispatch( cargarCuentas( cuentas ))\r\n            } else {\r\n\r\n                dispatch( cargarCuentas( cuentasFirebase ) )\r\n            }\r\n\r\n\r\n        } catch ( err) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nconst cargarCuentas = cuentas => (\r\n    {\r\n        type: types.cargarCuentas,\r\n        payload: cuentas\r\n    }\r\n)\r\n\r\nexport const startAgregarCuenta = cta => {\r\n    return async( dispatch, getState ) =>{\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const nuevaCuenta = await addDoc( collection( db, `${ uid }/app/cuentas` ), cta )\r\n            dispatch( agregarCuenta({\r\n                id: nuevaCuenta.id,\r\n                ...cta\r\n            }))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const agregarCuenta = cuenta => (\r\n    {\r\n        type: types.agregarCuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startAgregarSubcuenta = cuenta => {\r\n    console.log( cuenta );\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ cuenta.id }`), cuenta )\r\n            dispatch( agregarSubcuenta( cuenta ))\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const agregarSubcuenta = cuenta => (\r\n    {\r\n        type: types.agregarSubcuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startEditarCuenta = cuenta => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const cuentaToFirestore = { ...cuenta, nombre: cuenta.nuevaCuenta }\r\n\r\n            delete cuentaToFirestore.id\r\n            delete cuentaToFirestore.cantidad\r\n            delete cuentaToFirestore.nuevaCuenta\r\n            console.log( cuentaToFirestore );\r\n    \r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ cuenta.id }` ), cuentaToFirestore )\r\n            \r\n            dispatch( editarCuenta( { ...cuentaToFirestore, id: cuenta.id } ));\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const editarCuenta = cuenta => (\r\n    {\r\n        type: types.editarCuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startEditarSubcuenta = sub => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            sub.subcuentas.push( sub.nuevaSubcuenta )\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ sub.id }` ), {\r\n                nombre: sub.cuentaActual,\r\n                subcuentas: sub.subcuentas\r\n            })\r\n            dispatch( editarSubcuenta( sub ))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const editarSubcuenta = subcuenta => (\r\n    {\r\n        type: types.editarSubcuenta,\r\n        payload: subcuenta\r\n    }\r\n)\r\n\r\nexport const abrirModoEdicionCuentas = () => (\r\n    {\r\n        type: types.abrirModoEdicionCuentas\r\n    }\r\n)\r\n\r\nexport const cerrarModoEdicionCuentas = () => (\r\n    {\r\n        type: types.cerrarModoEdicionCuentas\r\n    }\r\n)\r\n\r\nexport const startEliminarCuenta = id => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await deleteDoc( doc( db, `${ uid }/app/cuentas/${ id }`))\r\n            dispatch( eliminarCuenta( id ))\r\n            \r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarCuenta = id => (\r\n    {\r\n        type: types.eliminarCuenta,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const startEliminarSubcuenta = sub => {\r\n    console.log( sub );\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ sub.id }`), {\r\n                nombre: sub.cuentaActual,\r\n                subcuentas: sub.subcuentas\r\n            })\r\n            dispatch( eliminarSubcuenta( sub ))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarSubcuenta = subcuenta => (\r\n    {\r\n        type: types.eliminarSubcuenta,\r\n        payload: subcuenta\r\n    }\r\n)\r\n\r\nexport const insertarCuentaActiva = cta =>(\r\n    {\r\n        type: types.insertarCuentaActiva,\r\n        payload: cta\r\n    }\r\n)\r\n\r\nexport const eliminarCuentaActiva = () => (\r\n    {\r\n        type: types.eliminarCuentaActiva\r\n    }\r\n)\r\n\r\nexport const limpiarCuentas = () => (\r\n    {\r\n        type: types.limpiarCuentas\r\n    }\r\n)","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadMovs = async( uid ) => {\r\n    const movsCollection = await getDocs( collection( db, `${ uid }/app/movimientos` ) )\r\n    const movs = []\r\n\r\n    movsCollection.forEach( mov => {\r\n        movs.push({\r\n            ...mov.data(),\r\n            id: mov.id,\r\n            fecha: new Date( mov.data().fecha ),\r\n        })\r\n    })\r\n\r\n    movs.sort( ( a, b) => a.fecha > b.fecha ? -1 : 1 )\r\n    \r\n    return movs\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadMovs } from '../helpers/loadMovs';\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNuevoMovimiento = ( mov, tipo ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth\r\n        try {\r\n            const doc = await addDoc( collection( db, `${ uid }/app/movimientos`), mov )\r\n\r\n            tipo === 'nuevoIngreso' && dispatch( nuevoIngreso({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevoGasto' && dispatch( nuevoGasto({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevaTransferencia' && dispatch( nuevaTransferencia({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevoPrestamo' && dispatch( nuevoPrestamo({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevaDeuda' && dispatch( nuevaDeuda({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            \r\n        } catch (err) {\r\n            console.log( err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const nuevoIngreso = (mov) => (\r\n    {\r\n        type: types.nuevoIngreso,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevoGasto = (mov) => (\r\n    {\r\n        type: types.nuevoGasto,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevaTransferencia = (mov) => (\r\n    {\r\n        type: types.nuevaTransferencia,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevaDeuda = mov => (\r\n    {\r\n        type: types.nuevaDeuda,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevoPrestamo = mov => (\r\n    {\r\n        type: types.nuevoPrestamo,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const insertarMovimientoActivo = mov => (\r\n    {\r\n        type: types.insertarMovActivo,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const eliminarMovimientoActivo = () => (\r\n    {\r\n        type: types.eliminarMovActivo,\r\n    }\r\n)\r\n\r\nexport const startCargarMovimientos = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n        const movs = await loadMovs( uid );\r\n        dispatch( cargarMovimientos( movs ))\r\n    }\r\n}\r\n\r\nconst cargarMovimientos = movs => (\r\n    {\r\n        type: types.cargarMovimientos,\r\n        payload: movs\r\n    }\r\n)\r\n\r\nexport const startActualizarMovimiento = ( mov ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth\r\n\r\n        const movToFirestore = { ...mov };\r\n        delete movToFirestore.id;\r\n\r\n        await updateDoc( doc( db, `${ uid }/app/movimientos/${ mov.id }` ), movToFirestore )\r\n\r\n        dispatch( actualizarMovimiento( { ...mov, fecha: new Date( mov.fecha ) } ));\r\n    }\r\n}\r\n\r\nexport const actualizarMovimiento = mov => (\r\n    {\r\n        type: types.actualizarMovimiento,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const startEliminarMovimiento = id => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await deleteDoc( doc( db, `${ uid }/app/movimientos/${ id }`))\r\n        dispatch( eliminarMovimiento( id ))\r\n    }\r\n}\r\n\r\nexport const eliminarMovimiento = id => (\r\n    {\r\n        type: types.eliminarMovimiento,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const startEditarNombreCategoria = cat => {\r\n    return async( dispatch, getState ) =>{\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) )\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().categoria === cat.categoriaActual ) {\r\n\r\n                dispatch( startActualizarMovimiento( {...mov.data(), id: mov.id, categoria: cat.nuevaCategoria } ) )\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const editarNombreCategoria = cat =>(\r\n    {\r\n        type: types.editarNombreCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const startEditarNombreCuenta = cta => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, cuenta : cta.nuevaCuenta }))\r\n            }\r\n            if ( mov.data().from?.cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, from: { ...mov.from, cuenta: cta.nuevaCuenta } }))\r\n            }\r\n            if ( mov.data().to?.cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, to: { ...mov.to, cuenta: cta.nuevaCuenta } }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const editarNombreCuenta = cta =>(\r\n    {\r\n        type: types.editarNombreCuenta,\r\n        payload: cta\r\n    }\r\n) */\r\n\r\nexport const startEditarNombreSubcuenta = sub => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().categoria === sub.subcuentaActual ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, categoria: sub.nuevaSubcuenta }))\r\n            }\r\n            if ( mov.data().cuenta === sub.cuentaActual || mov.data().from?.cuenta === sub.cuentaActual || mov.data().to?.cuenta === sub.cuentaActual ) {\r\n                \r\n                if ( mov.data().subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, subcuenta: sub.nuevaSubcuenta }))\r\n                }\r\n                if ( mov.data().from?.subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, from: { ...mov.data().from, subcuenta: sub.nuevaSubcuenta } }))\r\n                }\r\n                if ( mov.data().to?.subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, to: { ...mov.data().to, subcuenta: sub.nuevaSubcuenta } }))\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n/* export const editarNombreSubcuenta = sub => (\r\n    {\r\n        type: types.editarNombreSubcuenta,\r\n        payload: sub\r\n    }\r\n) */\r\n\r\nexport const startEditarMontosDeuda = deuda => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.id === deuda.idReferencia ) {\r\n                dispatch( startActualizarMovimiento( {\r\n                    ...mov.data(),\r\n                    id: mov.id,\r\n                    subcuenta: deuda.subcuenta,\r\n                    cantidadPagada: ( mov.data().cantidadPagada - deuda.cantidadAnterior + deuda.cantidadNueva ),\r\n                    cuotasPagadas: ( mov.data().cuotasPagadas - deuda.cuotasAnterior + deuda.cuotasNuevas ),\r\n                    estado: ( mov.data().cantidad - (mov.data().cantidadPagada - deuda.cantidadAnterior) - deuda.cantidadNueva) > 0 ? 'pendiente' : 'saldado'\r\n                }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const editarMontosDeuda = deuda =>(\r\n{\r\n    type: types.editarMontosDeuda,\r\n    payload: deuda\r\n}\r\n) */\r\n\r\nexport const startEliminarCuotaDeuda = deuda => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.id === deuda.idReferencia ) {\r\n                dispatch( actualizarMovimiento( {\r\n                    ...mov.data(),\r\n                    id: mov.id,\r\n                    cantidadPagada: ( mov.data().cantidadPagada - deuda.cantidadAnterior ),\r\n                    cuotasPagadas: ( mov.data().cuotasPagadas - deuda.cuotasAnterior ),\r\n                    estado: ( mov.data().cantidad - ( mov.data().cuotasPagadas - deuda.cuotasAnterior ) ) > 0 ? 'pendiente' : 'saldado'\r\n                }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const eliminarCuotaDeuda = deuda =>(\r\n    {\r\n        type: types.eliminarCuotaDeuda,\r\n        payload: deuda\r\n    }\r\n) */\r\n    \r\nexport const limpiarMovimientos = () => (\r\n    {\r\n        type: types.limpiarMovimientos\r\n    }\r\n)","import { getAuth, signInWithPopup, signOut, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport Swal from 'sweetalert2'\r\nimport { googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from '../types/types'\r\nimport { limpiarCategorias } from './categoriasActions'\r\nimport { limpiarCuentas } from './cuentasActions'\r\nimport { limpiarMovimientos } from './movsActions'\r\n\r\nexport const startingLoginWithGoogle = () => {\r\n    return async( dispatch, getState ) =>{\r\n        const auth = getAuth()\r\n        const { user } = await signInWithPopup( auth, googleAuthProvider )\r\n        dispatch( login( user.uid, user.displayName ))\r\n    }\r\n}\r\n\r\nexport const login = ( uid, userName ) =>(\r\n    {\r\n        type: types.login,\r\n        payload:{\r\n            uid, userName\r\n        }\r\n    }\r\n)\r\n\r\nexport const startingLogout = () => {\r\n    return( async dispatch => {\r\n        const auth = getAuth();\r\n        await signOut( auth )\r\n        dispatch( logout() )\r\n        dispatch( limpiarMovimientos() )\r\n        dispatch( limpiarCuentas() )\r\n        dispatch( limpiarCategorias() )\r\n    })\r\n}\r\n\r\nconst logout = () => (\r\n    {\r\n        type: types.logout\r\n    }\r\n)\r\n\r\nexport const startingRegisterWithEmail = ( nombre, email, password ) => {\r\n    return async( dispatch ) =>{\r\n        try {\r\n            const auth = getAuth();\r\n            const { user } = await createUserWithEmailAndPassword( auth, email, password )\r\n            await updateProfile( user, { displayName: nombre })\r\n            dispatch( login( user.uid, nombre ))\r\n\r\n        } catch (err) {\r\n            if ( err.code === 'auth/email-already-in-use' ) {\r\n                \r\n                Swal.fire('Ups', 'Ya existe una cuenta con ese mail', 'error')\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const startingLoginWithEmail = ( email, password ) => {\r\n    return async dispatch => {\r\n        try {\r\n            const auth = getAuth();\r\n            const { user } = await signInWithEmailAndPassword( auth, email, password )\r\n            dispatch( login( user.uid, user.displayName ))\r\n        } catch (err) {\r\n            if ( err.code === 'auth/wrong-password') {\r\n                Swal.fire('Contraseña incorrecta', 'Usuario y contraseña no coinciden', 'error')\r\n            }\r\n            if ( err.code === 'auth/user-not-found') {\r\n                Swal.fire( 'Email incorrecto', 'Usuario no encontrado', 'error')\r\n            }\r\n        }\r\n        \r\n    }\r\n}","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [formValues, setFormValues] = useState( initialState )\r\n\r\n    const handleChange = (e)=> {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ e.target.name ]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChangeCalendar = e => {\r\n        setFormValues({\r\n            ...formValues,\r\n            fecha: e\r\n        })\r\n    }\r\n\r\n    const handleChangeFrom = e =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            from:{\r\n                ...formValues.from,\r\n                [ e.target.name ]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChangeTo = e =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            to:{\r\n                ...formValues.to,\r\n                [ e.target.name ]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    return [ formValues, handleChange, handleChangeCalendar, handleChangeFrom, handleChangeTo ];\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport validator from 'validator';\r\nimport { startingLoginWithEmail, startingLoginWithGoogle } from \"../../actions/authActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginForm = ({ handleChangeScreen }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [errorForm, setErrorForm] = useState( false )\r\n\r\n    const loginWithGoogle = e => {\r\n        e.preventDefault()\r\n        dispatch( startingLoginWithGoogle() )\r\n    }\r\n\r\n    const [ formValues, handleChange ] = useForm({\r\n        email: '',\r\n        pass: '',\r\n    })\r\n\r\n    const isFormLoginValid = () =>{\r\n        if ( !validator.isEmail( formValues.email1.trim() )) {\r\n            setErrorForm( 'Email invalido')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n        if ( isFormLoginValid ) {\r\n            \r\n            dispatch( startingLoginWithEmail( formValues.email, formValues.pass ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__container flip-scale-up-ver\">\r\n            <div className=\"img-user\">\r\n                <i className=\"bi bi-person\"></i>\r\n            </div>\r\n            <h1>Cuentas claras</h1>\r\n            {\r\n                errorForm && \r\n                    <div className=\"form__error\">\r\n                        <p className=\"msg-error\">{ errorForm }</p>\r\n                    </div>\r\n            }\r\n            <form onSubmit={ handleLogin }>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input name=\"email\" value={ formValues.email } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Email usuario\"/>\r\n                    <label htmlFor=\"floatingInput\">Email usuario</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass\" value={ formValues.pass } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\"/>\r\n                    <label htmlFor=\"floatingPassword\">Password</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn submit\">Ingresar</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresar con Google</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ loginWithGoogle }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            Sign in with google\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn change\" onClick={ handleChangeScreen }>¿No estás registrado? Registrate ahora</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { useState } from \"react\";\r\nimport { startingRegisterWithEmail } from \"../../actions/authActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const RegisterForm = ({ handleChangeScreen }) => {\r\n\r\n    const [errorForm, setErrorForm] = useState( false )\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, handleChange ] = useForm({\r\n        nombre: '',\r\n        email1: '',\r\n        email2: '',\r\n        pass1: '',\r\n        pass2: ''\r\n    })\r\n\r\n    const isFormRegisterValid = () =>{\r\n        if ( formValues.nombre.trim().length < 3 || !validator.isAlpha( formValues.nombre.trim(), ['es-ES'] ) ) {\r\n            setErrorForm('Nombre invalido')\r\n            return false;\r\n        }\r\n        if ( !validator.isEmail( formValues.email1.trim() )) {\r\n            setErrorForm( 'Email invalido')\r\n            return false;\r\n        }\r\n        if ( formValues.email2.trim() !== formValues.email1.trim() ) {\r\n            setErrorForm( 'Los emails deben ser iguales')\r\n            return false;\r\n        }\r\n        if ( !validator.isStrongPassword( formValues.pass1.trim(), { \r\n            minLength: 5,\r\n            minLowercase: 1,\r\n            minUppercase: 1,\r\n            minNumbers: 1,\r\n            minSymbols: 0,\r\n        }) ) {\r\n            setErrorForm( 'La contraseña debe tener al menos 5 caracteres, mayusculas, minusculas y numeros')\r\n            return false;\r\n        }\r\n        if ( formValues.pass1 !== formValues.pass2 ) {\r\n            setErrorForm('Las contraseñas deben ser iguales')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n        if ( isFormRegisterValid() ) {\r\n            \r\n            dispatch( startingRegisterWithEmail( formValues.nombre, formValues.email1, formValues.pass1 ) )\r\n            setErrorForm( false )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__container flip-scale-up-ver\">\r\n            <div className=\"img-user\">\r\n                <i className=\"bi bi-person\"></i>\r\n            </div>\r\n            <h1>Cuentas claras</h1>\r\n            {\r\n                errorForm && \r\n                    <div className=\"form__error\">\r\n                        <p className=\"msg-error\">{ errorForm }</p>\r\n                    </div>\r\n            }\r\n            <form onSubmit={ handleRegister }>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"nombre\" value={ formValues.nombre } onChange={ handleChange } type=\"text\" className=\"form-control\" id=\"floatingInputName\" required placeholder=\"Ingrese su nombre\"/>\r\n                    <label htmlFor=\"floatingInputName\">Ingrese su nombre</label>\r\n                </div>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"email1\" value={ formValues.email1 } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInputEmail1\" required placeholder=\"Ingrese su email\"/>\r\n                    <label htmlFor=\"floatingInputEmail1\">Ingrese su email</label>\r\n                </div>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"email2\" value={ formValues.email2 } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInputEmail2\" required placeholder=\"Confirmar email\"/>\r\n                    <label htmlFor=\"floatingInputEmail2\">Confirmar email</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass1\" value={ formValues.pass1 } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword1\" required placeholder=\"Password\"/>\r\n                    <label htmlFor=\"floatingPassword1\">Password</label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass2\" value={ formValues.pass2 } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword2\" required placeholder=\"Confirmar password\"/>\r\n                    <label htmlFor=\"floatingPassword2\">Confirmar password</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn submit\">Registrarse</button>\r\n                <button className=\"btn change\" onClick={ handleChangeScreen }>¿Ya estás registrado? Ingresa con tu cuenta</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { RegisterForm } from \"./RegisterForm\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [screen, setScreen] = useState('login')\r\n\r\n    const handleChangeScreen = e => {\r\n        e.preventDefault();\r\n        screen === 'login' ? setScreen( 'register') : setScreen('login')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className=\"img-fondo\" src=\"https://www.billin.net/blog/wp-content/uploads/2020/09/Libro-mayor-1140x760.jpg\" alt=\"fondo-contabilidad\" />\r\n            <div className=\"login__screen\">\r\n                {\r\n                    screen === 'login'\r\n                    && <LoginForm handleChangeScreen={ handleChangeScreen } />\r\n                }\r\n                {\r\n                    screen === 'register'\r\n                    && <RegisterForm handleChangeScreen= { handleChangeScreen } />\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const openModal = ( typeModal ) => (\r\n    {\r\n        type: types.openModal,\r\n        payload: {\r\n            tipo: typeModal.tipo,\r\n            modo: typeModal.modo,\r\n            title: typeModal.title\r\n        }\r\n    }\r\n)\r\n\r\nexport const closeModal = () => (\r\n    {\r\n        type: types.closeModal,\r\n    }\r\n)","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport { abrirModoEdicionCategorias, cerrarModoEdicionCategorias } from \"../../../actions/categoriasActions\";\r\nimport { abrirModoEdicionCuentas, cerrarModoEdicionCuentas } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const Buttons = ({ botonEditarVisible= false, ruta }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isButtonsOpen, setIsButtonsOpen] = useState(false)\r\n    const { isEditing:isEditingCuentas } = useSelector(state => state.cuentas)\r\n    const { isEditing:isEditingCategorias } = useSelector(state => state.cats)\r\n\r\n    const openVistaButtons = e => {\r\n        e.preventDefault();\r\n        setIsButtonsOpen( !isButtonsOpen )\r\n    }\r\n\r\n    const openingModal = ( e, tipo ) =>{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch( openModal( {\r\n            tipo: tipo || e.target.value,\r\n            modo: 'crear'\r\n         } ) )\r\n         setIsButtonsOpen( false )\r\n    }\r\n\r\n    const openVistaEditar = e => {\r\n        e.preventDefault();\r\n        ruta === 'cuentas' && dispatch( abrirModoEdicionCuentas() )\r\n        ruta === 'categorias' && dispatch( abrirModoEdicionCategorias() )\r\n        \r\n    }\r\n\r\n    const closeVistaEditar = e => {\r\n        e.preventDefault();\r\n        ruta === 'cuentas' && dispatch( cerrarModoEdicionCuentas() )\r\n        ruta === 'categorias' && dispatch( cerrarModoEdicionCategorias() )\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <div className='boton-editar'>\r\n            { (botonEditarVisible && !isEditingCuentas) &&   <button className=\"btn btn-warning btn-editar\">\r\n                                                                    <i onClick={ openVistaEditar } className=\"bi bi-pencil\"></i>\r\n                                                                </button>\r\n            }\r\n            { (botonEditarVisible && isEditingCuentas) && <button className=\"btn btn-editar buttons__close\">\r\n                                                                <i onClick={ closeVistaEditar } className=\"bi bi-x\"></i>\r\n                                                            </button>\r\n            }\r\n            { (botonEditarVisible && isEditingCategorias) && <button className=\"btn btn-editar buttons__close\">\r\n                                                                <i onClick={ closeVistaEditar } className=\"bi bi-x\"></i>\r\n                                                            </button>\r\n            }\r\n        </div>\r\n        <div className=\"boton-plus\">\r\n            {\r\n                !isButtonsOpen ? <button className='buttons__plus' onClick={ openVistaButtons }>+</button>\r\n                              : <button className='buttons__close' onClick={ openVistaButtons }><i className=\"bi bi-x\"></i></button>\r\n            }\r\n            <div className={`vista-buttons ${ isButtonsOpen ? 'visible' : '' }`}>\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='ingreso' className='btn btn-menu'>Nuevo ingreso<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-graph-up-arrow\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='transferencia' className='btn btn-menu'>Transferir entre cuentas<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-arrow-left-right\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='gasto' className='btn btn-menu'>Nuevo gasto<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-graph-down-arrow\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='deuda' className='btn btn-menu'>Nueva deuda<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-bank\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='prestamo' className='btn btn-menu'>Nuevo prestamo<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-bank\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='deudaACobrar' className='btn btn-menu'>Nueva deuda a cobrar<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-percent\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='compraActivos' className='btn btn-menu'>Compra de activos<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-cart\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='ventaActivos' className='btn btn-menu'>Venta de activos<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-piggy-bank\"></i></button>\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const Select = ({options, clase, actualizarState, state }) => {\r\n    return (\r\n        <span className='select__view'>\r\n            <select className={ clase } onChange={ actualizarState } defaultValue={ state }>\r\n                {\r\n                    options.map( op => <option key={ op } value={ op }>{ op } </option> )\r\n                }\r\n            </select>\r\n        </span>\r\n    )\r\n}\r\n\r\nSelect.propTypes = {\r\n    options : PropTypes.array.isRequired,\r\n    clase: PropTypes.string,\r\n    actualizarState: PropTypes.func\r\n}","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openModal } from '../../../actions/modalActions';\r\nimport { insertarMovimientoActivo } from '../../../actions/movsActions';\r\n\r\n\r\nexport const Table = ({ movimientos, cantMostrada, cabecera }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editarModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'editar'\r\n        } ) )\r\n    }\r\n\r\n    const detalleModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'solo ver'\r\n        } ) )\r\n    }\r\n\r\n    let ultimosMovimientos = movimientos;\r\n\r\n    if ( cantMostrada !== undefined) {\r\n        ultimosMovimientos = movimientos.slice(0,cantMostrada);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">{ cabecera[0] }</th>\r\n                        <th scope=\"col\">{ cabecera[1] }</th>\r\n                        <th scope=\"col\">{ cabecera[2] }</th>\r\n                        <th scope=\"col\">{ cabecera[3] }</th>\r\n                        {\r\n                            cabecera[4] && <th scope=\"col\">{ cabecera[4] }</th>\r\n                        }\r\n                        {\r\n                            cabecera[5] && <th scope=\"col\">{ cabecera[5] }</th>\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        ultimosMovimientos.map( mov => \r\n                            <tr key={ mov.id } className={`table__movimiento ${ mov.estado === 'saldado' ? 'saldado' : 'pendiente'}` } onClick={ e => detalleModal( e, mov ) }>\r\n                                {\r\n                                    mov.estado !== 'saldado'\r\n                                    ?   <th scope=\"row\">{ mov.tipo === 'gasto' && '-' }{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"}).format( mov.cantidadPagada ? mov.cantidad - mov.cantidadPagada : mov.cantidad ) }</th>\r\n                                    :   <th scope=\"row\">Saldado</th>\r\n                                }\r\n                                \r\n                                <td>{ mov.categoria || (mov.tipo === 'deudaACobrar' ? 'Deuda a cobrar' : mov.tipo)  }</td>\r\n                                {\r\n                                    (mov.prestador) && <td>{ mov.prestador }</td>\r\n                                }\r\n                                {\r\n                                    mov.tomador && <td>{ mov.tomador }</td>\r\n                                }\r\n                                {\r\n                                    mov.subcuenta ? <td>{ mov.subcuenta } ({mov.cuenta})</td>\r\n                                                    : <td>{ mov.cuenta }</td>\r\n                                }\r\n                                <td>{ new Date( mov.fecha ).toLocaleDateString() }</td>\r\n                                {\r\n                                    (mov.prestador || mov.tomador) && \r\n                                        <td>\r\n                                            <button className='table__btn'>{\r\n                                                mov.estado === 'saldado' ? <i className=\"bi bi-check2-circle\"></i>\r\n                                                                            : <i className=\"bi bi-clock-history\"></i>\r\n                                            } </button>\r\n                                                \r\n                                        </td> \r\n                                }\r\n                                {\r\n                                    (mov.estado !== 'saldado' && mov.categoria !== 'prestamo saldado') && <td>\r\n                                                                        <button className='table__btn'><i className=\"bi bi-pencil\" onClick={ e =>  editarModal( e, mov ) }></i></button>  \r\n                                                                    </td>\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nTable.propTypes = {\r\n    movimientos : PropTypes.array.isRequired\r\n}\r\n\r\nTable.defaultProps = {\r\n    cabecera : ['Cantidad', 'Categoria', 'Cuenta', 'Fecha' ]\r\n}","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { Table } from \"../../ui/tables/Table\"\r\n\r\nexport const MovimientosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n\r\n    const movimientos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deudaACobrar' && el.tipo !== 'compraActivos' && el.tipo !== 'ventaActivos')\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className='go-back'>\r\n                <i className=\"bi bi-arrow-left-short\"></i>\r\n            </Link>\r\n            <div className='container-view'>\r\n                <Select actualizarState={ handleChangeMes } options={ meses } state={ mesFiltro }/>\r\n                <h1 className='movimientos__titulo'>Todos los movimientos</h1>\r\n                <Table movimientos={ movimientos } />\r\n                <Buttons />\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { insertarCategoriaActiva } from \"../../../actions/categoriasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { Table } from \"../tables/Table\"\r\n\r\nexport const AcordeonTable = ({ categorias, tableElements }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isEditing } = useSelector(state => state.cats);\r\n    \r\n\r\n    const handleToggleAccordion = (e, cat ) => {\r\n\r\n        if ( e.classList.contains('accordion-button') ) {\r\n            \r\n        let cantElemInternos = tableElements.filter(el => el.categoria === cat ).length\r\n\r\n        e.classList.toggle('collapsed');\r\n        e.parentElement.nextSibling.classList.toggle('show');\r\n\r\n        if (e.parentElement.nextSibling.classList.contains('show')) {\r\n            \r\n            e.parentElement.nextSibling.style.height = 50 * ( cantElemInternos + 1 ) + 'px' ;\r\n            \r\n        } else{\r\n            e.parentElement.nextSibling.style.height = '0px'\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const sumarCantidadTotalPorCategoria = ( cat ) =>{\r\n        let cantidadTotal = 0\r\n        tableElements.filter(el => el.categoria === cat ).map( el => cantidadTotal += parseInt( el.cantidad ) );\r\n        return cantidadTotal;\r\n    }\r\n\r\n    const openingModal = ( e, catNombre, catCantidad, id, tipo ) =>{\r\n        e.preventDefault();\r\n\r\n        dispatch( openModal({\r\n            tipo: 'editar categorias',\r\n        }))\r\n        dispatch( insertarCategoriaActiva( { catNombre, catCantidad, id, tipo } ))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n            {\r\n                categorias.map( cat =>\r\n                    <div className=\"accordion-item\" key={ cat.nombre }>\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                            <button onClick={ (e) => handleToggleAccordion( e.target, cat.nombre ) } className=\"accordion-button d-flex justify-content-between align-items-center collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                                { cat.nombre }\r\n                                <span onClick={ e => e.target.parentElement.click() } className={`badge bg-secondary bg-${ (cat.tipo === 'gasto' && sumarCantidadTotalPorCategoria( cat.nombre ) !== 0 ) ? 'danger' : '' }${ ( cat.tipo === 'ingreso' && sumarCantidadTotalPorCategoria( cat.nombre ) !== 0 ) ? 'success' : '' }`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( sumarCantidadTotalPorCategoria( cat.nombre ) )  }</span>\r\n                                { isEditing && <i onClick={ e => openingModal( e, cat.nombre, sumarCantidadTotalPorCategoria( cat.nombre ), cat.id, cat.tipo )} className=\"bi bi-pencil\"></i> }\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                            <div className=\"accordion-body\">\r\n                                <Table movimientos={tableElements.filter(el => el.categoria === cat.nombre )} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { cerrarModoEdicionCategorias } from \"../../../actions/categoriasActions\"\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\n\r\nexport const CategoriesScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch( cerrarModoEdicionCategorias())\r\n        }\r\n    }, [ dispatch ])\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const movimientos = movs.filter( el => meses[ new Date( el.fecha ).getMonth()] === mesFiltro ).filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia');\r\n    \r\n    const categoriasTotales = categorias.sort( (a,b) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Categorias</h1>\r\n            <AcordeonTable categorias={ categoriasTotales } tableElements={ movimientos }/>\r\n            <Buttons botonEditarVisible={ true } ruta='categorias'/>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const convertidor = ( array, state, pares ) =>{\r\n    // console.log( array );\r\n\r\n    const coin = [ 'BTC', 'ETH', 'USD', 'XRP', 'ADA']\r\n    const fiat = ['ARS', 'USD', 'MXN']\r\n        \r\n    return array.reduce( (acumulador, actual ) => {\r\n        // console.log( actual );\r\n\r\n        if ( actual.valor !== 0) {\r\n            \r\n            if ( actual.nombre === state ) {\r\n                \r\n                actual = actual.valor\r\n                // console.log( actual );\r\n                return acumulador + actual;\r\n            }\r\n    \r\n            if ( coin.includes( state ) && fiat.includes( actual.nombre ) ) {\r\n                \r\n                actual = actual.valor / pares.find( par => par.nombre === `${ state }/${ actual.nombre }`).valor;\r\n                return acumulador + actual;\r\n            }\r\n    \r\n            if ( coin.includes( actual.nombre ) && fiat.includes( state ) ) {\r\n\r\n                actual = actual.valor * pares.find( par => par.nombre === actual.nombre + '/' + state ).valor;        \r\n                return acumulador + actual;\r\n            }\r\n        }\r\n\r\n        return acumulador + actual.valor\r\n\r\n    }, 0 )\r\n\r\n}\r\n","import { convertidor } from \"./convertidor\";\r\n\r\n\r\nexport const sumarCantidadTotalPorCuenta = ( movs, cuentas, cta ) =>{\r\n\r\n    let cantidadTotalPorCuenta = 0\r\n\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'ingreso').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'gasto').map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'prestamo').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'deudaACobrar').map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'transferencia').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'transferencia').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'compraActivos').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'compraActivos').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'ventaActivos').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'ventaActivos').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n\r\n    \r\n    movs.filter(el => cuentas.find(el => el.nombre === cta ).subcuentas.includes( el.categoria ) ).filter( el => el.tipo === 'gasto').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n\r\n    return {\r\n        nombre: cta,\r\n        valor : cantidadTotalPorCuenta,\r\n    }\r\n}\r\n\r\nexport const sumarCantidadEnCuentasActivos = ( movs, cta, subcuentaActivo ) => {\r\n\r\n    let cantidadTotalPorCuenta = {\r\n        nombre: cta,\r\n        valor: 0\r\n    };\r\n\r\n    movs.filter( mov => mov.tipo === 'compraActivos' && mov.from.cuenta === cta && mov.to.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor += parseInt( el.cantidad ))\r\n    movs.filter( mov => mov.tipo === 'ventaActivos' && mov.to.cuenta === cta && mov.from.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor -= parseInt( el.cantidad ))\r\n    movs.filter( mov => mov.tipo === 'ingreso' && mov.cuenta === 'Activos' && mov.monedaValuacion === cta && mov.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor += parseInt( el.cantidad ))\r\n\r\n    return cantidadTotalPorCuenta;\r\n    \r\n}\r\n\r\nexport const sumarCantidadPorSubcuenta = ( movs, cuentas, cta, pares ) => {\r\n\r\n    let elementos = [];\r\n    \r\n    const subcuentas = cuentas.find(el => el.nombre === cta ).subcuentas;\r\n    \r\n    subcuentas.forEach( e =>{\r\n        \r\n        let activos= []\r\n        let monedaValuacion='';\r\n        let cantidadTotal = 0;\r\n        \r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'ingreso' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'gasto' ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'prestamo' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'deudaACobrar' ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.categoria === e ).filter( mov => mov.tipo === 'gasto' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'transferencia' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'transferencia' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'compraActivos' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'compraActivos' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'ventaActivos' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'ventaActivos' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        \r\n        movs.filter( mov => mov.tipo === 'compraActivos' && mov.to.subcuenta === e ).map( mov => monedaValuacion = mov.monedaValuacion );\r\n        movs.filter( mov => mov.tipo === 'compraActivos' && mov.to.subcuenta === e ).forEach( mov => {\r\n            activos.push({\r\n                nombre: mov.from.cuenta,\r\n                valor: cantidadTotal\r\n            })\r\n            cantidadTotal = convertidor( activos, 'USD', pares)\r\n        })\r\n        movs.filter( mov => mov.tipo === 'ingreso' && mov.cuenta === 'Activos' && mov.subcuenta === e ).map( mov => monedaValuacion = mov.monedaValuacion );\r\n\r\n        // monedaValuacion = monedaValuacion !== '' ? monedaValuacion : cta;\r\n        if ( monedaValuacion === '' ) {\r\n            monedaValuacion = cta\r\n        }\r\n        if ( cta === 'Activos' ) {\r\n            monedaValuacion = 'USD'\r\n        }\r\n\r\n        \r\n\r\n        elementos.push({\r\n            subcuenta: e,\r\n            cantidad: cantidadTotal,\r\n            monedaValuacion\r\n        })\r\n    })\r\n\r\n    return elementos;\r\n}\r\n\r\nexport const sumarCantidadTotal = ( movs, cuentas, state, pares ) =>{\r\n    let cantidadTotal = []\r\n    let cantidadTotalActivos = { nombre: 'Activos', valor: [] }\r\n    // let cantidadPrueba = { nombre: 'Activos', subcuentas: [] }\r\n\r\n    \r\n    cuentas.forEach( cta => {\r\n\r\n        if ( cta.nombre !== 'Activos' ) {\r\n            \r\n            cantidadTotal.push( sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ) )\r\n            \r\n        } else{\r\n\r\n                \r\n                    \r\n                if ( cta !== 'Activos' ) {\r\n                    // Devuelve objeto q rastrea los movimientos de \"Activos\" y va sumando en la cuenta q corresponda\r\n                    cantidadTotalActivos.valor.push( sumarCantidadEnCuentasActivos( movs, cta ))\r\n                }\r\n            \r\n        }\r\n  \r\n    })\r\n\r\n    // Convierte todos los montos en los 2 arrays a la moneda q tenga en el state\r\n    const totalCuentas = convertidor( cantidadTotal, state, pares )\r\n    const totalActivos = convertidor( cantidadTotalActivos.valor, state, pares )\r\n    \r\n    \r\n    return {totalCuentas, totalActivos}\r\n}\r\n\r\nexport const sumarCantidadTotalActivos = ( movs, cuentas, state, pares ) =>{\r\n\r\n    let cantidadTotalActivos = { nombre: 'Activos', subcuentas: [] }\r\n\r\n    cuentas.find( cta => cta.nombre === 'Activos' )?.subcuentas.map( sub => {\r\n\r\n        const subcuenta = {\r\n            nombre: sub,\r\n            valor: []\r\n        }\r\n\r\n        cuentas.filter( cuenta => cuenta.nombre !== 'Activos' ).forEach( el => {\r\n\r\n            subcuenta.valor.push( sumarCantidadEnCuentasActivos( movs, el.nombre, sub ) )\r\n        })\r\n\r\n        return cantidadTotalActivos.subcuentas.push(subcuenta)\r\n        \r\n    })\r\n\r\n\r\n    let cantidadTotalConvertida = 0;\r\n\r\n    cantidadTotalActivos.subcuentas.forEach( sub => {\r\n        cantidadTotalConvertida += convertidor( sub.valor, state, pares )\r\n    })\r\n\r\n    return { cantidadTotalActivos, cantidadTotalConvertida }\r\n}","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { insertarCuentaActiva } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { convertidor } from \"../../../helpers/convertidor\";\r\nimport { sumarCantidadTotalActivos } from \"../../../helpers/getCantidades\";\r\nimport { Select } from \"../selects/Select\";\r\n\r\nexport const List = ({ elementos, isEditing, nomCuenta }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [moneda, setMoneda] = useState('ARS')\r\n    const { pares } = useSelector(state => state.pares )\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { cuentas } = useSelector(state => state.cuentas )\r\n\r\n    const openingModal = ( e, nomSubcuenta, cantidad ) =>{\r\n        e.preventDefault();\r\n        dispatch( openModal({\r\n            tipo: 'editar subcuentas',\r\n        }))\r\n        dispatch( insertarCuentaActiva( { nomCuenta, nomSubcuenta, cantidad } ))\r\n\r\n    }\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        setMoneda( e.target.value )\r\n    }\r\n\r\n    const sumarMontosEnDistintasMonedas = (sub) =>{\r\n\r\n        let total = 0;\r\n\r\n        if ( sub.monedaValuacion === 'Activos') {\r\n            sumarCantidadTotalActivos( movs, cuentas, moneda, pares).cantidadTotalActivos.subcuentas.forEach( el => {\r\n                if ( el.nombre === sub.subcuenta ) {\r\n                    total = convertidor( el.valor, moneda, pares )\r\n                }\r\n            })\r\n        }\r\n\r\n        if ( sub.cantidad !== 0 ) {\r\n            total = convertidor([{ nombre: sub.monedaValuacion, valor:  sub.cantidad }], moneda, pares );\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='list__view'>\r\n            <Select options={['ARS', 'USD', 'BTC', 'ETH']} state={ moneda } actualizarState={ handleChange }/>\r\n            <ul className=\"list-group\">\r\n                {\r\n                    elementos.map( el =>\r\n                        <li key={ el.subcuenta } className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            { el.subcuenta }\r\n                            <span className={`badge bg-secondary bg-${ el.cantidad < 0 ? 'danger': ''}${ el.cantidad > 0 ? 'success': ''}`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\", minimumFractionDigits: 2 }).format( sumarMontosEnDistintasMonedas( el ) ) }</span>\r\n                            { isEditing && <i className=\"bi bi-pencil\" onClick={ e => openingModal( e, el.subcuenta, el.cantidad )}></i> }\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { insertarCuentaActiva } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { List } from \"../lists/List\";\r\nimport { sumarCantidadTotalPorCuenta, sumarCantidadPorSubcuenta, sumarCantidadTotalActivos } from '../../../helpers/getCantidades'\r\n\r\nexport const AcordeonList = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { pares } = useSelector(state => state.pares)\r\n    const { cuentas, isEditing } = useSelector(state => state.cuentas );\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleAccordion = (e, cta ) => {\r\n\r\n        if ( e.classList.contains('accordion-button') ) {\r\n            \r\n            let cantElemInternos = cuentas.find(el => el.nombre === cta ).subcuentas.length\r\n    \r\n            e.classList.toggle('collapsed');\r\n            e.parentElement.nextSibling.classList.toggle('show');\r\n            if (e.parentElement.nextSibling.classList.contains('show')) {\r\n                \r\n                e.parentElement.nextSibling.style.height = 'calc(' + 55 * ( cantElemInternos ) + 'px + 3rem)' ;\r\n            } else{\r\n                e.parentElement.nextSibling.style.height = '0px'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const openingModal = ( e, cta, cantidad ) =>{\r\n        e.preventDefault();\r\n        dispatch( openModal({\r\n            tipo: 'editar cuentas',\r\n        }))\r\n        dispatch( insertarCuentaActiva( {\r\n            ...cta,\r\n            cantidad\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion accordion-list\" id=\"accordionPanelsStayOpenExample\">\r\n            {\r\n                cuentas.map( cta => \r\n                    <div className=\"accordion-item\" key={ cta.nombre }>\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                            <button onClick={ (e) => handleToggleAccordion( e.target, cta.nombre ) } className=\"accordion-button d-flex justify-content-between align-items-center collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                                { cta.nombre === 'BTC' ? 'Bitcoin' : cta.nombre }\r\n                                <span onClick={ e => e.target.parentElement.click() } className={`badge bg-secondary bg-${ sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor < 0 ? 'danger': ''}${ sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor > 0 ? 'success': ''}`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( cta.nombre === 'Activos' ? sumarCantidadTotalActivos( movs, cuentas, 'USD', pares ).cantidadTotalConvertida : sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor )  }</span>\r\n                                { isEditing && <i onClick={ e => openingModal( e, cta, sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor ) } className=\"bi bi-pencil\"></i> }\r\n                                \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                            <div className=\"accordion-body\">\r\n                                \r\n                                <List elementos={ sumarCantidadPorSubcuenta( movs, cuentas, cta.nombre, pares ) } isEditing={ isEditing } nomCuenta={ cta.nombre } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { cerrarModoEdicionCuentas } from \"../../../actions/cuentasActions\";\r\nimport { AcordeonList } from \"../../ui/acordeon/AcordeonList\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\n\r\nexport const CuentasScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n    const { cuentas } = useSelector(state => state.cuentas );\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => { \r\n        return () => {\r\n            dispatch( cerrarModoEdicionCuentas() ) \r\n        }\r\n    },[ dispatch ])\r\n\r\n    const totalMovimientos = movs.filter( el => el.tipo !== 'deuda' );\r\n\r\n    const nombreCuentas = cuentas.map( el => el.nombre )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Cuentas</h1>\r\n            <AcordeonList nombreCuentas={ nombreCuentas } tableElements={ totalMovimientos }/>\r\n            <Buttons botonEditarVisible={ true } ruta='cuentas'/>\r\n        </div>\r\n    )\r\n}","export const EstadisticasScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Pagina en construcción...</h1>\r\n            <div className=\"page-in-construction\">\r\n                <lottie-player className='animacion' src=\"https://assets8.lottiefiles.com/packages/lf20_8uHQ7s.json\"  background=\"transparent\"  speed=\"1\"  style={{maxWidth: '300px', maxHeight: '300px'}}  loop autoplay></lottie-player>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Select } from \"../../ui/selects/Select\";\r\n\r\nexport const GastosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const tablaGastos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === 'gasto' );\r\n\r\n    const categoriasGastos = categorias.filter( el => el.tipo === 'gasto' ).sort( ( a,b ) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Gastos</h1>\r\n            <AcordeonTable categorias={ categoriasGastos } tableElements={ tablaGastos }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { Table } from \"../../ui/tables/Table\"\r\n\r\nexport const LastMovs = ({ movimientos }) => {\r\n\r\n\r\n    return (\r\n        <section className='tabla-general'>\r\n\r\n        <h3>Ultimos movimientos</h3>\r\n\r\n        <Table movimientos={ movimientos } cantMostrada={ 5 } />\r\n\r\n        </section>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { sumarCantidadTotalActivos, sumarCantidadTotalPorCuenta } from \"../../../helpers/getCantidades\"\r\n\r\nexport const CuentasHome = ( { cuentas } ) => {\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { pares } = useSelector(state => state.pares)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cuentas.map( cta =>\r\n                    \r\n                    (sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor > 0 )\r\n                        &&  \r\n                        <p className=\"total-por-cuentas\" key={ cta.nombre }>{ cta.nombre } <b>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( cta.nombre === 'Activos' ? sumarCantidadTotalActivos( movs, cuentas, 'USD', pares ).cantidadTotalConvertida : sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor ) } { cta.nombre === 'Activos' && 'usd'}</b></p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { sumarCantidadTotal, sumarCantidadTotalActivos } from \"../../../helpers/getCantidades\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { CuentasHome } from \"./CuentasHome\"\r\n\r\n\r\nexport const PatrimonioView = () => {\r\n\r\n    const [state, setState] = useState('ARS')\r\n    const { pares } = useSelector(state => state.pares)\r\n    \r\n    \r\n\r\n    const handleChange = ( e )=>{\r\n        setState( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs);\r\n    const { cuentas } = useSelector(state => state.cuentas )\r\n\r\n   \r\n    return (\r\n        <div className='patrimonio__view'>\r\n            <Select options={ ['ARS', 'USD', 'BTC', 'ETH'] } clase='upperCase' actualizarState={ handleChange} />\r\n            <div className='patrimonio__cantidad'>\r\n                <div className='patrimonio__principal'>\r\n                    <small>{ state } </small>\r\n                    <h1> { new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\", /* maximumFractionDigits: 0 */}).format( sumarCantidadTotal( movs, cuentas, state, pares ).totalCuentas + sumarCantidadTotalActivos( movs, cuentas, state, pares ).cantidadTotalConvertida ) }</h1>\r\n                </div>\r\n                <CuentasHome cuentas={ cuentas } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { LastMovs } from \"./LastMovs\"\r\nimport { PatrimonioView } from \"./PatrimonioView\"\r\n\r\nexport const HomeScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const movimientos = movs.filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deudaACobrar' && el.tipo !== 'compraActivos' && el.tipo !== 'ventaActivos')\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <PatrimonioView />\r\n            <LastMovs movimientos={ movimientos } />\r\n            {\r\n                movimientos.length > 5\r\n                    &&\r\n                    <Link to='/movimientos' element='' className='ver-mas'>\r\n                        Ver mas movimientos\r\n                    </Link>\r\n            }\r\n            \r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\n\r\nexport const IngresosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const tablaIngresos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === 'ingreso' );\r\n\r\n    const categoriasIngresos = categorias.filter( el => el.tipo === 'ingreso' ).sort( ( a,b ) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Ingresos</h1>\r\n            <AcordeonTable tableElements={ tablaIngresos } categorias={ categoriasIngresos }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { insertarMovimientoActivo } from \"../../../actions/movsActions\";\r\n\r\nexport const TableTranferencias = ({ elementos }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editarModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'editar'\r\n        } ) )\r\n    }\r\n\r\n    const detalleModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'solo ver'\r\n        } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='list__view'>\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Cantidad</th>\r\n                        <th scope=\"col\">De</th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">A</th>\r\n                        <th scope=\"col\">Fecha</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        elementos.map( mov => \r\n                            <tr key={ mov.id } className='table__movimiento' onClick={ e => detalleModal( e, mov ) }>\r\n                                <th scope=\"row\">{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( parseInt( mov.cantidad ) ) }</th>\r\n                                <td> { mov.from.subcuenta } ({ mov.from.cuenta })</td>\r\n                                <td><i className=\"bi bi-arrow-right\"></i></td>\r\n                                <td> { mov.to.subcuenta } ({ mov.to.cuenta })</td>\r\n                                <td>{ mov.fecha.toLocaleDateString() }</td>\r\n                                <td><button className='table__btn'><i className=\"bi bi-pencil\" onClick={ e =>  editarModal( e, mov ) }></i></button></td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { TableTranferencias } from \"../../ui/tables/TableTranferencias\"\r\n\r\nexport const TransferenciasScreen = ({ tipo }) => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const transferencias = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === tipo );\r\n\r\n\r\n    return (\r\n        <div className='container-view tabla-general'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro } />\r\n            { tipo === 'transferencia' && <h1>Transferencias</h1> }\r\n            { tipo === 'compraActivos' && <h1>Compras</h1> }\r\n            { tipo === 'ventaActivos' && <h1>Ventas</h1> }\r\n            <TableTranferencias elementos={ transferencias }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Table } from \"../../ui/tables/Table\";\r\n\r\nexport const DeudasScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const deudas = movs.filter( el => el.tipo === 'deuda' || el.tipo === 'prestamo' );\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Deudas</h1>\r\n            <Table movimientos={ deudas } cabecera={['Cantidad', 'Motivo','A quien', 'Cuenta', 'Fecha', 'Estado' ]}/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Table } from \"../../ui/tables/Table\";\r\n\r\nexport const DeudasACobrarScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const deudasACobrar = movs.filter( el => el.tipo === 'deudaACobrar' || el.tipo === 'prestamoACobrar' );\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Deudas a cobrar</h1>\r\n            <Table movimientos={ deudasACobrar } cabecera={['Cantidad', 'Motivo','De quien', 'Cuenta', 'Fecha', 'Estado' ]}/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const fetchPares = async(par) =>{\r\n\r\n    const url = 'https://criptoya.com/api/satoshitango/';\r\n\r\n    const resp = await fetch( url + par ,{\r\n        header:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n\r\n    const { bid } = await resp.json()\r\n\r\n    return bid\r\n\r\n}","import { useRef } from \"react\"\r\nimport { NavLink, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { MovimientosScreen } from \"../../principalRoutes/movimientos/MovimientosScreen\";\r\nimport { CategoriesScreen } from \"../../principalRoutes/categories/CategoriesScreen\";\r\nimport { CuentasScreen } from \"../../principalRoutes/cuentas/CuentasScreen\";\r\nimport { EstadisticasScreen } from \"../../EstadisticasScreen\";\r\nimport { GastosScreen } from \"../../principalRoutes/gastos/GastosScreen\";\r\nimport { HomeScreen } from \"../../principalRoutes/home/HomeScreen\";\r\nimport { IngresosScreen } from \"../../principalRoutes/ingresos/IngresosScreen\";\r\nimport { TransferenciasScreen } from \"../../principalRoutes/transferencias/TransferenciasScreen\";\r\nimport { DeudasScreen } from \"../../principalRoutes/deudas/DeudasScreen\";\r\nimport { DeudasACobrarScreen } from \"../../principalRoutes/deudasACobrar/DeudasACobrarScreen\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actualizarValores } from \"../../../actions/paresActions\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchPares } from \"../../../helpers/fetchPares\";\r\nimport { startingLogout } from \"../../../actions/authActions\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth )\r\n\r\n    useEffect(() => {\r\n        \r\n        const actualizarValoresMonedas = async() =>{\r\n\r\n            const usd_ars = await fetchPares( 'dai/ars' )\r\n            const btc_usd = await fetchPares( 'btc/usd' )\r\n            const btc_ars = await fetchPares( 'btc/ars' )\r\n            const eth_ars = await fetchPares( 'eth/ars' )\r\n            const eth_usd = await fetchPares( 'eth/usd' )\r\n\r\n            return [\r\n                {\r\n                    nombre: 'USD/ARS',\r\n                    valor: usd_ars\r\n                },{\r\n                    nombre: 'BTC/USD',\r\n                    valor: btc_usd\r\n                },{\r\n                    nombre: 'BTC/ARS',\r\n                    valor: btc_ars\r\n                },{\r\n                    nombre: 'ETH/ARS',\r\n                    valor: eth_ars\r\n                },{\r\n                    nombre: 'ETH/USD',\r\n                    valor: eth_usd\r\n                },\r\n            ]\r\n        }\r\n\r\n        actualizarValoresMonedas().then( e => dispatch( actualizarValores( e )))\r\n       \r\n    }, [ dispatch ])\r\n\r\n\r\n    const menu = useRef();\r\n    const modal = useRef();\r\n\r\n    const handleOpen = () => {\r\n        menu.current.style.transform= 'translateX(0px)';\r\n        modal.current.style.zIndex = '2';\r\n        modal.current.style.opacity = '1';\r\n    }\r\n\r\n    const handleClose = () =>{\r\n        menu.current.style.transform= 'translateX(-250px)';\r\n        modal.current.style.zIndex = '-1';\r\n        modal.current.style.opacity = '0';\r\n    }\r\n\r\n    const handleLogout = e => {\r\n        e.preventDefault();\r\n        dispatch( startingLogout() )\r\n    }\r\n\r\n    return (\r\n        <div className='navbar__view'>\r\n\r\n            <header className='navbar__header'>\r\n                <button onClick={ handleOpen }><i className=\"bi bi-list\"></i></button>\r\n                <h3>Cuentas claras</h3>\r\n            </header>\r\n\r\n            <nav ref={ menu } className={`navbar__menu`}>\r\n                <ul>\r\n                    <li className=\"displayName\">\r\n                        <h5 className=\"displayName\">{ name }</h5>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-house\"></i>Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/categories' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-list-task\"></i>Categorias\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/ingresos' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-graph-up-arrow\"></i>Ingresos\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/gastos' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-graph-down-arrow\"></i>Gastos\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/deudas' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                        <i className=\"bi bi-bank\"></i>Deudas\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/deudas-a-cobrar' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                        <i className=\"bi bi-percent\"></i>Deudas a cobrar\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/transferencias' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-arrow-left-right\"></i>Transferencias\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/cuentas' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-wallet\"></i>Cuentas\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/estadisticas' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                            <i className=\"bi bi-bar-chart\"></i>Estadisticas\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/compras' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                        <i className=\"bi bi-cart\"></i>Compras\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/ventas' onClick={ handleClose } className={ ({ isActive }) => isActive ? 'active' : '' }>\r\n                        <i className=\"bi bi-piggy-bank\"></i>Ventas\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/login' onClick={ handleLogout } className=\"logout\">\r\n                            <i className=\"bi bi-box-arrow-in-left\"></i>Logout\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <section onClick={ handleClose } className='navbar__principal'>\r\n                <div className=\"navbar__modal\" ref={ modal }>\r\n                </div>\r\n                <div className='navbar__vista'>\r\n                    <Routes>\r\n                        <Route path='/' element={ <HomeScreen />} />\r\n                        <Route path='/categories' element={ <CategoriesScreen />} />\r\n                        <Route path='/ingresos' element={ <IngresosScreen />} />\r\n                        <Route path='/gastos' element={ <GastosScreen />} />\r\n                        <Route path='/transferencias' element={ <TransferenciasScreen tipo={ 'transferencia'} />} />\r\n                        <Route path='/estadisticas' element={ <EstadisticasScreen />} />\r\n                        <Route path='/cuentas' element={ <CuentasScreen />} />\r\n                        <Route path='/movimientos' element={ <MovimientosScreen />} />\r\n                        <Route path='/deudas' element={ <DeudasScreen />} />\r\n                        <Route path='/deudas-a-cobrar' element={ <DeudasACobrarScreen />} />\r\n                        <Route path='/compras' element={ <TransferenciasScreen tipo={'compraActivos'} />} />\r\n                        <Route path='/ventas' element={ <TransferenciasScreen tipo={'ventaActivos'} />} />\r\n                        <Route path='*' element={ <Navigate to='/' /> } />\r\n                    </Routes>\r\n                </div>\r\n            </section>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const actualizarValores = pares => {\r\n\r\n    return{\r\n        type: types.actualizarValores,\r\n        payload: pares\r\n    }\r\n}\r\n","import { useDispatch } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const DetalleDeuda = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeMov} = useSelector(state => state.movs)\r\n\r\n    const { cantidad, cantidadPagada, categoria, prestador, cuenta, fecha, descripcion, estado, cuotas, cuotasPagadas, url } = activeMov;\r\n\r\n    const handleSaldarDeuda = e => {\r\n        e.preventDefault();\r\n        dispatch( openModal( {\r\n            tipo: 'saldar deuda',\r\n         } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle deuda</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span>Deuda</span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad total: <span>$ { cantidad }</span></h4>\r\n\r\n                <h4>Cantidad abonada: <span>$ { cantidadPagada }</span></h4>\r\n\r\n                <h4>Cantidad restante: <span>$ { cantidad - cantidadPagada }</span></h4>\r\n\r\n                <h4>Prestador: <span>{ prestador }</span></h4>\r\n\r\n                <h4>Cuenta: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                <h4>Cuotas abonadas: <span> { cuotasPagadas }/{ cuotas }</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n\r\n                <h4>Estado: <span>{ estado }</span></h4>\r\n\r\n                \r\n            </section>\r\n                {\r\n                    estado === 'pendiente' && <button onClick={ handleSaldarDeuda } className=\"btn boton-saldar\">Saldar cuota</button>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","const verificarCaracteres = input =>{\r\n\r\n    if ( input ) {\r\n        const caracteresNoValidos= ['<', '>', '\"', \"'\", 'script']\r\n        input = input.toString()\r\n\r\n        if ( input.includes('script') ) {\r\n            return true;\r\n        }\r\n\r\n        for( let caracter of caracteresNoValidos ){\r\n            if ( input.includes( caracter ) ) {\r\n                return true;\r\n                // break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const isFormValid = form =>{\r\n\r\n    if ( typeof form === 'string') {\r\n        if ( form.length < 1 || form === '' || form === '-' || verificarCaracteres( form )) {\r\n            return{\r\n                ok: false,\r\n                msg: 'input no valido'\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( form.fecha > Date.now() ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'La fecha debe ser igual o menor al dia de hoy'\r\n        }\r\n    }\r\n    if ( form.cuenta?.length < 1 || form.cuenta === '' || form.cuenta === '-' || verificarCaracteres( form.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta válida'\r\n        }\r\n    }\r\n    if (form.nuevaCuenta === '' || !isNaN( form.nuevaCuenta ) || form.nuevaCuenta?.length < 2 || verificarCaracteres( form.nuevaCuenta )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese una nueva cuenta válida'\r\n        }\r\n    }\r\n    if ( form.from?.cuenta.length < 1 || form.from?.cuenta === '' || form.from?.cuenta === '-' || verificarCaracteres( form.from?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta a debitar válida'\r\n        }\r\n    }\r\n    if ( form.to?.cuenta.length < 1 || form.to?.cuenta === '' || form.to?.cuenta === '-' || verificarCaracteres( form.to?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta a acreditar válida'\r\n        }\r\n    }\r\n    if ( form.subcuenta?.length < 1 || form.subcuenta === '' || form.subcuenta === '-' || verificarCaracteres( form.subcuenta )) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta válida'\r\n        }\r\n    }\r\n    if (form.nuevaSubcuenta === '' || !isNaN( form.nuevaSubcuenta ) || form.nuevaSubcuenta?.length < 2 || verificarCaracteres( form.nuevaSubcuenta )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese una nueva subcuenta válida'\r\n        }\r\n    }\r\n    if ( form.from?.subcuenta.length < 1 || form.from?.subcuenta === '' || form.from?.subcuenta === '-' || verificarCaracteres( form.from?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta a debitar válida'\r\n        }\r\n    }\r\n    if ( form.to?.subcuenta.length < 1 || form.to?.subcuenta === '' || form.to?.subcuenta === '-' || verificarCaracteres( form.to?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta a acreditar válida'\r\n        }\r\n    }\r\n    if ( form.prestador === '' || !isNaN( form.prestador ) || form.prestador?.length < 2 || verificarCaracteres( form.prestador ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un prestador válido'\r\n        }\r\n    }\r\n    if ( form.tomador === '' || !isNaN( form.tomador ) || form.tomador?.length < 2 || verificarCaracteres( form.tomador ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un tomador válido'\r\n        }\r\n    }\r\n    if ( form.categoria?.length < 1 || form.categoria === '' || form.categoria === '-' || verificarCaracteres( form.categoria ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una categoria válida'\r\n        }\r\n    }\r\n    if ( form.nombre?.length < 1 || form.nombre === '' || form.nombre === '-' || verificarCaracteres( form.nombre ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de categoria válido'\r\n        }\r\n    }\r\n    if ( form.sector?.length < 1 || form.sector === '' || form.sector === '-' || verificarCaracteres( form.sector ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de sector válido'\r\n        }\r\n    }\r\n    if ( (form.cantidad !== undefined) && (form.cantidad <= 0 || form.cantidad === '' || form.cantidad === '-' || isNaN( form.cantidad ) || verificarCaracteres( form.cantidad )) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad válida (mayor a cero)'\r\n        }\r\n    }\r\n    if ( verificarCaracteres( form.descripcion ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Descripcion no valida (evite los signos como: \"<, >, \"\", `` )'\r\n        }\r\n    }\r\n    if ( form.nuevaCategoria === '' || !isNaN( form.nuevaCategoria ) || form.nuevaCategoria?.length < 2 || verificarCaracteres( form.nuevaCategoria )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de categoria válido'\r\n        }\r\n    }\r\n    if ( (form.cuotasAPagar !== undefined) && (form.cuotasAPagar <= 0 || form.cuotasAPagar === '' || form.cuotasAPagar === '-' || isNaN( form.cuotasAPagar ) || verificarCaracteres( form.cuotasAPagar )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad de cuotas válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( (form.cantidadAPagar !== undefined) && (form.cantidadAPagar <= 0 || form.cantidadAPagar === '' || form.cantidadAPagar === '-' || isNaN( form.cantidadAPagar ) || verificarCaracteres( form.cantidadAPagar )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( (form.cuotas !== undefined) && (form.cuotas <= 0 || form.cuotas === '' || form.cuotas === '-' || isNaN( form.cuotas ) || verificarCaracteres( form.cuotas )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad de cuotas válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( form.monedaValuacion?.length < 1 || form.monedaValuacion === '' || form.monedaValuacion === '-' || verificarCaracteres( form.monedaValuacion ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una moneda para valuación válida'\r\n        }\r\n    }\r\n    \r\n    return {\r\n        ok: true\r\n    }\r\n\r\n}","import { useSelector } from \"react-redux\";\r\n\r\nexport const useManySelectors = ( tipo ) => {\r\n\r\n    const { movs, activeMov } = useSelector(state => state.movs );\r\n    const { typeModal } = useSelector(state => state.modals );\r\n    const { categorias } = useSelector(state => state.cats );\r\n    const { cuentas } = useSelector(state => state.cuentas );\r\n\r\n    const totalMovimientos = movs.filter( el => el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deuda' );\r\n\r\n    const nombreCuentas = cuentas.map( el => el.nombre )\r\n\r\n    let nombreCategorias = []\r\n    tipo ? nombreCategorias = categorias.filter( el => el.tipo === tipo ).map( el => el.nombre ).sort()\r\n         : nombreCategorias = categorias.filter( el => el.tipo === typeModal ).map( el => el.nombre ).sort()\r\n    \r\n\r\n    return {\r\n        movs,\r\n        activeMov,\r\n        typeModal,\r\n        totalMovimientos,\r\n        cuentas,\r\n        nombreCuentas,\r\n        nombreCategorias\r\n    } ;\r\n}\r\n","\r\n\r\nexport const fileUpload = async ( file ) =>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dnnlsb3bs/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'cuentas-claras');\r\n    formData.append('file', file );\r\n    \r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        console.log( error);\r\n    }\r\n\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport { fileUpload } from \"../../../helpers/fileUpload\";\r\n\r\nexport const UploadFile = ({ formValues, isLoading, setIsLoading }) => {\r\n\r\n    const isMounted = useRef( true )\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n    const [isComprobanteAdd, setIsComprobanteAdd] = useState( formValues.url )\r\n    const comprobante = useRef();\r\n\r\n    const agregarComprobante = e => {\r\n        e.preventDefault();\r\n        comprobante.current.click();\r\n    }\r\n\r\n    const handleChangeComprobante =  async(e) => {\r\n        e.preventDefault();\r\n\r\n        if ( e.target.files.length === 0 ) {\r\n            setIsComprobanteAdd( false )\r\n        } else{\r\n            setIsLoading( true )\r\n            const url = await fileUpload( e.target.files[0] )\r\n            if ( isMounted.current ) {\r\n                formValues.url = url;\r\n                setIsComprobanteAdd( true );\r\n                setIsLoading( false )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal__section\">\r\n            <input ref={ comprobante } multiple={false} onChange={ handleChangeComprobante } type=\"file\" name=\"factura\" id=\"factura\" accept='.png, .jpg, .jpeg, .pdf'/>\r\n            <button className={`btn ${ isComprobanteAdd ? 'added' : ''}`} onClick={ agregarComprobante }> \r\n            { isComprobanteAdd \r\n                ?   <>\r\n                        Comprobante agregado <i className='bi bi-file-earmark-check'></i>\r\n                    </> \r\n                :   <>\r\n                        Agregar comprobante <i className=\"bi bi-file-earmark-arrow-up\"></i>\r\n                    </> \r\n                  }\r\n            </button>\r\n            { isLoading && <p>Cargando...</p>}\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCategoria } from '../../../actions/categoriasActions';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const Deuda = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaCategoria, setNuevaCategoria] = useState({\r\n        nombre: '',\r\n        sector: ''\r\n    })\r\n    const [nuevoActivo, setNuevoActivo] = useState('')\r\n\r\n    const { activeMov, nombreCuentas, nombreCategorias, cuentas } = useManySelectors( 'gasto' )\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        prestador: '',\r\n        tipo: 'deuda',\r\n        categoria: nombreCategorias[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( nuevaCuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: []\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva categoria\r\n        if (formValues.categoria === 'nuevaCategoria') {\r\n            const respForm = isFormValid( nuevaCategoria );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.categoria = nuevaCategoria.nombre;\r\n\r\n            dispatch( startAgregarCategoria({\r\n                nombre: nuevaCategoria.nombre,\r\n                tipo: 'gasto',\r\n                sector: nuevaCategoria.sector\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva cuenta ( Bien personal )\r\n        if ( formValues.categoria === 'nuevoActivo' ) {\r\n            const respForm = isFormValid( nuevoActivo );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.categoria = nuevoActivo;\r\n\r\n            dispatch( startAgregarSubcuenta ({\r\n                id: cuentas.find( cta => cta.nombre === 'Activos' ).id,\r\n                nombre: 'Activos',\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === 'Activos' ).subcuentas, nuevoActivo ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n                id: Date.now()\r\n             }, 'nuevaDeuda' ));\r\n            Swal.fire('Nueva deuda', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nueva deuda` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre del prestador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } className={ formValues.categoria === 'nuevaCategoria' ? 'un-focus' : '' } >\r\n                        <optgroup label='Categorias'>\r\n                            {\r\n                                nombreCategorias.map( el => <option key={ el } value={ el } multiple={ false }>{ el }</option> )\r\n                            }\r\n                            <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                        </optgroup>\r\n                        <optgroup label='Activos'>\r\n                            {\r\n                                cuentas.find( el => el.nombre === 'Activos').subcuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                            }\r\n                            <option value=\"nuevoActivo\">...nuevo bien personal</option>\r\n                        </optgroup>\r\n                    </select>\r\n                    {\r\n                        formValues.categoria === 'nuevaCategoria' && \r\n                                    <>\r\n                                        <label htmlFor=\"nuevaCategoria\">Nombre nueva categoria:</label>\r\n                                        <input id='nuevaCategoria' name='nombre' value={ nuevaCategoria.nombre } onChange={ e => setNuevaCategoria({...nuevaCategoria, [e.target.name]: e.target.value } )} autoFocus type=\"text\" placeholder='Ej. Comida, Boliche, Sueldo' />\r\n                                        <label htmlFor=\"nuevoSector\">Sector:</label>\r\n                                        <input id='nuevoSector' name='sector' value={ nuevaCategoria.sector } onChange={ e => setNuevaCategoria( {...nuevaCategoria, [e.target.name]: e.target.value } )} type=\"text\" placeholder='Ej. Hogar, Higiene, Salud' />\r\n\r\n                                    </>\r\n                    }\r\n                    {\r\n                        formValues.categoria === 'nuevoActivo' && \r\n                                    <>\r\n                                        <label htmlFor=\"nuevoActivo\">Nombre nuevo bien personal:</label>\r\n                                        <input id='nuevoActivo' name='nombre' value={ nuevoActivo } onChange={ e => setNuevoActivo( e.target.value ) } autoFocus type=\"text\" placeholder='Ej. Auto, moto, depto' />\r\n\r\n                                    </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { DetalleDeuda } from \"./DetalleDeuda\"\r\nimport { Deuda } from \"./Deuda\"\r\n\r\nexport const FormulariosDeuda = ({ modo, handleClose }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleDeuda handleClose={ handleClose } />\r\n                                    : <Deuda handleClose={handleClose} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\n\r\nexport const SaldarDeuda = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas, nombreCategorias } = useManySelectors('gasto')\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( { \r\n        ...activeMov,\r\n        subcuenta: '-',\r\n        cuotasAPagar: 1,\r\n        cantidadAPagar: activeMov.cantidad - activeMov.cantidadPagada,\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        cuentas.find( cta => cta.nombre === 'Activos' ).subcuentas.forEach( sub => {\r\n            if ( sub === formValues.categoria ) {\r\n                \r\n            }\r\n        })\r\n\r\n        \r\n\r\n        // Cuando se quiere abonar el total pero no el total de las cuotas\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) === 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) > 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Cuando la deuda es saldada parcial o totalmente\r\n        activeMov.cuotasPagadas = formValues.cuotasPagadas + parseInt(formValues.cuotasAPagar);  \r\n        activeMov.cantidadPagada = formValues.cantidadPagada + parseInt(formValues.cantidadAPagar);\r\n        activeMov.estado = ( formValues.cuotas - formValues.cuotasPagadas - formValues.cuotasAPagar ) > 0 ? 'pendiente' : 'saldado'\r\n\r\n        dispatch( startActualizarMovimiento( activeMov ))\r\n            \r\n        dispatch( startNuevoMovimiento( {\r\n            id: Date.now(),\r\n            idReferencia: formValues.id,\r\n            fecha: formValues.fecha,\r\n            cantidad: formValues.cantidadAPagar,\r\n            cuenta: formValues.cuenta,\r\n            subcuenta: formValues.subcuenta,\r\n            categoria: formValues.categoria,\r\n            aQuien: activeMov.prestador,\r\n            tipo: 'gasto',\r\n            cuotas: formValues.cuotasAPagar\r\n        }, 'nuevoGasto' ));\r\n\r\n        Swal.fire('Pago realizado', `${ formValues.cuotasAPagar } cuotas abonadas correctamente`, 'success')\r\n\r\n        handleClose(e)\r\n        return;\r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>Saldar deuda</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select disabled name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">nueva cuenta</option>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input disabled type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre'/>\r\n                    </div>   \r\n                </div>\r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select disabled name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } >\r\n                        <optgroup label='Categorias'>\r\n                            {\r\n                                nombreCategorias.map( el => <option key={ el } value={ el } multiple={ false }>{ el }</option> )\r\n                            }\r\n                            <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                        </optgroup>\r\n                        <optgroup label='Activos'>\r\n                            {\r\n                                cuentas.find( el => el.nombre === 'Activos').subcuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                            }\r\n                            <option value=\"nuevoActivo\">...nuevo bien personal</option>\r\n                        </optgroup>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidadAPagar\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cantidadAPagar\" value={ formValues.cantidadAPagar } max={ parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) } min={0} onChange={ handleChange } placeholder={1}/>\r\n                    </div>\r\n                    <p>Quedarian abonar: $ { activeMov.cantidad - activeMov.cantidadPagada }</p>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                    <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cuotasAPagar\" value={ formValues.cuotasAPagar } max={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) } min={1} onChange={ handleChange } placeholder='1'/>\r\n                    <p>Quedarian: { activeMov.cuotas - activeMov.cuotasPagadas } cuotas por pagar</p>\r\n                </div>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>  \r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Saldar deuda</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\n\r\nexport const SaldarPrestamo = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { title } = useSelector(state => state.modals)\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( {\r\n        ...activeMov,\r\n        cantidadAPagar: activeMov.cantidad - activeMov.cantidadPagada,\r\n        cuotasAPagar: 1,\r\n    } )\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Cuando se quiere abonar el total pero no el total de las cuotas\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) === 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) > 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Cuando el prestamo es saldado parcial o totalmente\r\n        activeMov.cuotasPagadas = formValues.cuotasPagadas + parseInt(formValues.cuotasAPagar);  \r\n        activeMov.cantidadPagada = formValues.cantidadPagada + parseInt(formValues.cantidadAPagar);\r\n        activeMov.estado = ( formValues.cuotas - formValues.cuotasPagadas - formValues.cuotasAPagar ) > 0 ? 'pendiente' : 'saldado'\r\n\r\n        dispatch( startActualizarMovimiento( activeMov ))\r\n\r\n        if ( activeMov.tipo === 'prestamo' ) {\r\n                \r\n            dispatch( startNuevoMovimiento( {\r\n                id: Date.now(),\r\n                idReferencia: formValues.id,\r\n                fecha: formValues.fecha,\r\n                cantidad: formValues.cantidadAPagar,\r\n                cuenta: formValues.cuenta,\r\n                subcuenta: formValues.subcuenta,\r\n                categoria: 'pago '+ formValues.tipo,\r\n                aQuien: activeMov.prestador,\r\n                cuotas: formValues.cuotasAPagar,\r\n                tipo: 'gasto'  \r\n            }, 'nuevoGasto' ));\r\n            Swal.fire('Pago realizado', `${ formValues.cuotasAPagar } cuotas abonadas correctamente`, 'success')\r\n\r\n        } else if ( activeMov.tipo === 'deudaACobrar' ) {\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                id: Date.now(),\r\n                idReferencia: formValues.id,\r\n                fecha: formValues.fecha,\r\n                cantidad: formValues.cantidadAPagar,\r\n                cuenta: formValues.cuenta,\r\n                subcuenta: formValues.subcuenta,\r\n                categoria: 'cobro prestamo',\r\n                deQuien: activeMov.tomador,\r\n                tipo: 'ingreso',\r\n                cuotas: formValues.cuotasAPagar\r\n            }, 'nuevoIngreso' ));\r\n\r\n            Swal.fire('Cobro realizado', `${ formValues.cuotasAPagar } cuotas cobradas correctamente`, 'success')\r\n        }\r\n\r\n        handleClose(e)\r\n        return;\r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ title === 'prestamo' ? 'Saldar Prestamo' : 'Saldar deuda a cobrar' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select disabled name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">nueva cuenta</option>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                {\r\n                        formValues.prestador \r\n                        ?   <>\r\n                                <label htmlFor=\"prestador\">Prestador: </label>\r\n                                <div className='prestador'>\r\n                                    <input disabled type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre'/>\r\n                                </div>\r\n                            </>\r\n                        \r\n                        :   <>\r\n                                <label htmlFor=\"tomador\">Tomador: </label>\r\n                                <div className='tomador'>\r\n                                    <input disabled type=\"text\" name=\"tomador\" value={ formValues.tomador } onChange={ handleChange } placeholder='Nombre'/>\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidadAPagar\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cantidadAPagar\" value={ formValues.cantidadAPagar } max={ parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) } min={1} onChange={ handleChange } placeholder={1}/>\r\n                    </div>\r\n                    <p>Quedarian abonar: $ { activeMov.cantidad - activeMov.cantidadPagada }</p>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                    <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cuotasAPagar\" value={ formValues.cuotasAPagar } max={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) } min={1} onChange={ handleChange } placeholder='1'/>\r\n                    <p>Quedarian: { activeMov.cuotas - activeMov.cuotasPagadas } cuotas por pagar</p>\r\n                </div>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' type='submit'>Saldar cuota</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n            </div>   \r\n        </form>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleGasto = () => {\r\n\r\n    const { cantidad, categoria, cuenta, subcuenta, fecha, descripcion, cuotas, aQuien, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle gasto</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Gasto </span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Cuenta debitada: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                { cuotas && <h4>Cuotas: <span>{ cuotas }</span></h4> }\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                { aQuien && <h4>Pago a: <span>{ aQuien }</span></h4> }\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActualizarMovimiento, startEditarMontosDeuda, startEliminarCuotaDeuda, startEliminarMovimiento, startNuevoMovimiento } from '../../actions/movsActions';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useManySelectors } from '../../hooks/useManySelectors';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../actions/cuentasActions';\r\nimport { startAgregarCategoria } from '../../actions/categoriasActions';\r\nimport { isFormValid } from '../../helpers/isFormValid';\r\nimport { UploadFile } from '../ui/uploadFile/UploadFile';\r\nimport { convertidor } from '../../helpers/convertidor';\r\n\r\nexport const NuevoIngresoGasto = ({ handleClose }) => {\r\n   \r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { pares } = useSelector(state => state.pares)\r\n    \r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubcuenta] = useState('')\r\n    const [nuevaCategoria, setNuevaCategoria] = useState({\r\n        nombre: '',\r\n        sector: ''\r\n    })\r\n    const [monedaValuacion, setmonedaValuacion] = useState('')\r\n\r\n    const { typeModal, activeMov, nombreCuentas, nombreCategorias, movs } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: new Date(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0])?.subcuentas[0],\r\n        categoria: nombreCategorias[0],\r\n        cantidad: '',\r\n        descripcion: '',\r\n        url: '',\r\n    })\r\n    formValues.fecha = new Date( formValues.fecha )\r\n\r\n    // Referencia tanto a deudas como a prestamos\r\n    const deudaOriginal = activeMov?.idReferencia && movs.find( el => el.id === activeMov.idReferencia );\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        formValues.fecha = Date.parse(formValues.fecha)\r\n\r\n        // DEUDAS Y PRESTAMOS\r\n        // Cuando se quiere abonar el monto total pero no el total de las cuotas\r\n        if ( parseInt(deudaOriginal?.cantidad) - ( parseInt(deudaOriginal?.cantidadPagada) - activeMov?.cantidad ) - parseInt( formValues.cantidad ) === 0 && parseInt(deudaOriginal?.cuotas) - ( parseInt(deudaOriginal?.cuotasPagadas ) - activeMov?.cuotas ) - parseInt( formValues.cuotas ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(deudaOriginal?.cantidad) - ( parseInt(deudaOriginal?.cantidadPagada) - activeMov?.cantidad ) - parseInt( formValues.cantidad ) > 0 && parseInt(deudaOriginal?.cuotas) - ( parseInt(deudaOriginal?.cuotasPagadas ) - activeMov?.cuotas ) - parseInt( formValues.cuotas ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n            \r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva categoria\r\n        if (formValues.categoria === 'nuevaCategoria') {\r\n\r\n            const respForm = isFormValid( nuevaCategoria );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n\r\n            formValues.categoria = nuevaCategoria.nombre;\r\n\r\n            dispatch( startAgregarCategoria({\r\n                nombre: nuevaCategoria.nombre,\r\n                tipo: typeModal,\r\n                sector: nuevaCategoria.sector\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            // Editar pago de deuda\r\n            if ( activeMov.idReferencia) {\r\n                dispatch( startEditarMontosDeuda({\r\n                    idReferencia: activeMov.idReferencia,\r\n                    subcuenta: formValues.subcuenta,\r\n                    cantidadAnterior: parseInt( activeMov.cantidad ),\r\n                    cantidadNueva: parseInt( formValues.cantidad ),\r\n                    cuotasAnterior: activeMov.cuotas,\r\n                    cuotasNuevas: parseInt( formValues.cuotas )\r\n                    })\r\n                )\r\n            }\r\n\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n\r\n        } else if ( typeModal === 'ingreso' ) {\r\n\r\n            if ( formValues.cuenta === 'Activos') {\r\n                formValues.cantidad = convertidor([{nombre: monedaValuacion, valor: parseInt(formValues.cantidad) }], 'USD', pares )\r\n                formValues.monedaValuacion = 'USD';\r\n            }\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                // id: Date.now(),\r\n                tipo: typeModal,\r\n                ...formValues\r\n            }, 'nuevoIngreso' ))\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n\r\n        }else if ( typeModal === 'gasto' ) {\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                tipo: typeModal,\r\n                ...formValues\r\n            }, 'nuevoGasto' ));\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n        } \r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarCuotaDeuda({\r\n                idReferencia: activeMov.idReferencia,\r\n                cantidadAnterior: parseInt( activeMov.cantidad ),\r\n                cuotasAnterior: activeMov.cuotas\r\n            }))\r\n\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }\r\n\r\n    }\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta )?.subcuentas\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit }>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nuevo ${ typeModal }` } </h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                    maxDate={ new Date() }\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">{ typeModal === 'ingreso' ? 'Cuenta a acreditar:' : 'Cuenta a debitar:' }</label>\r\n                    <select disabled={ activeMov?.idReferencia ? true : false } name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubcuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    formValues.cuenta === 'Activos' && \r\n                    <div className='modal__section'>\r\n                        <label htmlFor=\"monedaValuacion\">En que moneda se valua:</label>\r\n                        <select name=\"monedaValuacion\" id=\"monedaValuacion\" value={ monedaValuacion } onChange={ e => setmonedaValuacion( e.target.value ) }>\r\n                            <option value=\"-\">-</option>\r\n                            { nombreCuentas.filter( cta => cta !== 'Activos' ).map( el => <option key={ el } value={ el }>{ el }</option>) }\r\n                        </select>\r\n                    </div>\r\n                }\r\n                \r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select disabled={ activeMov?.idReferencia ? true : false } name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } >{\r\n                        nombreCategorias.map( el => <option key={ el } value={ el }>{ el }</option> )\r\n                    }\r\n                    <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                    </select>\r\n                    {\r\n                        formValues.categoria === 'nuevaCategoria' && \r\n                                <>\r\n                                    <label htmlFor=\"nuevaCategoria\">Nombre nueva categoria:</label>\r\n                                    <input id='nuevaCategoria' name='nombre' value={ nuevaCategoria.nombre } onChange={ e => setNuevaCategoria({...nuevaCategoria, [e.target.name]: e.target.value } )} autoFocus type=\"text\" placeholder='Ej. Comida, Boliche, Sueldo' />\r\n                                    <label htmlFor=\"nuevoSector\">Sector:</label>\r\n                                    <input id='nuevoSector' name='sector' value={ nuevaCategoria.sector } onChange={ e => setNuevaCategoria( {...nuevaCategoria, [e.target.name]: e.target.value } )} type=\"text\" placeholder='Ej. Hogar, Higiene, Salud' />\r\n\r\n                                </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } max={ deudaOriginal && deudaOriginal?.cantidad - ( deudaOriginal?.cantidadPagada - activeMov?.cantidad ) }  min={1} placeholder='1000'/>\r\n                    </div>\r\n                    { activeMov?.idReferencia && <p>La cantidad restante es: { deudaOriginal?.cantidad - ( deudaOriginal?.cantidadPagada - activeMov?.cantidad ) }</p> }\r\n                </div>\r\n                {\r\n                    activeMov?.idReferencia && \r\n                    <div className='modal__section '>\r\n                        <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                        <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } max={ deudaOriginal?.cuotas -( deudaOriginal?.cuotasPagadas - activeMov?.cuotas ) }  min={1} onChange={ handleChange } placeholder='1'/>\r\n                        <p>Cuotas restantes: { deudaOriginal?.cuotas -( deudaOriginal?.cuotasPagadas - activeMov?.cuotas ) }</p>\r\n                    </div>\r\n                }\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","import { DetalleGasto } from \"./DetalleGasto\"\r\nimport { NuevoIngresoGasto } from \"../NuevoIngresoGasto\"\r\n\r\nexport const FormulariosGasto = ({ modo, handleClose }) => {\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleGasto />\r\n                                    : <NuevoIngresoGasto handleClose={ handleClose } />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleIngreso = () => {\r\n\r\n    const { cantidad, categoria, cuenta, subcuenta, fecha, descripcion, deQuien, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle ingreso</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Ingreso </span></h4>\r\n\r\n                <h4>Fecha: <span>{ new Date( fecha ).toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Cuenta acreditada: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                { deQuien && <h4>Cobro a: <span>{ deQuien }</span></h4> }\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n                \r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import { DetalleIngreso } from \"./DetalleIngreso\"\r\nimport { NuevoIngresoGasto } from \"../NuevoIngresoGasto\"\r\n\r\n\r\nexport const FormulariosIngreso = ({ modo, handleClose }) => {\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleIngreso />\r\n                                    : <NuevoIngresoGasto handleClose={ handleClose }/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const DeudasACobrar = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0]).subcuentas[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        tipo: 'deudaACobrar',\r\n        tomador: '',\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n            }, 'nuevoPrestamo' ));\r\n            Swal.fire('Nueva deuda a cobrar', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : 'Nueva deuda a cobrar' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"tomador\">Tomador: </label>\r\n                    <div className='tomador'>\r\n                        <input type=\"text\" name=\"tomador\" value={ formValues.tomador } onChange={ handleChange } placeholder='Nombre del tomador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                \r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='5000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n \r\n        </form>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const DetallePrestamo = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeMov } = useSelector(state => state.movs)\r\n\r\n    const { cantidad, cuenta, subcuenta, prestador, tomador, fecha, descripcion, estado, cantidadPagada, cuotas, cuotasPagadas, tipo, url } = activeMov;\r\n\r\n\r\n    const handleSaldarPrestamo = e => {\r\n        e.preventDefault();\r\n        dispatch( openModal( {\r\n            tipo: 'saldar prestamo',\r\n            title: tipo\r\n         } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            { tipo === 'prestamo' ?  <h1>Detalle prestamo</h1> : <h1>Detalle deuda a cobrar</h1> }\r\n            \r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span>{tipo === 'prestamo' ?  'Prestamo' : 'Deuda a cobrar' }</span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad total: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n\r\n                <h4>Cantidad abonada: <span>$ { cantidadPagada }</span></h4>\r\n\r\n                <h4>Cantidad restante: <span>$ { Math.abs( cantidad ) - cantidadPagada }</span></h4>\r\n      \r\n                {\r\n                    prestador ? <h4>Prestador: <span>{ prestador }</span></h4>\r\n                              : <h4>Tomador: <span>{ tomador }</span></h4>\r\n                }\r\n \r\n                <h4>Cuenta: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                <h4>Cuotas abonadas: <span>{ cuotasPagadas }/{ cuotas }</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n\r\n                <h4>Estado: <span>{ estado }</span></h4>\r\n\r\n            </section>\r\n                {\r\n                    estado === 'pendiente' && <button onClick={ handleSaldarPrestamo } className=\"btn boton-saldar\">Saldar cuota</button>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const Prestamo = ({ handleClose, typeModal }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0])?.subcuentas[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        tipo: typeModal,\r\n        prestador: '',\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n                id: Date.now()\r\n            }, 'nuevoPrestamo' ));\r\n            Swal.fire('Nueva prestamo', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta )?.subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : 'Nuevo Prestamo' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre del prestador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                \r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className='btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n \r\n        </form>\r\n    )\r\n}\r\n","import { DeudasACobrar } from \"../formDeudasACobrar/DeudasACobrar\"\r\nimport { DetallePrestamo } from \"./DetallePrestamo\"\r\nimport { Prestamo } from \"./Prestamo\"\r\n\r\n\r\nexport const FormulariosPrestamo = ({ modo, handleClose, typeModal }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                typeModal === 'prestamo' && \r\n                        (modo === 'solo ver' ? <DetallePrestamo />\r\n                                             : <Prestamo handleClose={handleClose} typeModal={ typeModal } />)\r\n            }\r\n            {\r\n                typeModal === 'deudaACobrar' && \r\n                        (modo === 'solo ver' ? <DetallePrestamo />\r\n                                             : <DeudasACobrar handleClose={ handleClose } />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const CompraActivos = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, cuentas, handleChangeTo, nuevaCuentaFrom, setNuevaCuentaFrom ,nuevaSubcuentaFrom, setNuevaSubcuentaFrom, nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.to.cuenta = 'Activos'\r\n    formValues.tipo= 'compraActivos'\r\n\r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n    \r\n    let subcuentasFrom\r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' :  subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Comprar activo` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Con cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.from.cuenta } onChange={ handleChangeFrom }>\r\n                        {\r\n                            nombreCuentas.filter( cta => cta !== 'Activos' ).map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    { formValues.from.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaFrom } onChange={ (e)=> setNuevaCuentaFrom( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' /> }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    { formValues.from.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaFrom } onChange={ e => setNuevaSubcuentaFrom( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' /> }\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Activo a comprar: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const VentaActivos = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, handleChangeTo, cuentas, nuevaCuentaTo, setNuevaCuentaTo , nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.from.cuenta = 'Activos'\r\n    formValues.tipo= 'ventaActivos'\r\n\r\n    let subcuentasFrom \r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' : subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n    \r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Vender activo` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Activo a vender: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        {/* <option value=\"nuevaSubcuenta\">nueva subcuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">En que moneda se cobra: </label>\r\n                    <select name=\"cuenta\" value={ formValues.to.cuenta } onChange={ handleChangeTo }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaTo } onChange={ (e)=> setNuevaCuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleTransferencia = () => {\r\n\r\n    const { cantidad, from, to, fecha, descripcion, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle transferencia</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Transferencia </span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Desde cuenta: <span>{ from.subcuenta } ({ from.cuenta })</span></h4>\r\n\r\n                <h4>A cuenta: <span>{ to.subcuenta } ({ to.cuenta })</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const TransferenciaForm = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, handleChangeTo, cuentas, nuevaCuentaTo, setNuevaCuentaTo , nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.tipo= 'transferencia'\r\n\r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n    \r\n    let subcuentasFrom\r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' :  subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nueva transferencia` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Desde cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.from.cuenta } onChange={ handleChangeFrom }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        {/* <option value=\"nuevaCuenta\">nueva cuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        {/* <option value=\"nuevaSubcuenta\">nueva subcuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">A cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.to.cuenta } onChange={ handleChangeTo }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaTo } onChange={ (e)=> setNuevaCuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                    }\r\n                </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { CompraActivos } from \"../formCompraActivos/CompraActivos\"\r\nimport { VentaActivos } from \"../formVentaActivos/VentaActivos\"\r\nimport { DetalleTransferencia } from \"./DetalleTransferencia\"\r\nimport { TransferenciaForm } from \"./TransferenciaForm\"\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { useState } from 'react';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { sumarCantidadPorSubcuenta } from \"../../../helpers/getCantidades\"\r\nimport { startAgregarCategoria } from \"../../../actions/categoriasActions\"\r\n\r\nexport const FormulariosTransferencia = ({ handleClose, modo, typeModal }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [nuevaCuentaFrom, setNuevaCuentaFrom] = useState('')\r\n    const [nuevaCuentaTo, setNuevaCuentaTo] = useState('')\r\n    const [nuevaSubcuentaFrom, setNuevaSubcuentaFrom] = useState('')\r\n    const [nuevaSubcuentaTo, setNuevaSubcuentaTo] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { categorias } = useSelector(state => state.cats)\r\n\r\n    const { nombreCuentas, activeMov, movs } = useManySelectors();\r\n\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar, handleChangeFrom, handleChangeTo ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        from: {\r\n            cuenta: nombreCuentas[0],\r\n            subcuenta: '-'\r\n        },\r\n        to: {\r\n            cuenta: nombreCuentas[1],\r\n            subcuenta: '-'\r\n        },\r\n        cantidad: 0,\r\n        descripcion: '',\r\n        tipo: '',\r\n        url: ''\r\n    })\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta - TO\r\n        if (formValues.to.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaTo, nuevaSubcuenta: nuevaSubcuentaTo } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.cuenta = nuevaCuentaTo;\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuentaTo,\r\n                subcuentas: [ nuevaSubcuentaTo ]\r\n            }))\r\n            \r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta - FROM\r\n        if (formValues.from.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaFrom, nuevaSubcuenta: nuevaSubcuentaFrom } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.from.cuenta = nuevaCuentaFrom;\r\n            formValues.from.subcuenta = nuevaSubcuentaFrom;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuentaFrom,\r\n                subcuentas: [ nuevaSubcuentaFrom ]\r\n            }))\r\n        }\r\n\r\n        /* // Agrega nueva Cuenta y Subcuenta - To\r\n        if (formValues.to.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaTo, nuevaSubcuenta: nuevaSubcuentaTo } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.cuenta = nuevaCuentaTo;\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n            dispatch( agregarCuenta( {\r\n                nombre: nuevaCuentaTo,\r\n                subcuentas: [ nuevaSubcuentaTo ]\r\n            }))\r\n        } */\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente - TO\r\n        if (formValues.to.cuenta !== 'nuevaCuenta' && formValues.to.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuentaTo );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.to.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas, nuevaSubcuentaTo ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente - FROM\r\n        if (formValues.from.cuenta !== 'nuevaCuenta' && formValues.from.subcuenta === 'nuevaSubcuenta' ) {\r\n\r\n            const respForm = isFormValid( nuevaSubcuentaFrom );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.from.subcuenta = nuevaSubcuentaFrom;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.from.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas, nuevaSubcuentaFrom ]\r\n            }))\r\n        }\r\n\r\n        // Verifica si es una edicion o un nuevo movimiento\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            if ( formValues.tipo === 'ventaActivos') {\r\n                \r\n                // Nuevo movimiento de ingreso cuando la venta supera la cantidad del activo\r\n                const cantidadRestanteEnCuenta = sumarCantidadPorSubcuenta( movs, cuentas, formValues.from.cuenta ).find( mov => mov.subcuenta === formValues.from.subcuenta ).cantidad\r\n                const restaEntreCantidadEnCuentaYCantidadVendida = cantidadRestanteEnCuenta - parseInt(formValues.cantidad )\r\n\r\n                if( restaEntreCantidadEnCuentaYCantidadVendida < 0 ){\r\n                    if ( !categorias.find( cat => cat.nombre === 'Ganancia por ventas' )) {\r\n                        dispatch( startAgregarCategoria({\r\n                            nombre: 'Ganancia por ventas',\r\n                            tipo: 'ingreso',\r\n                            sector: 'ventas'\r\n                        }))\r\n                    }\r\n\r\n                    formValues.cantidad = cantidadRestanteEnCuenta;\r\n    \r\n                    dispatch( startNuevoMovimiento({\r\n                        id: Date.now(),\r\n                        cantidad: Math.abs( restaEntreCantidadEnCuentaYCantidadVendida ),\r\n                        tipo: 'ingreso',\r\n                        categoria: 'Ganancia por ventas',\r\n                        cuenta: formValues.to.cuenta,\r\n                        subcuenta: formValues.to.subcuenta,\r\n                        fecha: Date.now(),\r\n                        comprobante: formValues.url,\r\n                        descripcion: `Venta de ${ formValues.from.subcuenta }`\r\n                    }, 'nuevoIngreso'))\r\n                }\r\n            }\r\n\r\n            dispatch( startNuevoMovimiento({\r\n                ...formValues\r\n            }, 'nuevaTransferencia') );\r\n\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        \r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' && <DetalleTransferencia />\r\n            }\r\n            {\r\n                ( (typeModal === 'transferencia') && (modo === 'crear' || modo === 'editar')) && \r\n                        <TransferenciaForm \r\n                        handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas={ cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo } \r\n                        nuevaCuentaTo={ nuevaCuentaTo }\r\n                        setNuevaCuentaTo={ setNuevaCuentaTo }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading }/>\r\n                        \r\n            }\r\n            {\r\n                (typeModal === 'compraActivos') && (modo === 'crear' || modo === 'editar' ) &&\r\n                         <CompraActivos \r\n                         handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas={ cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo }\r\n                        nuevaCuentaFrom={ nuevaCuentaFrom }\r\n                        setNuevaCuentaFrom={ setNuevaCuentaFrom }\r\n                        nuevaSubcuentaFrom={ nuevaSubcuentaFrom }\r\n                        setNuevaSubcuentaFrom={  setNuevaSubcuentaFrom }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading } />\r\n            }\r\n            {\r\n                (typeModal === 'ventaActivos') && (modo === 'crear' || modo === 'editar') && \r\n                        <VentaActivos \r\n                        handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas= { cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo }\r\n                        nuevaCuentaTo={ nuevaCuentaTo }\r\n                        setNuevaCuentaTo={ setNuevaCuentaTo }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading } />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarCategoria, startEliminarCategoria } from \"../../../actions/categoriasActions\";\r\nimport { startEditarNombreCategoria } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarCategorias = ({ handleClose, activeCat }) => {\r\n\r\n    const { categorias } = useSelector(state => state.cats)\r\n    \r\n    const dispatch = useDispatch();\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [ stateCategorias, setStateCategorias] = useState({\r\n        id: activeCat.id,\r\n        tipo: activeCat.tipo,\r\n        nombre: '',\r\n        sector: categorias.find( cat => cat.nombre === activeCat.catNombre ).sector\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setStateCategorias({\r\n            ...stateCategorias,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault()\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCategoria: stateCategorias.nombre,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarCategoria( stateCategorias ))\r\n        dispatch( startEditarNombreCategoria( stateCategorias ))\r\n        handleClose(e)\r\n        Swal.fire('Nombre actualizado a '+ stateCategorias.nombre, 'Categoria actualizada correctamente', 'success')\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( activeCat.catCantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la categoria ${ activeCat.catNombre } ?`)\r\n            if (confirmacion){\r\n                dispatch( startEliminarCategoria( stateCategorias ) )\r\n                Swal.fire('Categoria eliminada', `La categoria ${ activeCat.catNombre } ha sido borrada exitosamente`, 'success')\r\n            }\r\n        }\r\n\r\n        handleClose(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-categoria\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Categoria</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"categoriaActual\">Nombre actual: </label>\r\n                        <h4>{ activeCat.catNombre }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nombre\">Nuevo nombre: </label>\r\n                        <input value={ stateCategorias.nombre } name='nombre' onChange={ handleChange } type=\"text\" placeholder=\"Nombre de la categoria\" />\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"sector\">Sector: </label>\r\n                        <input name='sector' value={ stateCategorias.sector } onChange={ handleChange } type=\"text\" placeholder=\"Nuevo sector\" />\r\n                    </section>\r\n                </div>\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Guardar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    { activeCat.catCantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarCuenta, startEliminarCuenta } from \"../../../actions/cuentasActions\";\r\nimport { startEditarNombreCuenta } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarCuentas = ({ handleClose, cantidad }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const {activeCuenta } = useSelector( state => state.cuentas )\r\n    const [ stateCuentas, setStateCuentas] = useState({\r\n        ...activeCuenta,\r\n        nuevaCuenta: ''\r\n    })\r\n\r\n    const handleChange = e => {\r\n\r\n        setStateCuentas({\r\n            ...stateCuentas,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCuenta: stateCuentas.nuevaCuenta,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarCuenta( stateCuentas ))\r\n        dispatch( startEditarNombreCuenta( stateCuentas ))\r\n        Swal.fire('Nombre actualizado a '+ stateCuentas.nuevaCuenta, 'Cuenta actualizada correctamente', 'success')\r\n\r\n        handleClose(e)\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( cantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la cuenta ${ activeCuenta.nombre } ?`)\r\n            confirmacion && dispatch( startEliminarCuenta( activeCuenta.id ))\r\n        }\r\n\r\n        handleClose(e);\r\n        Swal.fire('Cuenta eliminada', `La cuenta ${ activeCuenta.nombre } ha sido borrada exitosamente`, 'success')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-cuenta\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Cuenta</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"cuentaActual\">Nombre actual cuenta: </label>\r\n                        <h4>{ activeCuenta.nombre }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nuevaCuenta\">Nueva cuenta: </label>\r\n                        <input value={ stateCuentas.nuevaCuenta } onChange={ handleChange } type=\"text\" name=\"nuevaCuenta\" placeholder=\"Nuevo nombre\" />\r\n                    </section>\r\n                </div>\r\n\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Editar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    {cantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarSubcuenta, startEliminarSubcuenta } from \"../../../actions/cuentasActions\";\r\nimport { startEditarNombreSubcuenta } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarSubcuentas = ({ handleClose, nombreSubcuenta, nombreCuenta, cantidad }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [ stateSubcuentas, setStateSubcuentas] = useState({\r\n        id: cuentas.find( cta => cta.nombre === nombreCuenta )?.id,\r\n        cuentaActual: nombreCuenta,\r\n        subcuentaActual: nombreSubcuenta,\r\n        nuevaSubcuenta: '',\r\n    })\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault()\r\n\r\n        setStateSubcuentas({\r\n            ...stateSubcuentas,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault()\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCuenta: stateSubcuentas.nuevaSubcuenta,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarSubcuenta( { \r\n            ...stateSubcuentas,\r\n            subcuentas: [ ...cuentas.find( cta => cta.nombre === nombreCuenta ).subcuentas.filter( sub => sub !== nombreSubcuenta && sub ), ]\r\n        } ))\r\n        dispatch( startEditarNombreSubcuenta( stateSubcuentas ))\r\n        Swal.fire('Nombre actualizado a '+ stateSubcuentas.nuevaSubcuenta, 'Cuenta actualizada correctamente', 'success')\r\n\r\n        handleClose(e)\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( cantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la subcuenta ${ stateSubcuentas.subcuentaActual } ?`)\r\n            if (confirmacion){\r\n                dispatch( startEliminarSubcuenta( {\r\n                    ...stateSubcuentas,\r\n                    subcuentas: [ ...cuentas.find( cta => cta.nombre === nombreCuenta ).subcuentas.filter( sub => sub !== nombreSubcuenta && sub ), ]\r\n                } ))\r\n                Swal.fire('Cuenta eliminada', `La subcuenta ${ stateSubcuentas.subcuentaActual } ha sido borrada exitosamente`, 'success')\r\n            }\r\n        }\r\n\r\n        handleClose(e);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-cuenta\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Subcuenta</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"cuentaActual\">Nombre actual cuenta: </label>\r\n                        <h4>{ nombreCuenta }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"subcuentaActual\">Nombre actual subcuenta: </label>\r\n                        <h4>{ nombreSubcuenta }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nuevaSubcuenta\">Nueva nombre: </label>\r\n                        <input value={ stateSubcuentas.nuevaSubcuenta } onChange={ handleChange } type=\"text\" name=\"nuevaSubcuenta\" placeholder=\"Nuevo nombre\" />\r\n                    </section>\r\n                </div>\r\n\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Editar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    { cantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../../actions/modalActions';\r\nimport { eliminarMovimientoActivo } from '../../../actions/movsActions';\r\nimport { FormulariosDeuda } from '../../modalForms/formDeudas/FormulariosDeuda';\r\nimport { SaldarDeuda } from '../../modalForms/formDeudas/SaldarDeuda';\r\nimport { SaldarPrestamo } from '../../modalForms/formPrestamos/SaldarPrestamo';\r\nimport { FormulariosGasto } from '../../modalForms/formGastos/FormulariosGasto';\r\nimport { FormulariosIngreso } from '../../modalForms/formIngresos/FormulariosIngreso';\r\nimport { FormulariosPrestamo } from '../../modalForms/formPrestamos/FormulariosPrestamo';\r\nimport { FormulariosTransferencia } from '../../modalForms/formTransferencias/FormulariosTransferencia';\r\nimport { EditarCategorias } from '../../modalForms/formEditarCategorias/EditarCategorias';\r\nimport { EditarCuentas } from '../../modalForms/formEditarCuentas/EditarCuentas';\r\nimport { EditarSubcuentas } from '../../modalForms/formEditarCuentas/EditarSubcuentas';\r\nimport { eliminarCategoriaActiva } from '../../../actions/categoriasActions';\r\nimport { eliminarCuentaActiva } from '../../../actions/cuentasActions';\r\n\r\nexport const Modal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isOpen, typeModal, modo } = useSelector(state => state.modals)\r\n    const { activeCat } = useSelector(state => state.cats)\r\n    const { activeCuenta } = useSelector(state => state.cuentas)\r\n    \r\n\r\n    const handleClose = e => {\r\n        e.preventDefault();\r\n        dispatch( closeModal() )\r\n        dispatch( eliminarMovimientoActivo() )\r\n        dispatch( eliminarCategoriaActiva() )\r\n        dispatch( eliminarCuentaActiva() )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modal__background animate__animated animate__fadeIn animate__faster' onClick={ handleClose }>\r\n            </div>\r\n            <div className='modal__modal'>\r\n                <i onClick={ handleClose } className=\"bi bi-x-lg\"></i>\r\n                {\r\n                    ( isOpen && typeModal === 'gasto' ) && <FormulariosGasto handleClose={ handleClose } modo={ modo } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'ingreso' ) && <FormulariosIngreso handleClose={ handleClose } modo={ modo }  />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'transferencia' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'deuda' ) && <FormulariosDeuda handleClose={ handleClose } modo={ modo } />\r\n                }\r\n                {\r\n                    ( ( isOpen && typeModal === 'prestamo' ) || ( isOpen && typeModal === 'deudaACobrar' ) ) && <FormulariosPrestamo handleClose={ handleClose } modo={ modo } typeModal={ typeModal } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'saldar deuda' ) && <SaldarDeuda handleClose={ handleClose } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'saldar prestamo' ) && <SaldarPrestamo handleClose={ handleClose } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar categorias' ) && <EditarCategorias handleClose={ handleClose } activeCat={ activeCat }/>\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar cuentas' ) && <EditarCuentas handleClose={ handleClose } nombreCuenta={ activeCuenta.nomCuenta } cantidad={ activeCuenta.cantidad } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar subcuentas' ) && <EditarSubcuentas handleClose={ handleClose } nombreSubcuenta={ activeCuenta.nomSubcuenta } nombreCuenta={ activeCuenta.nomCuenta } cantidad={ activeCuenta.cantidad } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'compraActivos' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal }  />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'ventaActivos' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal }  />\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Modal } from \"../components/ui/modal/Modal\";\r\n\r\nexport const PrivateRoute= ({ children }) => {\r\n\r\n    const { isOpen } = useSelector(state => state.modals ) \r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isOpen && <Modal />\r\n            }\r\n            {\r\n                uid\r\n                    ? children\r\n                    : <Navigate to='/login' />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        \r\n            uid  ? <Navigate to='/' /> \r\n                : children\r\n        \r\n    )\r\n}\r\n","export const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading__screen\">\r\n            <h3>Cargando <span>... </span></h3>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\r\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport { LoginScreen } from \"./components/auth/LoginScreen\";\r\nimport { Navbar } from \"./components/ui/navbar/Navbar\";\r\nimport { PrivateRoute } from \"./routers/PrivateRoute\";\r\nimport { PublicRoute } from \"./routers/PublicRoute\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./actions/authActions\";\r\nimport { useState } from \"react\";\r\nimport { LoadingScreen } from \"./components/loadings/LoadingScreen\";\r\nimport { startCargarMovimientos } from \"./actions/movsActions\";\r\nimport { startCargarCategorias } from \"./actions/categoriasActions\";\r\nimport { startCargarCuentas } from \"./actions/cuentasActions\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState( true )\r\n\r\n    useEffect( ()=> {\r\n        const auth = getAuth();\r\n        onAuthStateChanged( auth, user => {\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ))\r\n                dispatch( startCargarMovimientos() )\r\n                dispatch( startCargarCategorias() )\r\n                dispatch( startCargarCuentas() )\r\n            }\r\n            setChecking( false )\r\n        })\r\n    }, [ dispatch ] )\r\n\r\n    if ( checking ) {\r\n        return <LoadingScreen />\r\n    }\r\n    \r\n\r\n    return (\r\n        <HashRouter>\r\n            <Routes>\r\n                \r\n                <Route  path='/*' \r\n                        element={ \r\n                            <PrivateRoute>\r\n                                <Navbar />\r\n                            </PrivateRoute>\r\n                        } />\r\n\r\n                <Route  path='/login/*' \r\n                        element={ \r\n                            <PublicRoute>\r\n                                <LoginScreen />\r\n                            </PublicRoute> \r\n                        } />\r\n            </Routes>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    categorias: [],\r\n    isEditing: false,\r\n    activeCat: null\r\n}\r\n\r\nexport const categoriasReducer = ( state= initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarCategorias:\r\n            return{\r\n                ...state,\r\n                categorias: action.payload\r\n            }\r\n\r\n        case types.agregarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: [ ...state.categorias, action.payload ]\r\n\r\n            }\r\n        \r\n        case types.editarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: state.categorias.map( cat => cat.id === action.payload.id ? action.payload : cat )\r\n            }\r\n\r\n        case types.abrirModoEdicionCategorias:\r\n            return{\r\n                ...state,\r\n                isEditing: true\r\n            }\r\n\r\n        case types.cerrarModoEdicionCategorias:\r\n            return{\r\n                ...state,\r\n                isEditing: false\r\n            }\r\n\r\n        case types.eliminarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: state.categorias.filter( cat => cat.id !== action.payload.id && cat )\r\n            }\r\n\r\n        case types.insertarCategoriaActiva:\r\n            return{\r\n                ...state,\r\n                activeCat: action.payload\r\n            }\r\n\r\n        case types.eliminarCategoriaActiva:\r\n            return{\r\n                ...state,\r\n                activeCat: null\r\n            }\r\n\r\n        case types.limpiarCategorias:\r\n            return{\r\n                ...state,\r\n                categorias: [],\r\n                isEditing: false,\r\n                activeCat: null\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    cuentas: [],\r\n    isEditing: false,\r\n    activeCuenta: null\r\n}\r\n\r\nexport const cuentasReducer = ( state= initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarCuentas:\r\n            return{\r\n                ...state,\r\n                cuentas: action.payload\r\n            }\r\n\r\n        case types.agregarCuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: [ ...state.cuentas, action.payload ]\r\n\r\n            }\r\n        \r\n        case types.agregarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( el => el.nombre === action.payload.nombre ? action.payload : el )\r\n            }\r\n\r\n        case types.editarCuenta:\r\n            console.log( action.payload);\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.id === action.payload.id ? action.payload : cta )\r\n            }\r\n\r\n        case types.editarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.nombre !== action.payload.cuentaActual \r\n                            ? cta \r\n                            : { ...cta, subcuentas: cta.subcuentas.map( sub => sub === action.payload.subcuentaActual \r\n                                        ? action.payload.nuevaSubcuenta\r\n                                        : sub ) } )\r\n            }\r\n\r\n        case types.abrirModoEdicionCuentas:\r\n            return{\r\n                ...state,\r\n                isEditing: true\r\n            }\r\n        \r\n        case types.cerrarModoEdicionCuentas:\r\n            return{\r\n                ...state,\r\n                isEditing: false\r\n            }\r\n\r\n        case types.eliminarCuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.filter( cta => cta.id !== action.payload && cta )\r\n            }\r\n\r\n        case types.eliminarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.nombre !== action.payload.cuentaActual \r\n                            ? cta \r\n                            : { ...cta, subcuentas: action.payload.subcuentas }\r\n                )\r\n            }\r\n\r\n        case types.insertarCuentaActiva:\r\n            return{\r\n                ...state,\r\n                activeCuenta: action.payload\r\n            }\r\n\r\n        case types.eliminarCuentaActiva:\r\n            return{\r\n                ...state,\r\n                activeCuenta: null\r\n            }\r\n\r\n        case types.limpiarCuentas:\r\n            return{\r\n                ...state,\r\n                cuentas: [],\r\n                isEditing: false,\r\n                activeCuenta: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    isOpen: false,\r\n    typeModal: null,\r\n    modo: '',\r\n}\r\n\r\nexport const modalsReducer = ( state=initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.openModal:\r\n            return {\r\n                ...state,\r\n                isOpen: true,\r\n                typeModal: action.payload.tipo,\r\n                modo: action.payload.modo,\r\n                title: action.payload.title\r\n            };\r\n\r\n        case types.closeModal:\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                typeModal: null,\r\n                modo: '',\r\n                title: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    activeMov: null,\r\n    movs: []\r\n}\r\n\r\nexport const movimientosReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarMovimientos:\r\n            return{\r\n                ...state,\r\n                movs: action.payload\r\n            }\r\n        \r\n        case types.nuevoIngreso:\r\n            return{\r\n                ...state,\r\n                movs : [ action.payload, ...state.movs ]\r\n            }\r\n        \r\n        case types.nuevoGasto:\r\n            return{\r\n                ...state,\r\n                movs : [ action.payload, ...state.movs ]\r\n            }\r\n        case types.nuevaTransferencia:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        case types.insertarMovActivo:\r\n            return{\r\n                ...state,\r\n                activeMov: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.eliminarMovActivo:\r\n            return{\r\n                ...state,\r\n                activeMov: null\r\n            }\r\n        case types.actualizarMovimiento:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.id ? el : action.payload )\r\n            }\r\n        case types.eliminarMovimiento:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.filter( el => el.id !== action.payload && el )\r\n            }\r\n        case types.nuevaDeuda:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        case types.nuevoPrestamo:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        \r\n        case types.editarNombreCategoria:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.categoria === action.payload.categoriaActual ? { ...el, categoria: action.payload.nuevaCategoria, sector: action.payload.sector } : el )\r\n            }\r\n\r\n        /* case types.editarNombreCuenta:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el =>{\r\n                    if (el.cuenta === action.payload.cuentaActual) {\r\n                        return { ...el, cuenta: action.payload.nuevaCuenta };\r\n                    }\r\n                    if ( el.from?.cuenta === action.payload.cuentaActual ) {\r\n                        return { ...el, from: { ...el.from, cuenta: action.payload.nuevaCuenta } } \r\n                    }\r\n                    if ( el.to?.cuenta === action.payload.cuentaActual ) {\r\n                        return { ...el, to: { ...el.to, cuenta: action.payload.nuevaCuenta} } \r\n                    }\r\n                    return el;\r\n                })\r\n            } */\r\n\r\n        /* case types.editarNombreSubcuenta:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el =>{\r\n                    if (el.categoria === action.payload.subcuentaActual) {\r\n                        return { ...el, categoria: action.payload.nuevaSubcuenta };\r\n                    }\r\n                    if (el.cuenta === action.payload.cuentaActual || el.from?.cuenta === action.payload.cuentaActual || el.to?.cuenta === action.payload.cuentaActual) {\r\n                        \r\n                        if (el.subcuenta === action.payload.subcuentaActual) {\r\n                            return { ...el, subcuenta: action.payload.nuevaSubcuenta };\r\n                        }\r\n                        if ( el.from?.subcuenta === action.payload.subcuentaActual ) {\r\n                            return { ...el, from: { ...el.from, subcuenta: action.payload.nuevaSubcuenta } } \r\n                        }\r\n                        if ( el.to?.subcuenta === action.payload.subcuentaActual ) {\r\n                            return { ...el, to: { ...el.to, subcuenta: action.payload.nuevaSubcuenta} } \r\n                        }\r\n                    }\r\n                    return el;\r\n                })\r\n            } */\r\n\r\n        /* case types.editarMontosDeuda:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.idReferencia\r\n                                            ? el \r\n                                            : { \r\n                                                ...el, \r\n                                                subcuenta: action.payload.subcuenta, \r\n                                                cantidadPagada: ( el.cantidadPagada - action.payload.cantidadAnterior + action.payload.cantidadNueva),\r\n                                                cuotasPagadas: ( el.cuotasPagadas - action.payload.cuotasAnterior + action.payload.cuotasNuevas ),\r\n                                                estado: ( el.cantidad - (el.cantidadPagada - action.payload.cantidadAnterior) - action.payload.cantidadNueva) > 0 ? 'pendiente' : 'saldado'\r\n                                            } )\r\n            } */\r\n\r\n        /* case types.eliminarCuotaDeuda:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.idReferencia \r\n                                            ? el\r\n                                            : {\r\n                                                ...el,\r\n                                                cantidadPagada: ( el.cantidadPagada - action.payload.cantidadAnterior ),\r\n                                                cuotasPagadas: ( el.cuotasPagadas - action.payload.cuotasAnterior ),\r\n                                                estado: ( el.cantidad - ( el.cuotasPagadas - action.payload.cuotasAnterior ) ) > 0 ? 'pendiente' : 'saldado'\r\n                                            })\r\n            } */\r\n\r\n        case types.limpiarMovimientos:\r\n            return{\r\n                ...state,\r\n                movs: [],\r\n                activeMov: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.login:\r\n            return{\r\n                ...state,\r\n                uid: action.payload.uid,\r\n                name: action.payload.userName\r\n            }\r\n\r\n        case types.logout:\r\n            return{\r\n                ...state,\r\n                uid: null,\r\n                name: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    pares:[\r\n        {\r\n            nombre: 'USD/ARS',\r\n            valor: 1\r\n        },\r\n        {\r\n            nombre: 'BTC/ARS',\r\n            valor: 1\r\n\r\n        },\r\n        {\r\n            nombre: 'BTC/USD',\r\n            valor: 1\r\n\r\n        }\r\n    ]\r\n}\r\n\r\nexport const valoresReducer = ( state= initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.actualizarValores:\r\n            return{\r\n                ...state,\r\n                // paso array completo con objetos dentro\r\n                pares: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { categoriasReducer } from \"../reducers/categoriasReducer\";\r\nimport { cuentasReducer } from \"../reducers/cuentasReducer\";\r\nimport { modalsReducer } from \"../reducers/modalsReducer\";\r\nimport { movimientosReducer } from \"../reducers/movimientosReducer\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { valoresReducer } from \"../reducers/valoresReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    movs: movimientosReducer,\r\n    modals: modalsReducer,\r\n    cats: categoriasReducer,\r\n    cuentas: cuentasReducer,\r\n    pares: valoresReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    ) );","import { Provider } from 'react-redux'\nimport { AppRouter } from \"./AppRouter\";\nimport { store } from \"./store/store\";\n\n\nfunction App() {\n    return (\n        <Provider store={ store } >\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}