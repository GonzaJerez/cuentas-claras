{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadCategorias.js","actions/categoriasActions.js","helpers/loadCuentas.js","actions/cuentasActions.js","helpers/loadMovs.js","actions/movsActions.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginForm.js","components/auth/RegisterForm.js","components/auth/LoginScreen.js","actions/modalActions.js","components/ui/buttons/Buttons.js","components/ui/selects/Select.js","components/ui/tables/Table.js","components/principalRoutes/movimientos/MovimientosScreen.js","components/ui/acordeon/AcordeonTable.js","components/principalRoutes/categories/CategoriesScreen.js","helpers/convertidor.js","helpers/getCantidades.js","components/ui/lists/List.js","components/ui/acordeon/AcordeonList.js","components/principalRoutes/cuentas/CuentasScreen.js","components/EstadisticasScreen.js","components/principalRoutes/gastos/GastosScreen.js","components/principalRoutes/home/LastMovs.js","components/principalRoutes/home/CuentasHome.js","components/principalRoutes/home/PatrimonioView.js","components/principalRoutes/home/HomeScreen.js","components/principalRoutes/ingresos/IngresosScreen.js","components/ui/tables/TableTranferencias.js","components/principalRoutes/transferencias/TransferenciasScreen.js","components/principalRoutes/deudas/DeudasScreen.js","components/principalRoutes/deudasACobrar/DeudasACobrarScreen.js","helpers/fetchPares.js","components/ui/navbar/Navbar.js","actions/paresActions.js","components/modalForms/formDeudas/DetalleDeuda.js","helpers/isFormValid.js","hooks/useManySelectors.js","helpers/fileUpload.js","components/ui/uploadFile/UploadFile.js","components/modalForms/formDeudas/Deuda.js","components/modalForms/formDeudas/FormulariosDeuda.js","components/modalForms/formDeudas/SaldarDeuda.js","components/modalForms/formPrestamos/SaldarPrestamo.js","components/modalForms/formGastos/DetalleGasto.js","components/modalForms/NuevoIngresoGasto.js","components/modalForms/formGastos/FormulariosGasto.js","components/modalForms/formIngresos/DetalleIngreso.js","components/modalForms/formIngresos/FormulariosIngreso.js","components/modalForms/formDeudasACobrar/DeudasACobrar.js","components/modalForms/formPrestamos/DetallePrestamo.js","components/modalForms/formPrestamos/Prestamo.js","components/modalForms/formPrestamos/FormulariosPrestamo.js","components/modalForms/formCompraActivos/CompraActivos.js","components/modalForms/formVentaActivos/VentaActivos.js","components/modalForms/formTransferencias/DetalleTransferencia.js","components/modalForms/formTransferencias/TransferenciaForm.js","components/modalForms/formTransferencias/FormulariosTransferencia.js","components/modalForms/formEditarCategorias/EditarCategorias.js","components/modalForms/formEditarCuentas/EditarCuentas.js","components/modalForms/formEditarCuentas/EditarSubcuentas.js","components/ui/modal/Modal.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/loadings/LoadingScreen.js","AppRouter.js","reducers/categoriasReducer.js","reducers/cuentasReducer.js","reducers/modalsReducer.js","reducers/movimientosReducer.js","reducers/authReducer.js","reducers/valoresReducer.js","store/store.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","googleAuthProvider","GoogleAuthProvider","types","loadCategorias","uid","a","getDocs","collection","catsCollection","cats","forEach","cat","push","data","id","sort","b","nombre","categorias","tipo","sector","startAgregarCategoriasPorDefecto","dispatch","getState","auth","addDoc","err","console","log","cargarCategorias","type","payload","startAgregarCategoria","nuevaCat","agregarCategoria","editarCategoria","cerrarModoEdicionCategorias","eliminarCategoria","loadCuentas","cuentasCollection","cuentas","cta","subcuentas","startAgregarCuentasPorDefecto","cargarCuentas","startAgregarCuenta","nuevaCuenta","agregarCuenta","cuenta","startAgregarSubcuenta","updateDoc","doc","agregarSubcuenta","editarCuenta","editarSubcuenta","subcuenta","cerrarModoEdicionCuentas","eliminarCuenta","eliminarSubcuenta","insertarCuentaActiva","loadMovs","movsCollection","movs","mov","fecha","Date","startNuevoMovimiento","nuevoIngreso","nuevoGasto","nuevaTransferencia","nuevoPrestamo","nuevaDeuda","insertarMovimientoActivo","cargarMovimientos","startActualizarMovimiento","movToFirestore","actualizarMovimiento","startEliminarMovimiento","deleteDoc","eliminarMovimiento","login","userName","logout","useForm","initialState","useState","formValues","setFormValues","handleChange","e","target","name","value","handleChangeCalendar","handleChangeFrom","from","handleChangeTo","to","LoginForm","handleChangeScreen","useDispatch","errorForm","setErrorForm","email","pass","isFormLoginValid","validator","isEmail","email1","trim","className","onSubmit","password","preventDefault","getAuth","signInWithEmailAndPassword","user","displayName","code","Swal","fire","onChange","placeholder","htmlFor","onClick","signInWithPopup","localStorage","getItem","setItem","src","alt","RegisterForm","email2","pass1","pass2","length","isAlpha","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","createUserWithEmailAndPassword","updateProfile","autoComplete","required","LoginScreen","screen","setScreen","openModal","typeModal","modo","title","Buttons","botonEditarVisible","ruta","isButtonsOpen","setIsButtonsOpen","isEditingCuentas","useSelector","state","isEditing","isEditingCategorias","openVistaButtons","openingModal","stopPropagation","closeVistaEditar","parentElement","click","Select","options","clase","actualizarState","defaultValue","map","op","Table","movimientos","cantMostrada","cabecera","ultimosMovimientos","undefined","slice","scope","estado","detalleModal","Intl","NumberFormat","style","currency","format","cantidadPagada","cantidad","categoria","prestador","tomador","toLocaleDateString","editarModal","defaultProps","MovimientosScreen","meses","getMonth","mesFiltro","setMesFiltro","filter","el","AcordeonTable","tableElements","sumarCantidadTotalPorCategoria","cantidadTotal","parseInt","catNombre","catCantidad","classList","contains","cantElemInternos","toggle","nextSibling","height","handleToggleAccordion","CategoriesScreen","useEffect","categoriasTotales","convertidor","array","pares","coin","fiat","reduce","acumulador","actual","valor","includes","find","par","sumarCantidadTotalPorCuenta","cantidadTotalPorCuenta","sumarCantidadEnCuentasActivos","subcuentaActivo","monedaValuacion","sumarCantidadPorSubcuenta","elementos","activos","parseFloat","sumarCantidadTotal","cantidadTotalActivos","totalCuentas","totalActivos","sumarCantidadTotalActivos","sub","cantidadTotalConvertida","List","nomCuenta","moneda","setMoneda","sumarMontosEnDistintasMonedas","total","minimumFractionDigits","nomSubcuenta","AcordeonList","CuentasScreen","totalMovimientos","nombreCuentas","EstadisticasScreen","background","speed","maxWidth","maxHeight","loop","autoplay","GastosScreen","tablaGastos","categoriasGastos","LastMovs","CuentasHome","PatrimonioView","setState","HomeScreen","element","IngresosScreen","tablaIngresos","categoriasIngresos","TableTranferencias","TransferenciasScreen","transferencias","DeudasScreen","deudas","DeudasACobrarScreen","deudasACobrar","fetchPares","fetch","header","resp","json","bid","Navbar","actualizarValoresMonedas","usd_ars","btc_usd","btc_ars","eth_ars","eth_usd","then","menu","useRef","modal","handleClose","current","transform","zIndex","opacity","ref","signOut","path","DetalleDeuda","activeMov","descripcion","cuotas","cuotasPagadas","url","href","rel","verificarCaracteres","input","toString","caracter","isFormValid","form","ok","msg","now","isNaN","nuevaSubcuenta","nuevaCategoria","cuotasAPagar","cantidadAPagar","useManySelectors","modals","nombreCategorias","fileUpload","file","formData","FormData","append","method","body","cloudResp","secure_url","UploadFile","isLoading","setIsLoading","isMounted","isComprobanteAdd","setIsComprobanteAdd","comprobante","handleChangeComprobante","files","multiple","accept","Deuda","msgForm","setMsgForm","setNuevaCuenta","setNuevaCategoria","nuevoActivo","setNuevoActivo","respForm","autoFocus","label","min","disabled","window","confirm","FormulariosDeuda","SaldarDeuda","setNuevaSubuenta","idReferencia","aQuien","max","SaldarPrestamo","deQuien","DetalleGasto","Math","abs","NuevoIngresoGasto","setNuevaSubcuenta","setmonedaValuacion","deudaOriginal","parse","deuda","cantidadAnterior","cantidadNueva","cuotasAnterior","cuotasNuevas","maxDate","FormulariosGasto","DetalleIngreso","FormulariosIngreso","DeudasACobrar","DetallePrestamo","Prestamo","FormulariosPrestamo","CompraActivos","subcuentasTo","subcuentasFrom","handleSubmit","handleDelete","nuevaCuentaFrom","setNuevaCuentaFrom","nuevaSubcuentaFrom","setNuevaSubcuentaFrom","nuevaSubcuentaTo","setNuevaSubcuentaTo","VentaActivos","nuevaCuentaTo","setNuevaCuentaTo","DetalleTransferencia","TransferenciaForm","FormulariosTransferencia","cantidadRestanteEnCuenta","restaEntreCantidadEnCuentaYCantidadVendida","EditarCategorias","activeCat","stateCategorias","setStateCategorias","catToFirestore","categoriaActual","startEditarNombreCategoria","EditarCuentas","activeCuenta","stateCuentas","setStateCuentas","cuentaToFirestore","EditarSubcuentas","nombreSubcuenta","nombreCuenta","cuentaActual","subcuentaActual","stateSubcuentas","setStateSubcuentas","startEditarNombreSubcuenta","Modal","isOpen","PrivateRoute","children","PublicRoute","LoadingScreen","AppRouter","checking","setChecking","onAuthStateChanged","cuentasFirebase","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"wSAmBMA,EAAMC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAObC,GAFYC,YAAaV,GAEpBW,eACLC,EAAqB,IAAIC,ICvBlBC,EAEK,8BAFLA,EAGG,4BAHHA,EAIW,oCAJXA,EAKU,2CALVA,EAMU,2CANVA,EAOa,sCAPbA,EAQW,qCARXA,EASG,4BATHA,EAYM,+BAZNA,EAac,wCAbdA,EAgBW,oCAhBXA,EAiBU,mCAjBVA,EAmBE,qBAnBFA,EAoBG,sBApBHA,EAsBM,2BAtBNA,EAuBO,4BAvBPA,EAwBK,0BAxBLA,EAyBS,8BAzBTA,EA0BU,+BA1BVA,EA2BQ,6BA3BRA,EA4BgB,+BA5BhBA,EA6BiB,gCA7BjBA,EA8Ba,mCA9BbA,EA+Ba,mCA/BbA,EAgCO,4BAhCPA,EAiCM,2BAjCNA,EAmCS,iCAnCTA,EAoCU,kCApCVA,EAqCQ,gCArCRA,EAuCmB,kCAvCnBA,GAwCoB,mCAxCpBA,GAyCgB,yCAzChBA,GA0CgB,yCA1ChBA,GA2CU,kCA3CVA,GA4CS,iCA5CTA,GA8CU,+BA9CVA,GAgDF,eAhDEA,GAiDD,gB,QC9CCC,GAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,YAASC,YAAYV,EAAF,UAAUO,EAAV,qBADtB,cACpBI,EADoB,OAEpBC,EAAO,GAEbD,EAAeE,SAAS,SAAAC,GACpBF,EAAKG,KAAL,6BACOD,EAAIE,QADX,IAEIC,GAAIH,EAAIG,SAIhBL,EAAKM,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAXvB,kBAanBR,GAbmB,2CAAH,sDCErBS,GAAa,CACX,CACID,OAAQ,uBACRE,KAAM,QACNC,OAAQ,SAEZ,CACIH,OAAQ,SACRE,KAAM,QACNC,OAAQ,iBAEZ,CACIH,OAAQ,SACRE,KAAM,UACNC,OAAQ,mBAEZ,CACIH,OAAQ,SACRE,KAAM,UACNC,OAAQ,mBAEZ,CACIH,OAAQ,MACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,MACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,UACRE,KAAM,QACNC,OAAQ,aAEZ,CACIH,OAAQ,iBACRE,KAAM,UACNC,OAAQ,kBAEZ,CACIH,OAAQ,YACRE,KAAM,UACNC,OAAQ,aAEZ,CACIH,OAAQ,UACRE,KAAM,QACNC,OAAQ,YAKPC,GAAmC,WAC5C,8CAAO,WAAOC,EAAUC,GAAjB,eAAAlB,EAAA,sDAEH,IACYD,EAAQmB,IAAWC,KAAnBpB,IAERc,GAAWR,QAAX,uCAAoB,WAAMC,GAAN,SAAAN,EAAA,sEAEVoB,YAAQlB,YAAYV,EAAF,UAAUO,EAAV,oBAAmCO,GAF3C,2CAApB,uDAKF,MAAOe,GACLC,QAAQC,IAAKF,GAXd,2CAAP,yDA+BSG,GAAmB,SAAApB,GAAI,MAChC,CACIqB,KAAM5B,GACN6B,QAAStB,IAIJuB,GAAwB,SAAArB,GACjC,8CAAO,WAAOW,EAAUC,GAAjB,iBAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAIwBqB,YAAQlB,YAAYV,EAAF,UAAUO,EAAV,oBAAkCO,GAJ5E,OAIOsB,EAJP,OAKCX,EAAUY,GAAiB,cAAGpB,GAAImB,EAASnB,IAAOH,KALnD,gDAQCgB,QAAQC,IAAR,MARD,yDAAP,yDAcSM,GAAmB,SAAAvB,GAAG,MAC/B,CACImB,KAAM5B,EACN6B,QAASpB,IAsBJwB,GAAkB,SAAAxB,GAAG,MAC9B,CACImB,KAAM5B,EACN6B,QAASpB,IAUJyB,GAA8B,iBACvC,CACIN,KAAM5B,KAiBDmC,GAAoB,SAAA1B,GAAG,MAChC,CACImB,KAAM5B,EACN6B,QAASpB,IC1KJ2B,GAAW,uCAAG,WAAOlC,GAAP,iBAAAC,EAAA,sEACSC,YAASC,YAAYV,EAAF,UAAUO,EAAV,kBAD5B,cACjBmC,EADiB,OAEjBC,EAAU,GAEhBD,EAAkB7B,SAAS,SAAA+B,GACvBD,EAAQ5B,KAAR,6BACO6B,EAAI5B,QADX,IAEIC,GAAI2B,EAAI3B,SAIhB0B,EAAQzB,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAX7B,kBAahBuB,GAbgB,2CAAH,sDCElBA,GAAU,CACZ,CACIvB,OAAQ,MACRyB,WAAY,CAAC,WAAY,aAAc,iBACzC,CACEzB,OAAQ,MACRyB,WAAY,CAAC,WAAW,aAAc,eAE1C,CACIzB,OAAQ,MACRyB,WAAY,CAAC,UAAW,aAE5B,CACIzB,OAAQ,MACRyB,WAAY,CAAC,UAAW,aAE5B,CACIzB,OAAQ,UACRyB,WAAY,CAAC,OAAQ,OAAQ,OAAQ,UAAW,OAAQ,SAE5D,CACIzB,OAAQ,sBACRyB,WAAY,CAAC,WAAY,aAIpBC,GAAgC,WACzC,8CAAO,WAAOrB,EAAUC,GAAjB,eAAAlB,EAAA,sDACH,IACYD,EAAQmB,IAAWC,KAAnBpB,IAERoC,GAAQ9B,QAAR,uCAAiB,WAAM+B,GAAN,SAAApC,EAAA,sEACPoB,YAAQlB,YAAYV,EAAF,UAAUO,EAAV,iBAA+BqC,GAD1C,2CAAjB,uDAIF,MAAQf,GACNC,QAAQC,IAAKF,GATd,2CAAP,yDA4BEkB,GAAgB,SAAAJ,GAAO,MACzB,CACIV,KAAM5B,EACN6B,QAASS,IAIJK,GAAqB,SAAAJ,GAC9B,8CAAO,WAAOnB,EAAUC,GAAjB,iBAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAG2BqB,YAAQlB,YAAYV,EAAF,UAAUO,EAAV,iBAAgCqC,GAH7E,OAGOK,EAHP,OAICxB,EAAUyB,GAAc,cACpBjC,GAAIgC,EAAYhC,IACb2B,KANR,gDASCd,QAAQC,IAAR,MATD,yDAAP,yDAcSmB,GAAgB,SAAAC,GAAM,MAC/B,CACIlB,KAAM5B,EACN6B,QAASiB,IAIJC,GAAwB,SAAAD,GAEjC,OADArB,QAAQC,IAAKoB,GACb,uCAAO,WAAQ1B,EAAUC,GAAlB,eAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAGO8C,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,wBAA+B4C,EAAOlC,KAAQkC,GAHnE,OAIC1B,EAAU8B,GAAkBJ,IAJ7B,gDAOCrB,QAAQC,IAAR,MAPD,yDAAP,yDAYSwB,GAAmB,SAAAJ,GAAM,MAClC,CACIlB,KAAM5B,EACN6B,QAASiB,IA4BJK,GAAe,SAAAL,GAAM,MAC9B,CACIlB,KAAM5B,EACN6B,QAASiB,IAoBJM,GAAkB,SAAAC,GAAS,MACpC,CACIzB,KAAM5B,EACN6B,QAASwB,IAUJC,GAA2B,iBACpC,CACI1B,KAAM5B,IAiBDuD,GAAiB,SAAA3C,GAAE,MAC5B,CACIgB,KAAM5B,EACN6B,QAASjB,IAoBJ4C,GAAoB,SAAAH,GAAS,MACtC,CACIzB,KAAM5B,EACN6B,QAASwB,IAIJI,GAAuB,SAAAlB,GAAG,MACnC,CACIX,KAAM5B,EACN6B,QAASU,IC3NJmB,GAAQ,uCAAG,WAAOxD,GAAP,iBAAAC,EAAA,sEACSC,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAD5B,cACdyD,EADc,OAEdC,EAAO,GAEbD,EAAenD,SAAS,SAAAqD,GACpBD,EAAKlD,KAAL,6BACOmD,EAAIlD,QADX,IAEIC,GAAIiD,EAAIjD,GACRkD,MAAO,IAAIC,KAAMF,EAAIlD,OAAOmD,aAIpCF,EAAK/C,MAAM,SAAEV,EAAGW,GAAL,OAAWX,EAAE2D,MAAQhD,EAAEgD,OAAS,EAAI,KAZ3B,kBAcbF,GAda,2CAAH,sDCERI,GAAuB,SAAEH,EAAK5C,GACvC,8CAAO,WAAOG,EAAUC,GAAjB,iBAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,kBAGmBqB,YAAQlB,YAAYV,EAAF,UAAUO,EAAV,qBAAmC2D,GAHxE,OAGOZ,EAHP,OAKU,iBAAThC,GAA2BG,EAAU6C,GAAa,2BAAErD,GAAIqC,EAAIrC,IAAOiD,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WACpF,eAAT7C,GAAyBG,EAAU8C,GAAW,2BAAEtD,GAAIqC,EAAIrC,IAAOiD,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAChF,uBAAT7C,GAAiCG,EAAU+C,GAAmB,2BAAEvD,GAAIqC,EAAIrC,IAAOiD,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAChG,kBAAT7C,GAA4BG,EAAUgD,GAAc,2BAAExD,GAAIqC,EAAIrC,IAAOiD,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WACtF,eAAT7C,GAAyBG,EAAUiD,GAAW,2BAAEzD,GAAIqC,EAAIrC,IAAOiD,GAAlB,IAAuBC,MAAO,IAAIC,KAAMF,EAAIC,WAT1F,kDAYCrC,QAAQC,IAAR,MAZD,0DAAP,yDAiBSuC,GAAe,SAACJ,GAAD,MACxB,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJK,GAAa,SAACL,GAAD,MACtB,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJM,GAAqB,SAACN,GAAD,MAC9B,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJQ,GAAa,SAAAR,GAAG,MACzB,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJO,GAAgB,SAAAP,GAAG,MAC5B,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJS,GAA2B,SAAAT,GAAG,MACvC,CACIjC,KAAM5B,EACN6B,QAASgC,IAkBXU,GAAoB,SAAAX,GAAI,MAC1B,CACIhC,KAAM5B,EACN6B,QAAS+B,IAIJY,GAA4B,SAAEX,GACvC,8CAAO,WAAOzC,EAAUC,GAAjB,iBAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,WAEFuE,EAHH,gBAGyBZ,IACNjD,GAJnB,SAMGoC,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,4BAAmC2D,EAAIjD,KAAS6D,GANjE,OAQHrD,EAAUsD,GAAqB,6BAAMb,GAAP,IAAYC,MAAO,IAAIC,KAAMF,EAAIC,WAR5D,2CAAP,yDAYSY,GAAuB,SAAAb,GAAG,MACnC,CACIjC,KAAM5B,EACN6B,QAASgC,IAIJc,GAA0B,SAAA/D,GACnC,8CAAO,WAAOQ,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGG0E,YAAW3B,YAAKtD,EAAF,UAAUO,EAAV,4BAAmCU,KAHpD,OAIHQ,EAAUyD,GAAoBjE,IAJ3B,2CAAP,yDAQSiE,GAAqB,SAAAjE,GAAE,MAChC,CACIgB,KAAM5B,EACN6B,QAASjB,IChGJkE,GAAQ,SAAE5E,EAAK6E,GAAP,MACjB,CACInD,KAAM5B,GACN6B,QAAQ,CACJ3B,MAAK6E,cAgBXC,GAAS,iBACX,CACIpD,KAAM5B,K,QCzCDiF,GAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAAoCC,mBAAUD,GAA9C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,EAAe,SAACC,GAClBF,EAAc,6BACPD,GADM,mBAEPG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAI9BC,EAAuB,SAAAJ,GACzBF,EAAc,6BACPD,GADM,IAETtB,MAAOyB,MAITK,EAAmB,SAAAL,GACrBF,EAAc,6BACPD,GADM,IAETS,KAAK,6BACET,EAAWS,MADd,mBAEEN,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,YAKlCI,EAAiB,SAAAP,GACnBF,EAAc,6BACPD,GADM,IAETW,GAAG,6BACIX,EAAWW,IADhB,mBAEIR,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,YAKxC,MAAO,CAAEN,EAAYE,EAAcK,EAAsBC,EAAkBE,I,QCnClEE,GAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAElB7E,EAAW8E,cACjB,EAAkCf,oBAAU,GAA5C,mBAAOgB,EAAP,KAAkBC,EAAlB,KAOA,EAAqCnB,GAAQ,CACzCoB,MAAO,GACPC,KAAM,KAFV,mBAAQlB,EAAR,KAAoBE,EAApB,KAKMiB,EAAmB,WACrB,QAAMC,IAAUC,QAASrB,EAAWsB,OAAOC,UACvCP,EAAc,mBACP,IAaf,OACI,uBAAKQ,UAAU,oCAAf,UACI,sBAAKA,UAAU,WAAf,SACI,oBAAGA,UAAU,mBAEjB,iDAEIT,GACI,sBAAKS,UAAU,cAAf,SACI,oBAAGA,UAAU,YAAb,SAA2BT,MAGvC,wBAAMU,SApBM,SAAAtB,GF2Cc,IAAEc,EAAOS,EE1CvCvB,EAAEwB,iBACGR,GAEDnF,GFuC4BiF,EEvCMjB,EAAWiB,MFuCVS,EEvCiB1B,EAAWkB,KFwCvE,uCAAO,WAAMlF,GAAN,mBAAAjB,EAAA,sEAEOmB,EAAO0F,cAFd,SAGwBC,YAA4B3F,EAAM+E,EAAOS,GAHjE,gBAGSI,EAHT,EAGSA,KACR9F,EAAU0D,GAAOoC,EAAKhH,IAAKgH,EAAKC,cAJjC,gDAMmB,wBAAb,KAAIC,MACLC,IAAKC,KAAK,2BAAyB,uCAAqC,SAE1D,wBAAb,KAAIF,MACLC,IAAKC,KAAM,mBAAoB,wBAAyB,SAV7D,yDAAP,yDExBQ,UACI,uBAAKV,UAAU,qBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAWiB,MAAQkB,SAAWjC,EAAe1D,KAAK,QAAQgF,UAAU,eAAehG,GAAG,gBAAgB4G,YAAY,kBAC9I,wBAAOC,QAAQ,gBAAf,8BAGJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,OAAOC,MAAQN,EAAWkB,KAAOiB,SAAWjC,EAAe1D,KAAK,WAAWgF,UAAU,eAAehG,GAAG,mBAAmB4G,YAAY,aAClJ,wBAAOC,QAAQ,mBAAf,yBAGJ,yBAAQ7F,KAAK,SAASgF,UAAU,aAAhC,sBAEA,uBAAKA,UAAU,wBAAf,UACI,qDACA,uBACIA,UAAU,aACVc,QAvDI,SAAAnC,GACpBA,EAAEwB,iBACF3F,EFJJ,uCAAO,WAAOA,EAAUC,GAAjB,mBAAAlB,EAAA,6DACGmB,EAAO0F,cADV,SAEoBW,YAAiBrG,EAAMxB,GAF3C,gBAEKoH,EAFL,EAEKA,KACR9F,EAAU0D,GAAOoC,EAAKhH,IAAKgH,EAAKC,cAE1BS,aAAaC,QAAQ,kBACvBzG,EAAUD,MACVC,EAAUqB,MACVmF,aAAaE,QAAQ,gBAAgB,IARtC,2CAAP,0DEuDgB,UAII,sBAAKlB,UAAU,sBAAf,SACI,sBAAKA,UAAU,cAAcmB,IAAI,8EAA8EC,IAAI,oBAEvH,oBAAGpB,UAAU,WAAb,uCAMR,yBAAQA,UAAU,aAAac,QAAUzB,EAAzC,iECvEHgC,GAAe,SAAC,GAA4B,IAA1BhC,EAAyB,EAAzBA,mBAE3B,EAAkCd,oBAAU,GAA5C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACMhF,EAAW8E,cAEjB,EAAqCjB,GAAQ,CACzClE,OAAQ,GACR2F,OAAQ,GACRwB,OAAQ,GACRC,MAAO,GACPC,MAAO,KALX,mBAAQhD,EAAR,KAAoBE,EAApB,KA+CA,OACI,uBAAKsB,UAAU,oCAAf,UACI,sBAAKA,UAAU,WAAf,SACI,oBAAGA,UAAU,mBAEjB,iDAEIT,GACI,sBAAKS,UAAU,cAAf,SACI,oBAAGA,UAAU,YAAb,SAA2BT,MAGvC,wBAAMU,SArBS,SAAAtB,GHDc,IAAExE,EAAQsF,EAAOS,EGElDvB,EAAEwB,kBA9BG3B,EAAWrE,OAAO4F,OAAO0B,OAAS,IAAM7B,IAAU8B,QAASlD,EAAWrE,OAAO4F,OAAQ,CAAC,WACvFP,EAAa,mBACN,GAELI,IAAUC,QAASrB,EAAWsB,OAAOC,QAItCvB,EAAW8C,OAAOvB,SAAWvB,EAAWsB,OAAOC,QAChDP,EAAc,gCACP,GAELI,IAAU+B,iBAAkBnD,EAAW+C,MAAMxB,OAAQ,CACvD6B,UAAW,EACXC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZC,WAAY,IAKXxD,EAAW+C,QAAU/C,EAAWgD,QACjChC,EAAa,wCACN,IALPA,EAAc,uFACP,IAfPA,EAAc,kBACP,MA2BPhF,GHL+BL,EGKMqE,EAAWrE,OHLTsF,EGKiBjB,EAAWsB,OHLrBI,EGK6B1B,EAAW+C,MHJ9F,uCAAO,WAAO/G,GAAP,mBAAAjB,EAAA,sEAEOmB,EAAO0F,cAFd,SAGwB6B,YAAgCvH,EAAM+E,EAAOS,GAHrE,uBAGSI,EAHT,EAGSA,KAHT,SAIO4B,YAAe5B,EAAM,CAAEC,YAAapG,IAJ3C,OAKCK,EAAU0D,GAAOoC,EAAKhH,IAAKa,IAErB6G,aAAaC,QAAQ,iBACvBzG,EAAUD,MACVC,EAAUqB,MACVmF,aAAaE,QAAQ,eAAe,IAVzC,kDAcmB,8BAAb,KAAIV,MAELC,IAAKC,KAAK,MAAO,oCAAqC,SAhB3D,0DAAP,wDGKQlB,GAAc,KAgBd,UACI,uBAAKQ,UAAU,qBAAf,UACI,wBAAOmC,aAAa,MAAMtD,KAAK,SAASC,MAAQN,EAAWrE,OAASwG,SAAWjC,EAAe1D,KAAK,OAAOgF,UAAU,eAAehG,GAAG,oBAAoBoI,UAAQ,EAACxB,YAAY,sBAC/K,wBAAOC,QAAQ,oBAAf,kCAEJ,uBAAKb,UAAU,qBAAf,UACI,wBAAOmC,aAAa,MAAMtD,KAAK,SAASC,MAAQN,EAAWsB,OAASa,SAAWjC,EAAe1D,KAAK,QAAQgF,UAAU,eAAehG,GAAG,sBAAsBoI,UAAQ,EAACxB,YAAY,qBAClL,wBAAOC,QAAQ,sBAAf,iCAEJ,uBAAKb,UAAU,qBAAf,UACI,wBAAOmC,aAAa,MAAMtD,KAAK,SAASC,MAAQN,EAAW8C,OAASX,SAAWjC,EAAe1D,KAAK,QAAQgF,UAAU,eAAehG,GAAG,sBAAsBoI,UAAQ,EAACxB,YAAY,oBAClL,wBAAOC,QAAQ,sBAAf,gCAGJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAW+C,MAAQZ,SAAWjC,EAAe1D,KAAK,WAAWgF,UAAU,eAAehG,GAAG,oBAAoBoI,UAAQ,EAACxB,YAAY,aAC9J,wBAAOC,QAAQ,oBAAf,yBAEJ,uBAAKb,UAAU,gBAAf,UACI,wBAAOnB,KAAK,QAAQC,MAAQN,EAAWgD,MAAQb,SAAWjC,EAAe1D,KAAK,WAAWgF,UAAU,eAAehG,GAAG,oBAAoBoI,UAAQ,EAACxB,YAAY,uBAC9J,wBAAOC,QAAQ,oBAAf,mCAGJ,yBAAQ7F,KAAK,SAASgF,UAAU,aAAhC,yBACA,yBAAQA,UAAU,aAAac,QAAUzB,EAAzC,sEC1FHgD,GAAc,WAEvB,MAA4B9D,mBAAS,SAArC,mBAAO+D,EAAP,KAAeC,EAAf,KAEMlD,EAAqB,SAAAV,GACvBA,EAAEwB,iBACmBoC,EAAV,UAAXD,EAAgC,WAAwB,UAG5D,OACI,uCACI,sBAAKtC,UAAU,YAAYmB,IAAI,kFAAkFC,IAAI,uBACrH,uBAAKpB,UAAU,gBAAf,UAEmB,UAAXsC,GACG,eAAC,GAAD,CAAWjD,mBAAqBA,IAGxB,aAAXiD,GACG,eAAC,GAAD,CAAcjD,mBAAsBA,WCpB9CmD,GAAY,SAAEC,GAAF,MACrB,CACIzH,KAAM5B,EACN6B,QAAS,CACLZ,KAAMoI,EAAUpI,KAChBqI,KAAMD,EAAUC,KAChBC,MAAOF,EAAUE,SCFhBC,GAAU,SAAC,GAAyC,IAAD,IAAtCC,0BAAsC,SAAXC,EAAW,EAAXA,KAE3CtI,EAAW8E,cACjB,EAA0Cf,oBAAS,GAAnD,mBAAOwE,EAAP,KAAsBC,EAAtB,KACkBC,EAAqBC,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAA1D0H,UACUC,EAAwBH,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA7DyJ,UAEFE,EAAmB,SAAA3E,GACrBA,EAAEwB,iBACF6C,GAAmBD,IAGjBQ,EAAe,SAAE5E,EAAGtE,GACtBsE,EAAEwB,iBACFxB,EAAE6E,kBACFhJ,EAAUgI,GAAW,CACjBnI,KAAMA,GAAQsE,EAAEC,OAAOE,MACvB4D,KAAM,WAETM,GAAkB,IAUjBS,EAAmB,SAAA9E,GACrBA,EAAEwB,iBACO,YAAT2C,GAAsBtI,EAAUkC,MACvB,eAAToG,GAAyBtI,EAAUc,OAGvC,OAEI,uCACA,uBAAK0E,UAAU,eAAf,UACO6C,IAAuBI,GAAuB,yBAAQjD,UAAU,6BAAlB,SACO,oBAAGc,QAlB3C,SAAAnC,GACpBA,EAAEwB,iBACO,YAAT2C,GAAsBtI,ETsI1B,CACIQ,KAAM5B,IStIG,eAAT0J,GAAyBtI,EXkH7B,CACIQ,KAAM5B,KWpGqF4G,UAAU,mBAG9F6C,GAAsBI,GAAqB,yBAAQjD,UAAU,gCAAlB,SACM,oBAAGc,QAAU2C,EAAmBzD,UAAU,cAG3F6C,GAAsBQ,GAAwB,yBAAQrD,UAAU,gCAAlB,SACG,oBAAGc,QAAU2C,EAAmBzD,UAAU,iBAIlG,uBAAKA,UAAU,aAAf,UAES+C,EACe,yBAAQ/C,UAAU,iBAAiBc,QAAUwC,EAA7C,SAAgE,oBAAGtD,UAAU,cAD5E,yBAAQA,UAAU,gBAAgBc,QAAUwC,EAA5C,eAGrB,uBAAKtD,UAAS,wBAAoB+C,EAAgB,UAAY,IAA9D,UAEQ,0BAAQjC,QAAUyC,EAAezE,MAAM,UAAUkB,UAAU,eAA3D,0BAAuF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,4BAG3K,0BAAQc,QAAUyC,EAAezE,MAAM,gBAAgBkB,UAAU,eAAjE,qCAAwG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,8BAG5L,0BAAQc,QAAUyC,EAAezE,MAAM,QAAQkB,UAAU,eAAzD,wBAAmF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,8BAGvK,0BAAQc,QAAUyC,EAAezE,MAAM,QAAQkB,UAAU,eAAzD,wBAAmF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,kBAGvK,0BAAQc,QAAUyC,EAAezE,MAAM,WAAWkB,UAAU,eAA5D,2BAAyF,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,kBAG7K,0BAAQc,QAAUyC,EAAezE,MAAM,eAAekB,UAAU,eAAhE,iCAAmG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,qBAGvL,0BAAQc,QAAUyC,EAAezE,MAAM,gBAAgBkB,UAAU,eAAjE,8BAAiG,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,kBAGrL,0BAAQc,QAAUyC,EAAezE,MAAM,eAAekB,UAAU,eAAhE,6BAA+F,oBAAGc,QAAU,SAAAnC,GAAMA,EAAE6E,kBAAmB7E,EAAEC,OAAO8E,cAAcC,SAAW3D,UAAU,kCCrF1L4D,GAAS,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,gBAAiBZ,EAAY,EAAZA,MACrD,OACI,uBAAMnD,UAAU,eAAhB,SACI,yBAAQA,UAAY8D,EAAQnD,SAAWoD,EAAkBC,aAAeb,EAAxE,SAEQU,EAAQI,KAAK,SAAAC,GAAE,OAAI,0BAAmBpF,MAAQoF,EAA3B,UAAkCA,EAAlC,MAAcA,WCDxCC,GAAQ,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAEzC9J,EAAW8E,cAsBbiF,EAAqBH,EAMzB,YAJsBI,IAAjBH,IACDE,EAAqBH,EAAYK,MAAM,EAAEJ,IAIzC,qCACI,yBAAOrE,UAAU,yBAAjB,UACI,iCACI,gCACI,qBAAI0E,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAC3B,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAEvBA,EAAS,IAAM,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,KAG1CA,EAAS,IAAM,qBAAII,MAAM,MAAV,SAAkBJ,EAAS,UAItD,iCAEQC,EAAmBN,KAAK,SAAAhH,GAAG,OACvB,sBAAmB+C,UAAS,4BAAuC,YAAf/C,EAAI0H,OAAuB,UAAY,aAAgB7D,QAAU,SAAAnC,GAAC,OApCzH,SAAEA,EAAG1B,GACtB0B,EAAE6E,kBACF7E,EAAEwB,iBACF3F,EAAUkD,GAA0BT,IACpCzC,EAAUgI,GAAW,CACjBnI,KAAM4C,EAAI5C,KACVqI,KAAM,cA8BoIkC,CAAcjG,EAAG1B,IAA3I,UAEuB,YAAfA,EAAI0H,OACA,sBAAID,MAAM,MAAV,UAA+B,UAAbzH,EAAI5C,MAAoB,IAAO,IAAIwK,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAQC,OAAQhI,EAAIiI,eAAiBjI,EAAIkI,SAAWlI,EAAIiI,eAAiBjI,EAAIkI,aAC3L,qBAAIT,MAAM,MAAV,qBAGR,8BAAMzH,EAAImI,YAA2B,iBAAbnI,EAAI5C,KAA0B,iBAAmB4C,EAAI5C,QAExE4C,EAAIoI,WAAc,8BAAMpI,EAAIoI,YAG7BpI,EAAIqI,SAAW,8BAAMrI,EAAIqI,UAGzBrI,EAAIR,UAAY,gCAAMQ,EAAIR,UAAV,KAAwBQ,EAAIf,OAA5B,OACE,8BAAMe,EAAIf,SAEhC,8BAAM,IAAIiB,KAAMF,EAAIC,OAAQqI,wBAEvBtI,EAAIoI,WAAapI,EAAIqI,UAClB,8BACI,0BAAQtF,UAAU,aAAlB,UACmB,YAAf/C,EAAI0H,OAAuB,oBAAG3E,UAAU,wBACV,oBAAGA,UAAU,wBAF/C,SAQQ,YAAf/C,EAAI0H,QAA0C,qBAAlB1H,EAAImI,WAAqC,8BAClC,yBAAQpF,UAAU,aAAlB,SAA+B,oBAAGA,UAAU,eAAec,QAAU,SAAAnC,GAAC,OA7EtH,SAAEA,EAAG1B,GACrB0B,EAAE6E,kBACF7E,EAAEwB,iBACF3F,EAAUkD,GAA0BT,IACpCzC,EAAUgI,GAAW,CACjBnI,KAAM4C,EAAI5C,KACVqI,KAAM,YAuEiI8C,CAAa7G,EAAG1B,YA/B7HA,EAAIjD,eA+C1CmK,GAAMsB,aAAe,CACjBnB,SAAW,CAAC,WAAY,YAAa,SAAU,UCjG5C,IAAMoB,GAAoB,WAE7B,IAAMC,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCpH,mBAAUoH,GAAO,IAAIxI,MAAOyI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAQM1B,EAFWlB,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KAEiB+I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG9I,MAAM0I,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,MAAgC,aAAZ2L,EAAG3L,MAAmC,kBAAZ2L,EAAG3L,MAAwC,iBAAZ2L,EAAG3L,MAAuC,kBAAZ2L,EAAG3L,MAAwC,iBAAZ2L,EAAG3L,QAEhP,OACI,uCACI,eAAC,IAAD,CAAM8E,GAAG,IAAIa,UAAU,UAAvB,SACI,oBAAGA,UAAU,6BAEjB,uBAAKA,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ+D,gBAdI,SAAApF,GACpBmH,EAAcnH,EAAEC,OAAOE,QAa6B+E,QAAU8B,EAAQxC,MAAQ0C,IACtE,qBAAI7F,UAAU,sBAAd,mCACA,eAAC,GAAD,CAAOoE,YAAcA,IACrB,eAAC,GAAD,WCxBH6B,GAAgB,SAAC,GAAmC,IAAjC7L,EAAgC,EAAhCA,WAAY8L,EAAoB,EAApBA,cAElC1L,EAAW8E,cACT8D,EAAcF,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAAzCyJ,UAwBF+C,EAAiC,SAAEtM,GACrC,IAAIuM,EAAgB,EAEpB,OADAF,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcvL,KAAMoK,KAAK,SAAA+B,GAAE,OAAII,GAAiBC,SAAUL,EAAGb,aACpFiB,GAGL7C,EAAe,SAAE5E,EAAG2H,EAAWC,EAAavM,EAAIK,GAClDsE,EAAEwB,iBAEF3F,EAAUgI,GAAU,CAChBnI,KAAM,uBAEVG,EfsIJ,CACIQ,KAAM5B,GACN6B,QexImC,CAAEqL,YAAWC,cAAavM,KAAIK,WAIrE,OACI,sBAAK2F,UAAU,YAAYhG,GAAG,iCAA9B,SAEQI,EAAW6J,KAAK,SAAApK,GAAG,OACf,uBAAKmG,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhG,GAAG,4BAApC,SACI,0BAAQ8G,QAAU,SAACnC,GAAD,OA3CZ,SAACA,EAAG9E,GAE9B,GAAK8E,EAAE6H,UAAUC,SAAS,oBAAsB,CAEhD,IAAIC,EAAmBR,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcvL,KAAM4H,OAEzE9C,EAAE6H,UAAUG,OAAO,aACnBhI,EAAE+E,cAAckD,YAAYJ,UAAUG,OAAO,QAEzChI,EAAE+E,cAAckD,YAAYJ,UAAUC,SAAS,QAE/C9H,EAAE+E,cAAckD,YAAY7B,MAAM8B,OAAS,IAAOH,EAAmB,GAAM,KAG3E/H,EAAE+E,cAAckD,YAAY7B,MAAM8B,OAAS,OA6BFC,CAAuBnI,EAAEC,OAAQ/E,EAAIM,SAAW6F,UAAU,+EAA+EhF,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,OAAO,gBAAc,6BAA1R,UACMnB,EAAIM,OACN,uBAAM2G,QAAU,SAAAnC,GAAC,OAAIA,EAAEC,OAAO8E,cAAcC,SAAU3D,UAAS,gCAA0C,UAAbnG,EAAIQ,MAAqE,IAAjD8L,EAAgCtM,EAAIM,QAAmB,SAAW,IAAvH,OAA6I,YAAbN,EAAIQ,MAAuE,IAAjD8L,EAAgCtM,EAAIM,QAAmB,UAAY,IAA5R,SAAqS,IAAI0K,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQkB,EAAgCtM,EAAIM,WACpbiJ,GAAa,oBAAGtC,QAAU,SAAAnC,GAAC,OAAI4E,EAAc5E,EAAG9E,EAAIM,OAAQgM,EAAgCtM,EAAIM,QAAUN,EAAIG,GAAIH,EAAIQ,OAAQ2F,UAAU,sBAGlJ,sBAAKhG,GAAG,6BAA6BgG,UAAU,8BAA8B,kBAAgB,4BAA7F,SACI,sBAAKA,UAAU,iBAAf,SACI,eAAC,GAAD,CAAOoE,YAAa8B,EAAcH,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAcvL,EAAIM,kBAV1CN,EAAIM,cC5CjD4M,GAAmB,WAE5B,IAAMpB,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCpH,mBAAUoH,GAAO,IAAIxI,MAAOyI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMtL,EAAW8E,cAEjB0H,qBAAU,WACN,OAAO,WACHxM,EAAUc,SAEf,CAAEd,IAEL,IAIQwC,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACA5C,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WAEFgK,EAAcpH,EAAK+I,QAAQ,SAAAC,GAAE,OAAIL,EAAO,IAAIxI,KAAM6I,EAAG9I,OAAQ0I,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,MAAgC,aAAZ2L,EAAG3L,MAAmC,kBAAZ2L,EAAG3L,QAE3J4M,EAAoB7M,EAAWH,MAAM,SAACV,EAAEW,GAAH,OAASX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAE/E,OACI,uBAAK6F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ6D,QAAU8B,EAAQ5B,gBAbV,SAAApF,GACpBmH,EAAcnH,EAAEC,OAAOE,QAY2CqE,MAAQ0C,IACtE,6CACA,eAAC,GAAD,CAAezL,WAAa6M,EAAoBf,cAAgB9B,IAChE,eAAC,GAAD,CAASvB,oBAAqB,EAAOC,KAAK,mBCnCzCoE,GAAc,SAAEC,EAAOhE,EAAOiE,GAGvC,IAAMC,EAAO,CAAE,MAAO,MAAO,MAAO,MAAO,OACrCC,EAAO,CAAC,MAAO,MAAO,OAE5B,OAAOH,EAAMI,QAAQ,SAACC,EAAYC,GAG9B,GAAsB,IAAjBA,EAAOC,MAAa,CAErB,GAAKD,EAAOtN,SAAWgJ,EAInB,OAAOqE,GAFPC,EAASA,EAAOC,OAKpB,GAAKL,EAAKM,SAAUxE,IAAWmE,EAAKK,SAAUF,EAAOtN,QAGjD,OAAOqN,GADPC,EAASA,EAAOC,MAAQN,EAAMQ,MAAM,SAAAC,GAAG,OAAIA,EAAI1N,SAAJ,UAAmBgJ,EAAnB,YAA8BsE,EAAOtN,WAAWuN,OAI/F,GAAKL,EAAKM,SAAUF,EAAOtN,SAAYmN,EAAKK,SAAUxE,GAGlD,OAAOqE,GADPC,EAASA,EAAOC,MAAQN,EAAMQ,MAAM,SAAAC,GAAG,OAAIA,EAAI1N,SAAWsN,EAAOtN,OAAS,IAAMgJ,KAAQuE,OAKhG,OAAOF,EAAaC,EAAOC,QAE5B,IChCMI,GAA8B,SAAE9K,EAAMtB,EAASC,GAExD,IAAIoM,EAAyB,EAgB7B,OAdA/K,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,KAAMoK,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAG3L,QAAoB4J,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC7HnI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,KAAMoK,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,QAAkB4J,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC3HnI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,KAAMoK,QAAQ,SAAAC,GAAE,MAAgB,aAAZA,EAAG3L,QAAqB4J,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAC9HnI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,KAAMoK,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,QAAyB4J,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAClInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACzInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACvInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACzInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACvInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,QAAyB0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aACxInI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,QAAyB0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,KAAMsI,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAGtInI,EAAK+I,QAAO,SAAAC,GAAE,OAAItK,EAAQkM,MAAK,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWwB,KAAMC,WAAW+L,SAAU3B,EAAGZ,cAAcW,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,QAAkB4J,KAAK,SAAA+B,GAAE,OAAI+B,GAA0B1B,SAAUL,EAAGb,aAE7K,CACHhL,OAAQwB,EACR+L,MAAQK,IAIHC,GAAgC,SAAEhL,EAAMrB,EAAKsM,GAEtD,IAAIF,EAAyB,CACzB5N,OAAQwB,EACR+L,MAAO,GAOX,OAJA1K,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,kBAAbA,EAAI5C,MAA4B4C,EAAIgC,KAAK/C,SAAWP,GAAOsB,EAAIkC,GAAG1C,YAAcwL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAC9KnI,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,iBAAbA,EAAI5C,MAA2B4C,EAAIkC,GAAGjD,SAAWP,GAAOsB,EAAIgC,KAAKxC,YAAcwL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAC7KnI,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,YAAbA,EAAI5C,MAAqC,YAAf4C,EAAIf,QAAwBe,EAAIiL,kBAAoBvM,GAAOsB,EAAIR,YAAcwL,KAAkBhE,KAAK,SAAA+B,GAAE,OAAI+B,EAAuBL,OAASrB,SAAUL,EAAGb,aAE9L4C,GAIEI,GAA4B,SAAEnL,EAAMtB,EAASC,EAAKyL,GAE3D,IAAIgB,EAAY,GAiDhB,OA/CmB1M,EAAQkM,MAAK,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWwB,KAAMC,WAE/ChC,SAAS,SAAA+E,GAEhB,IAAI0J,EAAS,GACTH,EAAgB,GAChB9B,EAAgB,EAEpBpJ,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,GAAOqK,EAAGvJ,YAAckC,KAAIoH,QAAQ,SAAA9I,GAAG,MAAiB,YAAbA,EAAI5C,QAAqB4J,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC/InI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,GAAOqK,EAAGvJ,YAAckC,KAAIoH,QAAQ,SAAA9I,GAAG,MAAiB,UAAbA,EAAI5C,QAAmB4J,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC7InI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,GAAOqK,EAAGvJ,YAAckC,KAAIoH,QAAQ,SAAA9I,GAAG,MAAiB,aAAbA,EAAI5C,QAAsB4J,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAChJnI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAG9J,SAAWP,GAAOqK,EAAGvJ,YAAckC,KAAIoH,QAAQ,SAAA9I,GAAG,MAAiB,iBAAbA,EAAI5C,QAA0B4J,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aACpJnI,EAAK+I,QAAO,SAAAC,GAAE,OAAIA,EAAGZ,YAAczG,KAAIoH,QAAQ,SAAA9I,GAAG,MAAiB,UAAbA,EAAI5C,QAAmB4J,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aACxHnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA2B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,GAAOqK,EAAG/G,KAAKxC,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC9JnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA2B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,GAAOqK,EAAG7G,GAAG1C,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC1JnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA2B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,GAAOqK,EAAG/G,KAAKxC,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC9JnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,kBAAZA,EAAG3L,QAA2B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,GAAOqK,EAAG7G,GAAG1C,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC1JnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG/G,KAAK/C,SAAWP,GAAOqK,EAAG/G,KAAKxC,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAC7JnI,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,QAA0B0L,QAAQ,SAAAC,GAAE,OAAIA,EAAG7G,GAAGjD,SAAWP,GAAOqK,EAAG7G,GAAG1C,YAAckC,KAAIsF,KAAK,SAAA+B,GAAE,OAAII,GAAiBkC,WAAYtC,EAAGb,aAEzJnI,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,kBAAbA,EAAI5C,MAA4B4C,EAAIkC,GAAG1C,YAAckC,KAAIsF,KAAK,SAAAhH,GAAG,OAAIiL,EAAkBjL,EAAIiL,mBAC/GlL,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,kBAAbA,EAAI5C,MAA4B4C,EAAIkC,GAAG1C,YAAckC,KAAI/E,SAAS,SAAAqD,GAClFoL,EAAQvO,KAAK,CACTK,OAAQ8C,EAAIgC,KAAK/C,OACjBwL,MAAOtB,IAEXA,EAAgBc,GAAamB,EAAS,MAAOjB,MAEjDpK,EAAK+I,QAAQ,SAAA9I,GAAG,MAAiB,YAAbA,EAAI5C,MAAqC,YAAf4C,EAAIf,QAAwBe,EAAIR,YAAckC,KAAIsF,KAAK,SAAAhH,GAAG,OAAIiL,EAAkBjL,EAAIiL,mBAGzG,KAApBA,IACDA,EAAkBvM,GAET,YAARA,IACDuM,EAAkB,OAKtBE,EAAUtO,KAAK,CACX2C,UAAWkC,EACXwG,SAAUiB,EACV8B,uBAIDE,GAGEG,GAAqB,SAAEvL,EAAMtB,EAASyH,EAAOiE,GACtD,IAAIhB,EAAgB,GAChBoC,EAAuB,CAAErO,OAAQ,UAAWuN,MAAO,IA4BvD,OAxBAhM,EAAQ9B,SAAS,SAAA+B,GAEO,YAAfA,EAAIxB,OAELiM,EAActM,KAAMgO,GAA6B9K,EAAMtB,EAASC,EAAIxB,SAMnD,YAARwB,GAED6M,EAAqBd,MAAM5N,KAAMkO,GAA+BhL,EAAMrB,OAY/E,CAAC8M,aAJavB,GAAad,EAAejD,EAAOiE,GAIlCsB,aAHDxB,GAAasB,EAAqBd,MAAOvE,EAAOiE,KAM5DuB,GAA4B,SAAE3L,EAAMtB,EAASyH,EAAOiE,GAAW,IAAD,EAEnEoB,EAAuB,CAAErO,OAAQ,UAAWyB,WAAY,IAE5D,UAAAF,EAAQkM,MAAM,SAAAjM,GAAG,MAAmB,YAAfA,EAAIxB,iBAAzB,SAAiDyB,WAAWqI,KAAK,SAAA2E,GAE7D,IAAMnM,EAAY,CACdtC,OAAQyO,EACRlB,MAAO,IAQX,OALAhM,EAAQqK,QAAQ,SAAA7J,GAAM,MAAsB,YAAlBA,EAAO/B,UAAuBP,SAAS,SAAAoM,GAE7DvJ,EAAUiL,MAAM5N,KAAMkO,GAA+BhL,EAAMgJ,EAAG7L,OAAQyO,OAGnEJ,EAAqB5M,WAAW9B,KAAK2C,MAKhD,IAAIoM,EAA0B,EAM9B,OAJAL,EAAqB5M,WAAWhC,SAAS,SAAAgP,GACrCC,GAA2B3B,GAAa0B,EAAIlB,MAAOvE,EAAOiE,MAGvD,CAAEoB,uBAAsBK,4BCnJtBC,GAAO,SAAC,GAAyC,IAAvCV,EAAsC,EAAtCA,UAAWhF,EAA2B,EAA3BA,UAAW2F,EAAgB,EAAhBA,UAEnCvO,EAAW8E,cACjB,EAA4Bf,mBAAS,OAArC,mBAAOyK,EAAP,KAAeC,EAAf,KACQ7B,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MACApK,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACAtB,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QAgBFwN,EAAgC,SAACN,GAEnC,IAAIO,EAAQ,EAcZ,MAZ6B,YAAxBP,EAAIV,iBACLS,GAA2B3L,EAAMtB,EAASsN,EAAQ5B,GAAOoB,qBAAqB5M,WAAWhC,SAAS,SAAAoM,GACzFA,EAAG7L,SAAWyO,EAAInM,YACnB0M,EAAQjC,GAAalB,EAAG0B,MAAOsB,EAAQ5B,OAK7B,IAAjBwB,EAAIzD,WACLgE,EAAQjC,GAAY,CAAC,CAAE/M,OAAQyO,EAAIV,gBAAiBR,MAAQkB,EAAIzD,WAAa6D,EAAQ5B,IAGlF+B,GAIX,OACI,uBAAKnJ,UAAU,aAAf,UACI,eAAC,GAAD,CAAQ6D,QAAS,CAAC,MAAO,MAAO,MAAO,OAAQV,MAAQ6F,EAASjF,gBA3BnD,SAAApF,GACjBA,EAAEwB,iBACF8I,EAAWtK,EAAEC,OAAOE,UA0BhB,qBAAIkB,UAAU,aAAd,SAEQoI,EAAUnE,KAAK,SAAA+B,GAAE,OACb,sBAAyBhG,UAAU,oEAAnC,UACMgG,EAAGvJ,UACL,uBAAMuD,UAAS,gCAA4BgG,EAAGb,SAAW,EAAI,SAAU,IAAxD,OAA8Da,EAAGb,SAAW,EAAI,UAAW,IAA1G,SAAkH,IAAIN,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,MAAOoE,sBAAuB,IAAKnE,OAAQiE,EAA+BlD,MACvP5C,GAAa,oBAAGpD,UAAU,eAAec,QAAU,SAAAnC,GAAC,OA3CzD,SAAEA,EAAG0K,EAAclE,GACpCxG,EAAEwB,iBACF3F,EAAUgI,GAAU,CAChBnI,KAAM,uBAEVG,EAAUqC,GAAsB,CAAEkM,YAAWM,eAAclE,cAsCmB5B,CAAc5E,EAAGqH,EAAGvJ,UAAWuJ,EAAGb,eAHtFa,EAAGvJ,oBClDxB6M,GAAe,WAExB,IAAQtM,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACAoK,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MACR,EAA+BlE,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAlDA,EAAR,EAAQA,QAAS0H,EAAjB,EAAiBA,UAEX5I,EAAW8E,cAgCjB,OACI,sBAAKU,UAAU,2BAA2BhG,GAAG,iCAA7C,SAEQ0B,EAAQuI,KAAK,SAAAtI,GAAG,OACZ,uBAAKqE,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhG,GAAG,4BAApC,SACI,0BAAQ8G,QAAU,SAACnC,GAAD,OApCZ,SAACA,EAAGhD,GAE9B,GAAKgD,EAAE6H,UAAUC,SAAS,oBAAsB,CAE5C,IAAIC,EAAmBhL,EAAQkM,MAAK,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWwB,KAAMC,WAAW6F,OAEzE9C,EAAE6H,UAAUG,OAAO,aACnBhI,EAAE+E,cAAckD,YAAYJ,UAAUG,OAAO,QACzChI,EAAE+E,cAAckD,YAAYJ,UAAUC,SAAS,QAE/C9H,EAAE+E,cAAckD,YAAY7B,MAAM8B,OAAS,QAAU,GAAOH,EAAqB,aAEjF/H,EAAE+E,cAAckD,YAAY7B,MAAM8B,OAAS,OAwBNC,CAAuBnI,EAAEC,OAAQjD,EAAIxB,SAAW6F,UAAU,+EAA+EhF,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,OAAO,gBAAc,6BAA1R,UACqB,QAAfW,EAAIxB,OAAmB,UAAYwB,EAAIxB,OACzC,uBAAM2G,QAAU,SAAAnC,GAAC,OAAIA,EAAEC,OAAO8E,cAAcC,SAAU3D,UAAS,gCAA4B8H,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,MAAQ,EAAI,SAAU,IAA3G,OAAiHI,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,MAAQ,EAAI,UAAW,IAAhQ,SAAwQ,IAAI7C,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAuB,YAAftJ,EAAIxB,OAAuBwO,GAA2B3L,EAAMtB,EAAS,MAAO0L,GAAQyB,wBAA0Bf,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,SAC1hBtE,GAAa,oBAAGtC,QAAU,SAAAnC,GAAC,OArBpC,SAAEA,EAAGhD,EAAKwJ,GAC3BxG,EAAEwB,iBACF3F,EAAUgI,GAAU,CAChBnI,KAAM,oBAEVG,EAAUqC,GAAqB,6BACxBlB,GADuB,IAE1BwJ,eAcqD5B,CAAc5E,EAAGhD,EAAKmM,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,QAAU1H,UAAU,sBAI5I,sBAAKhG,GAAG,6BAA6BgG,UAAU,8BAA8B,kBAAgB,4BAA7F,SACI,sBAAKA,UAAU,iBAAf,SAEI,eAAC,GAAD,CAAMoI,UAAYD,GAA2BnL,EAAMtB,EAASC,EAAIxB,OAAQiN,GAAUhE,UAAYA,EAAY2F,UAAYpN,EAAIxB,eAZhGwB,EAAIxB,cC1CjDoP,GAAgB,WAEzB,IAAQvM,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACAtB,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACFlB,EAAW8E,cAEjB0H,qBAAU,WACN,OAAO,WACHxM,EAAUkC,SAEhB,CAAElC,IAEJ,IAAMgP,EAAmBxM,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,QAEzCoP,EAAgB/N,EAAQuI,KAAK,SAAA+B,GAAE,OAAIA,EAAG7L,UAE5C,OACI,uBAAK6F,UAAU,iBAAf,UACI,0CACA,eAAC,GAAD,CAAcyJ,cAAgBA,EAAgBvD,cAAgBsD,IAC9D,eAAC,GAAD,CAAS3G,oBAAqB,EAAOC,KAAK,gBC3BzC4G,GAAqB,WAC9B,OACI,iCACI,+DACA,sBAAK1J,UAAU,uBAAf,SACI,gCAAeA,UAAU,YAAYmB,IAAI,4DAA6DwI,WAAW,cAAeC,MAAM,IAAK7E,MAAO,CAAC8E,SAAU,QAASC,UAAW,SAAWC,MAAI,EAACC,UAAQ,UCC5MC,GAAe,WAExB,IAAMtE,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCpH,mBAAUoH,GAAO,IAAIxI,MAAOyI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAMQ9I,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACA5C,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WAEF8P,EAAclN,EAAK+I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG9I,MAAM0I,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,QAE7F8P,EAAmB/P,EAAW2L,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,QAAmBJ,MAAM,SAAEV,EAAEW,GAAJ,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAEpH,OACI,uBAAK6F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ6D,QAAU8B,EAAQ5B,gBAbV,SAAApF,GACpBmH,EAAcnH,EAAEC,OAAOE,QAY2CqE,MAAQ0C,IACtE,yCACA,eAAC,GAAD,CAAezL,WAAa+P,EAAmBjE,cAAgBgE,IAC/D,eAAC,GAAD,QCzBCE,GAAW,SAAC,GAAqB,IAAnBhG,EAAkB,EAAlBA,YAGvB,OACI,2BAASpE,UAAU,gBAAnB,UAEA,sDAEA,eAAC,GAAD,CAAOoE,YAAcA,EAAcC,aAAe,QCP7CgG,GAAc,SAAC,GAAmB,IAAhB3O,EAAe,EAAfA,QAEnBsB,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACAoK,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MAER,OACI,+BAEQ1L,EAAQuI,KAAK,SAAAtI,GAAG,OAEXmM,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,MAAQ,GAE9D,qBAAG1H,UAAU,oBAAb,UAAsDrE,EAAIxB,OAA1D,IAAmE,+BAAK,IAAI0K,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAuB,YAAftJ,EAAIxB,OAAuBwO,GAA2B3L,EAAMtB,EAAS,MAAO0L,GAAQyB,wBAA0Bf,GAA6B9K,EAAMtB,EAASC,EAAIxB,QAASuN,OAAzR,IAAoT,YAAf/L,EAAIxB,QAAwB,WAA7VwB,EAAIxB,cCRtDmQ,GAAiB,WAE1B,MAA0B/L,mBAAS,OAAnC,mBAAO4E,EAAP,KAAcoH,EAAd,KACA,EAAkBrH,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,EAAR,EAAQA,MAQR,EAAiBlE,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,EAAR,EAAQA,KACR,EAAoBkG,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,EAAR,EAAQA,QAGR,OACI,uBAAKsE,UAAU,mBAAf,UACI,eAAC,GAAD,CAAQ6D,QAAU,CAAC,MAAO,MAAO,MAAO,OAASC,MAAM,YAAYC,gBAVtD,SAAEpF,GACnB4L,EAAU5L,EAAEC,OAAOE,UAUf,uBAAKkB,UAAU,uBAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,mCAASmD,EAAT,OACA,oCAAO,IAAI0B,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQsD,GAAoBvL,EAAMtB,EAASyH,EAAOiE,GAAQqB,aAAeE,GAA2B3L,EAAMtB,EAASyH,EAAOiE,GAAQyB,+BAElP,eAAC,GAAD,CAAanN,QAAUA,WCxB1B8O,GAAa,WAEtB,IACMpG,EADWlB,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACiB+I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,MAAgC,aAAZ2L,EAAG3L,MAAmC,kBAAZ2L,EAAG3L,MAAwC,iBAAZ2L,EAAG3L,MAAuC,kBAAZ2L,EAAG3L,MAAwC,iBAAZ2L,EAAG3L,QAEvL,OACI,uBAAK2F,UAAU,iBAAf,UACI,eAAC,GAAD,IACA,eAAC,GAAD,CAAUoE,YAAcA,IAEpBA,EAAY3C,OAAS,GAEjB,eAAC,IAAD,CAAMtC,GAAG,eAAesL,QAAQ,GAAGzK,UAAU,UAA7C,iCAKR,eAAC,GAAD,QCjBC0K,GAAiB,WAE1B,IAAM/E,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCpH,mBAAUoH,GAAO,IAAIxI,MAAOyI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAMQ9I,EAASkG,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KACA5C,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WAEFuQ,EAAgB3N,EAAK+I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG9I,MAAM0I,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAG3L,QAE/FuQ,EAAqBxQ,EAAW2L,QAAQ,SAAAC,GAAE,MAAgB,YAAZA,EAAG3L,QAAqBJ,MAAM,SAAEV,EAAEW,GAAJ,OAAWX,EAAEY,OAASD,EAAEC,OAAS,GAAK,KAExH,OACI,uBAAK6F,UAAU,iBAAf,UACI,eAAC,GAAD,CAAQ6D,QAAU8B,EAAQ5B,gBAbV,SAAApF,GACpBmH,EAAcnH,EAAEC,OAAOE,QAY2CqE,MAAQ0C,IACtE,2CACA,eAAC,GAAD,CAAeK,cAAgByE,EAAgBvQ,WAAawQ,IAC5D,eAAC,GAAD,QCvBCC,GAAqB,SAAC,GAAmB,IAAjBzC,EAAgB,EAAhBA,UAE3B5N,EAAW8E,cAsBjB,OACI,sBAAKU,UAAU,aAAf,SACI,yBAAOA,UAAU,yBAAjB,UACI,iCACI,gCACI,qBAAI0E,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,gBACA,qBAAIA,MAAM,QACV,qBAAIA,MAAM,MAAV,eACA,qBAAIA,MAAM,MAAV,wBAGR,iCAEQ0D,EAAUnE,KAAK,SAAAhH,GAAG,OACd,sBAAmB+C,UAAU,oBAAoBc,QAAU,SAAAnC,GAAC,OAzB/D,SAAEA,EAAG1B,GACtB0B,EAAE6E,kBACF7E,EAAEwB,iBACF3F,EAAUkD,GAA0BT,IACpCzC,EAAUgI,GAAW,CACjBnI,KAAM4C,EAAI5C,KACVqI,KAAM,cAmB0EkC,CAAcjG,EAAG1B,IAAjF,UACI,qBAAIyH,MAAM,MAAV,SAAkB,IAAIG,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAwCC,OAAQoB,SAAUpJ,EAAIkI,aAC7I,oCAAOlI,EAAIgC,KAAKxC,UAAhB,KAA+BQ,EAAIgC,KAAK/C,OAAxC,OACA,8BAAI,oBAAG8D,UAAU,wBACjB,oCAAO/C,EAAIkC,GAAG1C,UAAd,KAA6BQ,EAAIkC,GAAGjD,OAApC,OACA,8BAAMe,EAAIC,MAAMqI,uBAChB,8BAAI,yBAAQvF,UAAU,aAAlB,SAA+B,oBAAGA,UAAU,eAAec,QAAU,SAAAnC,GAAC,OAzClF,SAAEA,EAAG1B,GACrB0B,EAAE6E,kBACF7E,EAAEwB,iBACF3F,EAAUkD,GAA0BT,IACpCzC,EAAUgI,GAAW,CACjBnI,KAAM4C,EAAI5C,KACVqI,KAAM,YAmC6F8C,CAAa7G,EAAG1B,YANzFA,EAAIjD,eCrC7B8Q,GAAuB,SAAC,GAAc,IAAZzQ,EAAW,EAAXA,KAE7BsL,EAAQ,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAU,YAAY,aAC7H,EAAkCpH,mBAAUoH,GAAO,IAAIxI,MAAOyI,aAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KAQMiF,EAFW7H,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KAEoB+I,QAAQ,SAAAC,GAAE,OAAIL,EAAMK,EAAG9I,MAAM0I,cAAgBC,KAAYE,QAAQ,SAAAC,GAAE,OAAIA,EAAG3L,OAASA,KAG/G,OACI,uBAAK2F,UAAU,+BAAf,UACI,eAAC,GAAD,CAAQ6D,QAAU8B,EAAQ5B,gBAXV,SAAApF,GACpBmH,EAAcnH,EAAEC,OAAOE,QAU2CqE,MAAQ0C,IAC3D,kBAATxL,GAA4B,iDACnB,kBAATA,GAA4B,0CACnB,iBAATA,GAA2B,yCAC7B,eAAC,GAAD,CAAoB+N,UAAY2C,IAChC,eAAC,GAAD,QCvBCC,GAAe,WAExB,IAEMC,EAFW/H,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KAEY+I,QAAQ,SAAAC,GAAE,MAAgB,UAAZA,EAAG3L,MAAgC,aAAZ2L,EAAG3L,QAE5D,OACI,uBAAK2F,UAAU,iBAAf,UACI,yCACA,eAAC,GAAD,CAAOoE,YAAc6G,EAAS3G,SAAU,CAAC,WAAY,SAAS,UAAW,SAAU,QAAS,YAC5F,eAAC,GAAD,QCVC4G,GAAsB,WAE/B,IAEMC,EAFWjI,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAApCA,KAEmB+I,QAAQ,SAAAC,GAAE,MAAgB,iBAAZA,EAAG3L,MAAuC,oBAAZ2L,EAAG3L,QAE1E,OACI,uBAAK2F,UAAU,iBAAf,UACI,kDACA,eAAC,GAAD,CAAOoE,YAAc+G,EAAgB7G,SAAU,CAAC,WAAY,SAAS,WAAY,SAAU,QAAS,YACpG,eAAC,GAAD,QCZC8G,GAAU,uCAAG,WAAMvD,GAAN,mBAAAtO,EAAA,4DAEV,yCAFU,SAIH8R,MAFP,yCAEoBxD,EAAK,CACjCyD,OAAO,CACH,eAAgB,sBANF,cAIhBC,EAJgB,gBAUAA,EAAKC,OAVL,uBAUdC,EAVc,EAUdA,IAVc,kBAYfA,GAZe,2CAAH,sDCkBVC,GAAS,WAElB,IAAMlR,EAAW8E,cACTT,EAASqE,aAAY,SAAAC,GAAK,OAAIA,EAAMzI,QAApCmE,KAERmI,qBAAU,WAEN,IAAM2E,EAAwB,uCAAG,oCAAApS,EAAA,sEAEP6R,GAAY,WAFL,cAEvBQ,EAFuB,gBAGPR,GAAY,WAHL,cAGvBS,EAHuB,gBAIPT,GAAY,WAJL,cAIvBU,EAJuB,iBAKPV,GAAY,WALL,eAKvBW,EALuB,iBAMPX,GAAY,WANL,eAMvBY,EANuB,yBAQtB,CACH,CACI7R,OAAQ,UACRuN,MAAOkE,GACT,CACEzR,OAAQ,UACRuN,MAAOmE,GACT,CACE1R,OAAQ,UACRuN,MAAOoE,GACT,CACE3R,OAAQ,UACRuN,MAAOqE,GACT,CACE5R,OAAQ,UACRuN,MAAOsE,KAvBc,4CAAH,qDA4B9BL,IAA2BM,MAAM,SAAAtN,GAAC,OAAInE,ECnDpC,CACFQ,KAAM5B,GACN6B,QDiDmE0D,SAEpE,CAAEnE,IAGL,IAAM0R,EAAOC,mBACPC,EAAQD,mBAQRE,EAAc,WAChBH,EAAKI,QAAQvH,MAAMwH,UAAW,qBAC9BH,EAAME,QAAQvH,MAAMyH,OAAS,KAC7BJ,EAAME,QAAQvH,MAAM0H,QAAU,KAQlC,OACI,uBAAKzM,UAAU,eAAf,UAEI,0BAAQA,UAAU,iBAAlB,UACI,yBAAQc,QArBD,WACfoL,EAAKI,QAAQvH,MAAMwH,UAAW,kBAC9BH,EAAME,QAAQvH,MAAMyH,OAAS,IAC7BJ,EAAME,QAAQvH,MAAM0H,QAAU,KAkBtB,SAA+B,oBAAGzM,UAAU,iBAC5C,oDAGJ,uBAAK0M,IAAMR,EAAOlM,UAAS,eAA3B,UACI,gCACI,qBAAIA,UAAU,cAAd,SACI,qBAAIA,UAAU,cAAd,SAA8BnB,MAElC,8BACI,gBAAC,IAAD,CAAMM,GAAG,IAAI2B,QAAUuL,EAAvB,UACI,oBAAGrM,UAAU,gBADjB,YAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,cAAc2B,QAAUuL,EAAjC,UACI,oBAAGrM,UAAU,oBADjB,kBAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,YAAY2B,QAAUuL,EAA/B,UACI,oBAAGrM,UAAU,yBADjB,gBAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,UAAU2B,QAAUuL,EAA7B,UACI,oBAAGrM,UAAU,2BADjB,cAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,UAAU2B,QAAUuL,EAA7B,UACA,oBAAGrM,UAAU,eADb,cAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,mBAAmB2B,QAAUuL,EAAtC,UACA,oBAAGrM,UAAU,kBADb,uBAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,kBAAkB2B,QAAUuL,EAArC,UACI,oBAAGrM,UAAU,2BADjB,sBAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,WAAW2B,QAAUuL,EAA9B,UACI,oBAAGrM,UAAU,iBADjB,eAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,gBAAgB2B,QAAUuL,EAAnC,UACI,oBAAGrM,UAAU,oBADjB,oBAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,WAAW2B,QAAUuL,EAA9B,UACA,oBAAGrM,UAAU,eADb,eAIJ,8BACI,gBAAC,IAAD,CAAMb,GAAG,UAAU2B,QAAUuL,EAA7B,UACA,oBAAGrM,UAAU,qBADb,iBAKR,8BACI,8BACI,gBAAC,IAAD,CAAMb,GAAG,SAAS2B,QA5EjB,SAAAnC,GACjBA,EAAEwB,iBACF3F,E7B7CJ,uCAAQ,WAAMA,GAAN,eAAAjB,EAAA,6DACEmB,EAAO0F,cADT,SAEEuM,YAASjS,GAFX,OAGJF,EAAU4D,MACV5D,EDkOJ,CACIQ,KAAM5B,IClONoB,EHoMJ,CACIQ,KAAM5B,IGpMNoB,ELyJJ,CACIQ,KAAM5B,KKhKF,2CAAR,wD6BuH+D4G,UAAU,SAArD,UACI,oBAAGA,UAAU,4BADjB,mBAOZ,2BAASc,QAAUuL,EAAcrM,UAAU,oBAA3C,UACI,sBAAKA,UAAU,gBAAgB0M,IAAMN,IAErC,sBAAKpM,UAAU,gBAAf,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO4M,KAAK,IAAInC,QAAU,eAAC,GAAD,MAC1B,eAAC,IAAD,CAAOmC,KAAK,cAAcnC,QAAU,eAAC,GAAD,MACpC,eAAC,IAAD,CAAOmC,KAAK,YAAYnC,QAAU,eAAC,GAAD,MAClC,eAAC,IAAD,CAAOmC,KAAK,UAAUnC,QAAU,eAAC,GAAD,MAChC,eAAC,IAAD,CAAOmC,KAAK,kBAAkBnC,QAAU,eAAC,GAAD,CAAsBpQ,KAAO,oBACrE,eAAC,IAAD,CAAOuS,KAAK,gBAAgBnC,QAAU,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOmC,KAAK,WAAWnC,QAAU,eAAC,GAAD,MACjC,eAAC,IAAD,CAAOmC,KAAK,eAAenC,QAAU,eAAC,GAAD,MACrC,eAAC,IAAD,CAAOmC,KAAK,UAAUnC,QAAU,eAAC,GAAD,MAChC,eAAC,IAAD,CAAOmC,KAAK,mBAAmBnC,QAAU,eAAC,GAAD,MACzC,eAAC,IAAD,CAAOmC,KAAK,WAAWnC,QAAU,eAAC,GAAD,CAAsBpQ,KAAM,oBAC7D,eAAC,IAAD,CAAOuS,KAAK,UAAUnC,QAAU,eAAC,GAAD,CAAsBpQ,KAAM,mBAC5D,eAAC,IAAD,CAAOuS,KAAK,IAAInC,QAAU,eAAC,IAAD,CAAUtL,GAAG,oBE3KlD0N,GAAe,WAExB,IAAMrS,EAAW8E,cAETwN,EAAa5J,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAAxC8P,UAEA3H,EAAmH2H,EAAnH3H,SAAUD,EAAyG4H,EAAzG5H,eAAgBE,EAAyF0H,EAAzF1H,UAAWC,EAA8EyH,EAA9EzH,UAAWnJ,EAAmE4Q,EAAnE5Q,OAAQgB,EAA2D4P,EAA3D5P,MAAO6P,EAAoDD,EAApDC,YAAapI,EAAuCmI,EAAvCnI,OAAQqI,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,cAAeC,EAAQJ,EAARI,IASnH,OACI,uBAAKlN,UAAU,gBAAf,UACI,gDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,6CAEV,0CAAW,gCAAQ9C,EAAMqI,0BAEzB,mDAAoB,uCAAUJ,QAE9B,qDAAsB,uCAAUD,QAEhC,sDAAuB,uCAAUC,EAAWD,QAE5C,8CAAe,gCAAQG,OAEvB,2CAAY,gCAAQnJ,OAEpB,2CAAY,gCAAQkJ,OAEpB,oDAAqB,sCAAS6H,EAAT,IAA2BD,QAE9CE,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMtO,OAAO,SAASwO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,OAEzB,2CAAY,gCAAQpI,UAKL,cAAXA,GAA0B,yBAAQ7D,QAvCxB,SAAAnC,GACtBA,EAAEwB,iBACF3F,EAAUgI,GAAW,CACjBnI,KAAM,mBAoCkE2F,UAAU,mBAAhD,8B,6BCnDxCqN,GAAsB,SAAAC,GAExB,GAAKA,EAAQ,CAIT,IAFAA,EAAQA,EAAMC,YAEH5F,SAAS,UAChB,OAAO,EAGX,IAAI,IAAJ,MAP2B,CAAC,IAAK,IAAK,IAAK,IAAK,UAOhD,eAA0C,CAArC,IAAI6F,EAAQ,KACb,GAAKF,EAAM3F,SAAU6F,GACjB,OAAO,EAIf,OAAO,IAKFC,GAAc,SAAAC,GAAQ,IAAD,sDAE9B,MAAqB,kBAATA,IACHA,EAAKjM,OAAS,GAAc,KAATiM,GAAwB,MAATA,GAAgBL,GAAqBK,IAClE,CACFC,IAAI,EACJC,IAAK,mBAKZF,EAAKxQ,MAAQC,KAAK0Q,MACZ,CACHF,IAAI,EACJC,IAAK,kDAGR,UAAAF,EAAKxR,cAAL,eAAauF,QAAS,GAAqB,KAAhBiM,EAAKxR,QAAiC,MAAhBwR,EAAKxR,QAAkBmR,GAAqBK,EAAKxR,QAC5F,CACHyR,IAAI,EACJC,IAAK,gCAGY,KAArBF,EAAK1R,cAAuB8R,MAAOJ,EAAK1R,eAAiB,UAAA0R,EAAK1R,mBAAL,eAAkByF,QAAS,GAAK4L,GAAqBK,EAAK1R,aAC7G,CACF2R,IAAI,EACJC,IAAK,uCAGR,UAAAF,EAAKzO,YAAL,eAAW/C,OAAOuF,QAAS,GAA2B,MAAtB,UAAAiM,EAAKzO,YAAL,eAAW/C,SAAuC,OAAtB,UAAAwR,EAAKzO,YAAL,eAAW/C,SAAkBmR,GAAmB,UAAEK,EAAKzO,YAAP,aAAE,EAAW/C,QACnH,CACHyR,IAAI,EACJC,IAAK,2CAGR,UAAAF,EAAKvO,UAAL,eAASjD,OAAOuF,QAAS,GAAyB,MAApB,UAAAiM,EAAKvO,UAAL,eAASjD,SAAqC,OAApB,UAAAwR,EAAKvO,UAAL,eAASjD,SAAkBmR,GAAmB,UAAEK,EAAKvO,UAAP,aAAE,EAASjD,QAC3G,CACHyR,IAAI,EACJC,IAAK,6CAGR,UAAAF,EAAKjR,iBAAL,eAAgBgF,QAAS,GAAwB,KAAnBiM,EAAKjR,WAAuC,MAAnBiR,EAAKjR,WAAqB4Q,GAAqBK,EAAKjR,WACrG,CACHkR,IAAI,EACJC,IAAK,mCAGe,KAAxBF,EAAKK,iBAA0BD,MAAOJ,EAAKK,kBAAoB,UAAAL,EAAKK,sBAAL,eAAqBtM,QAAS,GAAK4L,GAAqBK,EAAKK,gBACtH,CACFJ,IAAI,EACJC,IAAK,0CAGR,UAAAF,EAAKzO,YAAL,eAAWxC,UAAUgF,QAAS,GAA8B,MAAzB,UAAAiM,EAAKzO,YAAL,eAAWxC,YAA6C,OAAzB,UAAAiR,EAAKzO,YAAL,eAAWxC,YAAqB4Q,GAAmB,UAAEK,EAAKzO,YAAP,aAAE,EAAW/C,QAC5H,CACHyR,IAAI,EACJC,IAAK,8CAGR,UAAAF,EAAKvO,UAAL,eAAS1C,UAAUgF,QAAS,GAA4B,MAAvB,UAAAiM,EAAKvO,UAAL,eAAS1C,YAA2C,OAAvB,UAAAiR,EAAKvO,UAAL,eAAS1C,YAAqB4Q,GAAmB,UAAEK,EAAKvO,UAAP,aAAE,EAASjD,QACpH,CACHyR,IAAI,EACJC,IAAK,+CAGW,KAAnBF,EAAKrI,YAAqByI,MAAOJ,EAAKrI,aAAe,UAAAqI,EAAKrI,iBAAL,eAAgB5D,QAAS,GAAK4L,GAAqBK,EAAKrI,WACvG,CACHsI,IAAI,EACJC,IAAK,kCAGS,KAAjBF,EAAKpI,UAAmBwI,MAAOJ,EAAKpI,WAAa,UAAAoI,EAAKpI,eAAL,eAAc7D,QAAS,GAAK4L,GAAqBK,EAAKpI,SACjG,CACHqI,IAAI,EACJC,IAAK,iCAGR,UAAAF,EAAKtI,iBAAL,eAAgB3D,QAAS,GAAwB,KAAnBiM,EAAKtI,WAAuC,MAAnBsI,EAAKtI,WAAqBiI,GAAqBK,EAAKtI,WACrG,CACHuI,IAAI,EACJC,IAAK,oCAGR,UAAAF,EAAKvT,cAAL,eAAasH,QAAS,GAAqB,KAAhBiM,EAAKvT,QAAiC,MAAhBuT,EAAKvT,QAAkBkT,GAAqBK,EAAKvT,QAC5F,CACHwT,IAAI,EACJC,IAAK,mDAGR,UAAAF,EAAKpT,cAAL,eAAamH,QAAS,GAAqB,KAAhBiM,EAAKpT,QAAiC,MAAhBoT,EAAKpT,QAAkB+S,GAAqBK,EAAKpT,QAC5F,CACHqT,IAAI,EACJC,IAAK,oDAGWpJ,IAAlBkJ,EAAKvI,WAA4BuI,EAAKvI,UAAY,GAAuB,KAAlBuI,EAAKvI,UAAqC,MAAlBuI,EAAKvI,UAAoB2I,MAAOJ,EAAKvI,WAAckI,GAAqBK,EAAKvI,WACvJ,CACHwI,IAAI,EACJC,IAAK,iDAGRP,GAAqBK,EAAKX,aACpB,CACHY,IAAI,EACJC,IAAK,iEAGgB,KAAxBF,EAAKM,iBAA0BF,MAAOJ,EAAKM,kBAAoB,UAAAN,EAAKM,sBAAL,eAAqBvM,QAAS,GAAK4L,GAAqBK,EAAKM,gBACvH,CACFL,IAAI,EACJC,IAAK,uDAGepJ,IAAtBkJ,EAAKO,eAAgCP,EAAKO,cAAgB,GAA2B,KAAtBP,EAAKO,cAA6C,MAAtBP,EAAKO,cAAwBH,MAAOJ,EAAKO,eAAkBZ,GAAqBK,EAAKO,eAC3K,CACHN,IAAI,EACJC,IAAK,gEAGiBpJ,IAAxBkJ,EAAKQ,iBAAkCR,EAAKQ,gBAAkB,GAA6B,KAAxBR,EAAKQ,gBAAiD,MAAxBR,EAAKQ,gBAA0BJ,MAAOJ,EAAKQ,iBAAoBb,GAAqBK,EAAKQ,iBACrL,CACHP,IAAI,EACJC,IAAK,sDAGSpJ,IAAhBkJ,EAAKV,SAA0BU,EAAKV,QAAU,GAAqB,KAAhBU,EAAKV,QAAiC,MAAhBU,EAAKV,QAAkBc,MAAOJ,EAAKV,SAAYK,GAAqBK,EAAKV,SAC7I,CACHW,IAAI,EACJC,IAAK,4DAGR,UAAAF,EAAKxF,uBAAL,eAAsBzG,QAAS,GAA8B,KAAzBiM,EAAKxF,iBAAmD,MAAzBwF,EAAKxF,iBAA2BmF,GAAqBK,EAAKxF,iBACvH,CACHyF,IAAI,EACJC,IAAK,kDAIN,CACHD,IAAI,IC9JCQ,GAAmB,SAAE9T,GAE9B,MAA4B6I,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAA/CA,EAAR,EAAQA,KAAM8P,EAAd,EAAcA,UACNrK,EAAcS,aAAY,SAAAC,GAAK,OAAIA,EAAMiL,UAAzC3L,UACArI,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WACAsB,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QAEF8N,EAAmBxM,EAAK+I,QAAQ,SAAAC,GAAE,MAAgB,aAAZA,EAAG3L,MAAmC,kBAAZ2L,EAAG3L,MAAwC,UAAZ2L,EAAG3L,QAElGoP,EAAgB/N,EAAQuI,KAAK,SAAA+B,GAAE,OAAIA,EAAG7L,UAExCkU,EAAmB,GAKvB,OAJOA,EAAPhU,EAA0BD,EAAW2L,QAAQ,SAAAC,GAAE,OAAIA,EAAG3L,OAASA,KAAO4J,KAAK,SAAA+B,GAAE,OAAIA,EAAG7L,UAASF,OACnEG,EAAW2L,QAAQ,SAAAC,GAAE,OAAIA,EAAG3L,OAASoI,KAAYwB,KAAK,SAAA+B,GAAE,OAAIA,EAAG7L,UAASF,OAG3F,CACH+C,OACA8P,YACArK,YACA+G,mBACA9N,UACA+N,gBACA4E,qBCvBKC,GAAU,uCAAG,WAAQC,GAAR,mBAAAhV,EAAA,4DAEL,oDACXiV,EAAW,IAAIC,UACZC,OAAO,gBAAiB,kBACjCF,EAASE,OAAO,OAAQH,GALF,kBAQClD,MANN,mDAMuB,CAChCsD,OAAQ,OACRC,KAAMJ,IAVQ,YAQZjD,EARY,QAaRoC,GAbQ,kCAcUpC,EAAKC,OAdf,eAcRqD,EAdQ,yBAePA,EAAUC,YAfH,yBAiBFvD,EAAKC,OAjBH,+EAoBlB3Q,QAAQC,IAAR,MApBkB,0DAAH,sDCCViU,GAAa,SAAC,GAA6C,IAA3CvQ,EAA0C,EAA1CA,WAAYwQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAE1CC,EAAY/C,kBAAQ,GAE1BnF,qBAAU,WACN,OAAO,WACHkI,EAAU5C,SAAU,KAEzB,IAEH,MAAgD/N,mBAAUC,EAAW0O,KAArE,mBAAOiC,EAAP,KAAyBC,EAAzB,KACMC,EAAclD,mBAOdmD,EAAuB,uCAAI,WAAM3Q,GAAN,eAAApF,EAAA,yDAC7BoF,EAAEwB,iBAE6B,IAA1BxB,EAAEC,OAAO2Q,MAAM9N,OAHS,gBAIzB2N,GAAqB,GAJI,8BAMzBH,GAAc,GANW,SAOPX,GAAY3P,EAAEC,OAAO2Q,MAAM,IAPpB,OAOnBrC,EAPmB,OAQpBgC,EAAU5C,UACX9N,EAAW0O,IAAMA,EACjBkC,GAAqB,GACrBH,GAAc,IAXO,4CAAJ,sDAgB7B,OACI,uBAAKjP,UAAU,iBAAf,UACI,wBAAO0M,IAAM2C,EAAcG,UAAU,EAAO7O,SAAW2O,EAA0BtU,KAAK,OAAO6D,KAAK,UAAU7E,GAAG,UAAUyV,OAAO,4BAChI,yBAAQzP,UAAS,cAAUmP,EAAmB,QAAU,IAAMrO,QAxB3C,SAAAnC,GACvBA,EAAEwB,iBACFkP,EAAY/C,QAAQ3I,SAsBhB,SACEwL,EACM,+DACyB,oBAAGnP,UAAU,gCAEtC,8DACwB,oBAAGA,UAAU,qCAI3CgP,GAAa,iDCtCdU,GAAQ,SAAC,GAAqB,IAAnBrD,EAAkB,EAAlBA,YAEd7R,EAAW8E,cACjB,EAAkCf,oBAAS,GAA3C,mBAAOyQ,EAAP,KAAkBC,EAAlB,KACA,EAA8B1Q,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAAsCrR,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB6T,EAApB,KACA,EAA4CtR,mBAAS,CACjDpE,OAAQ,GACRG,OAAQ,KAFZ,mBAAO0T,EAAP,KAAuB8B,EAAvB,KAIA,EAAsCvR,mBAAS,IAA/C,mBAAOwR,EAAP,KAAoBC,EAApB,KAEA,EAAgE7B,GAAkB,SAA1ErB,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,cAAe4E,EAAlC,EAAkCA,iBAAkB3S,EAApD,EAAoDA,QAEpD,EAA2D2C,GAASyO,GAAwB,CACxF5P,MAAOC,KAAK0Q,MACZ3R,OAAQuN,EAAc,GACtBpE,UAAW,GACXhL,KAAM,QACN+K,UAAWiJ,EAAiB,GAC5BlJ,SAAU,EACVD,eAAgB,EAChB8H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbpI,OAAQ,cAXZ,mBAAQnG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KA+FA,OACI,wBAAMkB,SAlFW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM8P,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,OAA0B,CACrC,IAAM+T,EAAWxC,GAAazR,GAC9B,IAAMiU,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAWtC,OAASF,EACpBxB,EAAUuB,GAAoB,CAC1B5B,OAAQ6B,EACRJ,WAAY,MAKpB,GAA6B,mBAAzB4C,EAAW4G,UAAgC,CAC3C,IAAM6K,EAAWxC,GAAaO,GAC9B,IAAMiC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW4G,UAAY4I,EAAe7T,OAEtCK,EAAUU,GAAsB,CAC5Bf,OAAQ6T,EAAe7T,OACvBE,KAAM,QACNC,OAAQ0T,EAAe1T,UAK/B,GAA8B,gBAAzBkE,EAAW4G,UAA8B,CAC1C,IAAM6K,EAAWxC,GAAasC,GAC9B,IAAME,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW4G,UAAY2K,EAEvBvV,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,MAAmB,YAAfA,EAAIxB,UAAuBH,GACpDG,OAAQ,UACRyB,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAG7L,UAAuByB,YAArD,CAAiEmU,OAI9EjD,GACDtS,EAAUoD,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/DlG,EAAU4C,GAAqB,6BACxBoB,GADuB,IAE1BxE,GAAImD,KAAK0Q,QACT,eACJpN,IAAKC,KAAK,cAAe,kCAAmC,YAEhE2L,EAAY1N,QA5DRiR,EAAYK,EAASrC,MA4EzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAH,gBAEX6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE5C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMkR,EAAgBlR,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGjK,uBAAKZ,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOhF,KAAK,OAAO6D,KAAK,YAAYC,MAAQN,EAAW6G,UAAY1E,SAAWjC,EAAekC,YAAY,8BAGjH,uBAAKZ,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW4G,UAAYzE,SAAWjC,EAAesB,UAAqC,mBAAzBxB,EAAW4G,UAAiC,WAAa,GAAvJ,UACI,4BAAU+K,MAAM,aAAhB,UAEQ9B,EAAiBpK,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAAKwJ,UAAW,EAA3C,SAAqDxJ,GAAvCA,MAE9C,yBAAQlH,MAAM,iBAAd,mCAEJ,4BAAUqR,MAAM,UAAhB,UAEQzU,EAAQkM,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAG7L,UAAsByB,WAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAErF,yBAAQlH,MAAM,cAAd,0CAIqB,mBAAzBN,EAAW4G,WACC,uCACI,wBAAOvE,QAAQ,iBAAf,qCACA,wBAAO7G,GAAG,iBAAiB6E,KAAK,SAASC,MAAQkP,EAAe7T,OAASwG,SAAW,SAAAhC,GAAC,OAAImR,EAAkB,6BAAI9B,GAAL,mBAAsBrP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,gCACtM,wBAAOC,QAAQ,cAAf,qBACA,wBAAO7G,GAAG,cAAc6E,KAAK,SAASC,MAAQkP,EAAe1T,OAASqG,SAAW,SAAAhC,GAAC,OAAImR,EAAkB,6BAAK9B,GAAN,mBAAuBrP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAW9D,KAAK,OAAO4F,YAAY,iCAKjL,gBAAzBpC,EAAW4G,WACC,uCACI,wBAAOvE,QAAQ,cAAf,yCACA,wBAAO7G,GAAG,cAAc6E,KAAK,SAASC,MAAQiR,EAAcpP,SAAW,SAAAhC,GAAC,OAAIqR,EAAgBrR,EAAEC,OAAOE,QAAUoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,gCAKzK,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,uBAAKpQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAO7F,KAAK,SAAS6D,KAAK,SAASC,MAAQN,EAAWwO,OAASrM,SAAWjC,EAAekC,YAAY,IAAIwP,IAAK,OAElH,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QAjGhB,SAAAnC,GACjBA,EAAEwB,iBACcmQ,OAAOC,QAAQ,2EAG3B/V,EAAUuD,GAAyB+O,EAAU9S,KAC7CqS,EAAY1N,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aA0FPV,UAAU,iCAA3C,6BC3MpBwQ,GAAmB,SAAC,GAA2B,IAAzB9N,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YAErC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,CAAc2J,YAAcA,IAC5B,eAAC,GAAD,CAAOA,YAAaA,OCE7CoE,GAAc,SAAC,GAAqB,IAyFzC7U,EAzFsByQ,EAAkB,EAAlBA,YAEpB7R,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACR,EAA2C6C,mBAAS,IAApD,mBAAOwP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BnS,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KAEA,EAAuDzB,GAAiB,SAAhErB,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,cAAe4E,EAAlC,EAAkCA,iBAElC,EAA2DhQ,GAAQ,6BAC5DyO,GAD2D,IAE9DrQ,UAAW,IACXwR,aAAc,EACdC,eAAgBpB,EAAU3H,SAAW2H,EAAU5H,kBAJnD,mBAAQ1G,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAmFA,OAFsCnD,EAAhB,gBAAtB4C,EAAWtC,OAAwC,IAAmBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,WAGxH,wBAAMqE,SA7EW,SAAAtB,GAYjB,GAXAA,EAAEwB,iBAEFzE,EAAQkM,MAAM,SAAAjM,GAAG,MAAmB,YAAfA,EAAIxB,UAAuByB,WAAWhC,SAAS,SAAAgP,GACnDpK,EAAW4G,aAQvBiB,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBmB,SAAU7H,EAAW0P,kBAAqB,GAAK7H,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAkB5G,SAAU7H,EAAWyP,cAAiB,EAEhOxN,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAK2F,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBmB,SAAU7H,EAAW0P,gBAAmB,GAAK7H,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAkB5G,SAAU7H,EAAWyP,gBAAmB,EAEhOxN,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMuP,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMwT,EAAWxC,GAAaM,GAClC,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGrBpP,EAAW/B,UAAYsR,EAEvBvT,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWtC,OACnBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,YAA7D,CAAyEmS,OAK3FjB,EAAUG,cAAgBzO,EAAWyO,cAAgB5G,SAAS7H,EAAWyP,cACzEnB,EAAU5H,eAAiB1G,EAAW0G,eAAiBmB,SAAS7H,EAAW0P,gBAC3EpB,EAAUnI,OAAWnG,EAAWwO,OAASxO,EAAWyO,cAAgBzO,EAAWyP,aAAiB,EAAI,YAAc,UAElHzT,EAAUoD,GAA2BkP,IAErCtS,EAAU4C,GAAsB,CAC5BpD,GAAImD,KAAK0Q,MACT8C,aAAcnS,EAAWxE,GACzBkD,MAAOsB,EAAWtB,MAClBiI,SAAU3G,EAAW0P,eACrBhS,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtB2I,UAAW5G,EAAW4G,UACtBwL,OAAQ9D,EAAUzH,UAClBhL,KAAM,QACN2S,OAAQxO,EAAWyP,cACpB,eAEHxN,IAAKC,KAAK,iBAAV,UAAgClC,EAAWyP,aAA3C,kCAA0F,WAE1F5B,EAAY1N,QA1CRiR,EAAYK,EAASrC,OAkDzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,+CACE2P,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQwP,UAAQ,EAACxR,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAtE,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGR,uBAAKkB,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAEIlD,EAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAEvC,yBAAQlH,MAAM,iBAAd,gCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQiP,EAAiBpN,SAAW,SAAAhC,GAAC,OAAI+R,EAAkB/R,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAG3K,uBAAKZ,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOqQ,UAAQ,EAACrV,KAAK,OAAO6D,KAAK,YAAYC,MAAQN,EAAW6G,UAAY1E,SAAWjC,EAAekC,YAAY,gBAG1H,uBAAKZ,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQwP,UAAQ,EAACxR,KAAK,YAAYC,MAAQN,EAAW4G,UAAYzE,SAAWjC,EAA5E,UACI,4BAAUyR,MAAM,aAAhB,UAEQ9B,EAAiBpK,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAAKwJ,UAAW,EAA3C,SAAqDxJ,GAAvCA,MAE9C,yBAAQlH,MAAM,iBAAd,mCAEJ,4BAAUqR,MAAM,UAAhB,UAEQzU,EAAQkM,MAAM,SAAA5B,GAAE,MAAkB,YAAdA,EAAG7L,UAAsByB,WAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAErF,yBAAQlH,MAAM,cAAd,6CAIZ,uBAAKkB,UAAU,kBAAf,UACI,wBAAOa,QAAQ,iBAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOqQ,SAAWhK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,iBAAmB,EAAmBjS,KAAK,SAAS6D,KAAK,iBAAiBC,MAAQN,EAAW0P,eAAiB2C,IAAMxK,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBkL,IAAK,EAAGzP,SAAWjC,EAAekC,YAAa,OAEjT,sDAAyBkM,EAAU3H,SAAW2H,EAAU5H,qBAE5D,uBAAKlF,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAOwP,SAAWhK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,iBAAmB,EAAmBjS,KAAK,SAAS6D,KAAK,eAAeC,MAAQN,EAAWyP,aAAe4C,IAAMxK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAiBmD,IAAK,EAAGzP,SAAWjC,EAAekC,YAAY,MACrS,6CAAgBkM,EAAUE,OAASF,EAAUG,cAA7C,0BAEJ,2BAAUjN,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAEzH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBhF,KAAK,SAA3C,0BACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,6BCtKP8Q,GAAiB,SAAC,GAAqB,IAoG5ClV,EApGyByQ,EAAkB,EAAlBA,YAEvB7R,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACAiH,EAAUO,aAAY,SAAAC,GAAK,OAAIA,EAAMiL,UAArCzL,MACR,EAA2CpE,mBAAS,IAApD,mBAAOwP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BnS,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KAEA,EAAqCzB,KAA7BrB,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,cAEnB,EAA2DpL,GAAQ,6BAC5DyO,GAD2D,IAE9DoB,eAAgBpB,EAAU3H,SAAW2H,EAAU5H,eAC/C+I,aAAc,KAHlB,mBAAQzP,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KA8FA,OAHsCnD,EAAhB,gBAAtB4C,EAAWtC,OAAwC,IAAmBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,WAIxH,wBAAMqE,SAzFW,SAAAtB,GAIjB,GAHAA,EAAEwB,iBAGGkG,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBmB,SAAU7H,EAAW0P,kBAAqB,GAAK7H,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAkB5G,SAAU7H,EAAWyP,cAAiB,EAEhOxN,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAK2F,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBmB,SAAU7H,EAAW0P,gBAAmB,GAAK7H,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAkB5G,SAAU7H,EAAWyP,gBAAmB,EAEhOxN,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMuP,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMwT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW/B,UAAYsR,EAEvBvT,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWtC,OACnBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,YAA7D,CAAyEmS,OAK3FjB,EAAUG,cAAgBzO,EAAWyO,cAAgB5G,SAAS7H,EAAWyP,cACzEnB,EAAU5H,eAAiB1G,EAAW0G,eAAiBmB,SAAS7H,EAAW0P,gBAC3EpB,EAAUnI,OAAWnG,EAAWwO,OAASxO,EAAWyO,cAAgBzO,EAAWyP,aAAiB,EAAI,YAAc,UAElHzT,EAAUoD,GAA2BkP,IAEb,aAAnBA,EAAUzS,MAEXG,EAAU4C,GAAsB,CAC5BpD,GAAImD,KAAK0Q,MACT8C,aAAcnS,EAAWxE,GACzBkD,MAAOsB,EAAWtB,MAClBiI,SAAU3G,EAAW0P,eACrBhS,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtB2I,UAAW,QAAS5G,EAAWnE,KAC/BuW,OAAQ9D,EAAUzH,UAClB2H,OAAQxO,EAAWyP,aACnB5T,KAAM,SACP,eACHoG,IAAKC,KAAK,iBAAV,UAAgClC,EAAWyP,aAA3C,kCAA0F,YAE/D,iBAAnBnB,EAAUzS,OAElBG,EAAU4C,GAAsB,CAC5BpD,GAAImD,KAAK0Q,MACT8C,aAAcnS,EAAWxE,GACzBkD,MAAOsB,EAAWtB,MAClBiI,SAAU3G,EAAW0P,eACrBhS,OAAQsC,EAAWtC,OACnBO,UAAW+B,EAAW/B,UACtB2I,UAAW,iBACX2L,QAASjE,EAAUxH,QACnBjL,KAAM,UACN2S,OAAQxO,EAAWyP,cACpB,iBAEHxN,IAAKC,KAAK,kBAAV,UAAiClC,EAAWyP,aAA5C,kCAA2F,YAG/F5B,EAAY1N,QA7DRiR,EAAYK,EAASrC,OAsEzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,8BAAgB,aAAV2C,EAAuB,kBAAoB,0BAC/CgN,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQwP,UAAQ,EAACxR,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAtE,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGR,uBAAKkB,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BN,EAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQlH,MAAM,iBAAd,gCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQiP,EAAiBpN,SAAW,SAAAhC,GAAC,OAAI+R,EAAkB/R,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAG3K,sBAAKZ,UAAU,iBAAf,SAEQxB,EAAW6G,UACP,uCACI,wBAAOxE,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOqQ,UAAQ,EAACrV,KAAK,OAAO6D,KAAK,YAAYC,MAAQN,EAAW6G,UAAY1E,SAAWjC,EAAekC,YAAY,gBAI1H,uCACI,wBAAOC,QAAQ,UAAf,uBACA,sBAAKb,UAAU,UAAf,SACI,wBAAOqQ,UAAQ,EAACrV,KAAK,OAAO6D,KAAK,UAAUC,MAAQN,EAAW8G,QAAU3E,SAAWjC,EAAekC,YAAY,kBAKlI,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,iBAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOqQ,SAAWhK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,iBAAmB,EAAmBjS,KAAK,SAAS6D,KAAK,iBAAiBC,MAAQN,EAAW0P,eAAiB2C,IAAMxK,SAAS7H,EAAW2G,UAAYkB,SAAS7H,EAAW0G,gBAAkBkL,IAAK,EAAGzP,SAAWjC,EAAekC,YAAa,OAEjT,sDAAyBkM,EAAU3H,SAAW2H,EAAU5H,qBAE5D,uBAAKlF,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAOwP,SAAWhK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,iBAAmB,EAAmBjS,KAAK,SAAS6D,KAAK,eAAeC,MAAQN,EAAWyP,aAAe4C,IAAMxK,SAAS7H,EAAWwO,QAAU3G,SAAS7H,EAAWyO,eAAiBmD,IAAK,EAAGzP,SAAWjC,EAAekC,YAAY,MACrS,6CAAgBkM,EAAUE,OAASF,EAAUG,cAA7C,0BAEJ,2BAAUjN,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBhF,KAAK,SAA3C,0BACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,6BCtLHgR,GAAe,WAExB,MAA4F9N,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,KAAK8P,aAApH3H,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWlJ,EAA7B,EAA6BA,OAAQO,EAArC,EAAqCA,UAAWS,EAAhD,EAAgDA,MAAO6P,EAAvD,EAAuDA,YAAaC,EAApE,EAAoEA,OAAQ4D,EAA5E,EAA4EA,OAAQ1D,EAApF,EAAoFA,IAEpF,OACI,uBAAKlN,UAAU,gBAAf,UACI,gDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,+CAEV,0CAAW,gCAAQ9C,EAAMqI,0BAEzB,6CAAc,uCAAU0L,KAAKC,IAAK/L,SAElC,oDAAqB,gCAAQjJ,OAE7B,8CAAe,gCAAQO,OAErBuQ,GAAU,2CAAY,gCAAQA,OAEhC,2CAAY,gCAAQ5H,OAElBwL,GAAU,2CAAY,gCAAQA,OAE9B1D,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMtO,OAAO,SAASwO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCf5BoE,GAAoB,SAAC,GAAqB,IAAnB9E,EAAkB,EAAlBA,YAE1B7R,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACA0L,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,SAArCA,MAER,EAAkC7I,oBAAS,GAA3C,mBAAOyQ,EAAP,KAAkBC,EAAlB,KACA,EAA8B1Q,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAAsCrR,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB6T,EAApB,KACA,EAA4CtR,mBAAS,IAArD,mBAAOwP,EAAP,KAAuBqD,EAAvB,KACA,EAA4C7S,mBAAS,CACjDpE,OAAQ,GACRG,OAAQ,KAFZ,mBAAO0T,EAAP,KAAuB8B,EAAvB,KAIA,EAA8CvR,mBAAS,IAAvD,mBAAO2J,EAAP,KAAwBmJ,EAAxB,KAEA,EAAwElD,KAAhE1L,EAAR,EAAQA,UAAWqK,EAAnB,EAAmBA,UAAWrD,EAA9B,EAA8BA,cAAe4E,EAA7C,EAA6CA,iBAAkBrR,EAA/D,EAA+DA,KAE/D,EAA2DqB,GAASyO,GAAwB,CACxF5P,MAAO,IAAIC,KACXjB,OAAQuN,EAAc,GACtBhN,UAAWf,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWsP,EAAc,MAAI7N,WAAW,GAC1EwJ,UAAWiJ,EAAiB,GAC5BlJ,SAAU,GACV4H,YAAa,GACbG,IAAK,KAPT,mBAAQ1O,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KASAP,EAAWtB,MAAQ,IAAIC,KAAMqB,EAAWtB,OAGxC,IA2IItB,EA3IE0V,GAAyB,OAATxE,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eAAgB3T,EAAK4K,MAAM,SAAA5B,GAAE,OAAIA,EAAGhM,KAAO8S,EAAU6D,gBA+ItF,OAHsC/U,EAAhB,gBAAtB4C,EAAWtC,OAAwC,IAAmBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,WAIxH,qCACA,wBAAMqE,SA/IW,SAAAtB,GAOjB,GANAA,EAAEwB,iBAEF3B,EAAWtB,MAAQC,KAAKoU,MAAM/S,EAAWtB,OAIpCmJ,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAenM,WAAckB,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAepM,iBAAxB,OAA0C4H,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW3H,WAAakB,SAAU7H,EAAW2G,YAAe,GAAKkB,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAetE,SAAY3G,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAerE,gBAAxB,OAA0CH,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWE,SAAW3G,SAAU7H,EAAWwO,QAAW,EAEtRvM,IAAKC,KAAK,UAAU,2IAA4I,cAIpK,GAAK2F,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAenM,WAAckB,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAepM,iBAAxB,OAA0C4H,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW3H,WAAakB,SAAU7H,EAAW2G,UAAa,GAAKkB,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAetE,SAAY3G,SAAQ,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAerE,gBAAxB,OAA0CH,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWE,SAAW3G,SAAU7H,EAAWwO,UAAa,EAEtRvM,IAAKC,KAAK,UAAU,yJAA0J,aAFlL,CAOA,IAAMuP,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,OAA0B,CAErC,IADiBuR,GAAa,CAAEzR,YAAaA,EAAa+R,eAAgBA,IAC3DJ,GAEX,YADAiC,EAAY,2CAIhBpR,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYsR,EACvBvT,EAAUuB,GAAoB,CAC1B5B,OAAQ6B,EACRJ,WAAY,CAAEmS,MAKtB,GAA0B,gBAAtBvP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMwT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW/B,UAAYsR,EAEvBvT,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWtC,OACnBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,YAA7D,CAAyEmS,OAK3F,GAA6B,mBAAzBvP,EAAW4G,UAAgC,CAE3C,IAAM6K,EAAWxC,GAAaO,GAC9B,IAAMiC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAIzBpP,EAAW4G,UAAY4I,EAAe7T,OAEtCK,EAAUU,GAAsB,CAC5Bf,OAAQ6T,EAAe7T,OACvBE,KAAMoI,EACNnI,OAAQ0T,EAAe1T,U1CwFD,IAAAkX,E0CpFzB1E,GAEIA,EAAU6D,cACXnW,G1CiFsBgX,E0CjFW,CAC7Bb,aAAc7D,EAAU6D,aACxBlU,UAAW+B,EAAW/B,UACtBgV,iBAAkBpL,SAAUyG,EAAU3H,UACtCuM,cAAerL,SAAU7H,EAAW2G,UACpCwM,eAAgB7E,EAAUE,OAC1B4E,aAAcvL,SAAU7H,EAAWwO,S1C4EnD,uCAAO,WAAOxS,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAqD,GACLA,EAAIjD,KAAOwX,EAAMb,cAClBnW,EAAUoD,GAA0B,6BAC7BX,EAAIlD,QADwB,IAE/BC,GAAIiD,EAAIjD,GACRyC,UAAW+U,EAAM/U,UACjByI,eAAkBjI,EAAIlD,OAAOmL,eAAiBsM,EAAMC,iBAAmBD,EAAME,cAC7EzE,cAAiBhQ,EAAIlD,OAAOkT,cAAgBuE,EAAMG,eAAiBH,EAAMI,aACzEjN,OAAU1H,EAAIlD,OAAOoL,UAAYlI,EAAIlD,OAAOmL,eAAiBsM,EAAMC,kBAAoBD,EAAME,cAAiB,EAAI,YAAc,iBAbzI,2CAAP,0D0CvEQlX,EAAUoD,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,YAEzC,YAAd+B,GAEmB,YAAtBjE,EAAWtC,SACZsC,EAAW2G,SAAW+B,GAAY,CAAC,CAAC/M,OAAQ+N,EAAiBR,MAAOrB,SAAS7H,EAAW2G,YAAc,MAAOiC,GAC7G5I,EAAW0J,gBAAkB,OAGjC1N,EAAU4C,GAAqB,cAE3B/C,KAAMoI,GACHjE,GACJ,iBACHiC,IAAKC,KAAK,mBAAoB,kCAAmC,YAE5C,UAAd+B,IAEPjI,EAAU4C,GAAqB,cAC3B/C,KAAMoI,GACHjE,GACJ,eACHiC,IAAKC,KAAK,mBAAoB,kCAAmC,YAErE2L,EAAY1N,QA7FRiR,EAAYK,EAASrC,OAyHzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,gCAAM8M,EAAY,oBAAH,gBAAmCrK,GAAlD,OACEkN,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,WACV6R,QAAU,IAAI1U,OAElB,uBAAK6C,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,SAAwC,YAAd4B,EAA0B,sBAAwB,sBAC5E,0BAAQ4N,YAAoB,OAATvD,QAAS,IAATA,OAAA,EAAAA,EAAW6D,cAA8B9R,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAAjH,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMkR,EAAgBlR,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BN,EAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQlH,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQiP,EAAiBpN,SAAW,SAAAhC,GAAC,OAAIyS,EAAmBzS,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAKlJ,YAAtBpC,EAAWtC,QACX,uBAAK8D,UAAU,iBAAf,UACI,wBAAOa,QAAQ,kBAAf,qCACA,0BAAQhC,KAAK,kBAAkB7E,GAAG,kBAAkB8E,MAAQoJ,EAAkBvH,SAAW,SAAAhC,GAAC,OAAI0S,EAAoB1S,EAAEC,OAAOE,QAA3H,UACI,yBAAQA,MAAM,IAAd,eACE2K,EAAc1D,QAAQ,SAAApK,GAAG,MAAY,YAARA,KAAoBsI,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,YAKxF,uBAAKhG,UAAU,wBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQwP,YAAoB,OAATvD,QAAS,IAATA,OAAA,EAAAA,EAAW6D,cAA8B9R,KAAK,YAAYC,MAAQN,EAAW4G,UAAYzE,SAAWjC,EAAvH,UACI2P,EAAiBpK,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE9C,yBAAQlH,MAAM,iBAAd,mCAG6B,mBAAzBN,EAAW4G,WACH,uCACI,wBAAOvE,QAAQ,iBAAf,qCACA,wBAAO7G,GAAG,iBAAiB6E,KAAK,SAASC,MAAQkP,EAAe7T,OAASwG,SAAW,SAAAhC,GAAC,OAAImR,EAAkB,6BAAI9B,GAAL,mBAAsBrP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAWoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,gCACtM,wBAAOC,QAAQ,cAAf,qBACA,wBAAO7G,GAAG,cAAc6E,KAAK,SAASC,MAAQkP,EAAe1T,OAASqG,SAAW,SAAAhC,GAAC,OAAImR,EAAkB,6BAAK9B,GAAN,mBAAuBrP,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAAW9D,KAAK,OAAO4F,YAAY,oCAK9M,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAemS,IAAMS,IAA8B,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAenM,YAA0B,OAAbmM,QAAa,IAAbA,OAAA,EAAAA,EAAepM,iBAAf,OAAgC4H,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW3H,WAAciL,IAAK,EAAGxP,YAAY,aAEtN,OAATkM,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eAAgB,4DAA2C,OAAbW,QAAa,IAAbA,OAAA,EAAAA,EAAenM,YAA0B,OAAbmM,QAAa,IAAbA,OAAA,EAAAA,EAAepM,iBAAf,OAAgC4H,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW3H,kBAGzH,OAAT2H,QAAS,IAATA,OAAA,EAAAA,EAAW6D,eACX,uBAAK3Q,UAAU,kBAAf,UACI,wBAAOa,QAAQ,eAAf,sBACA,wBAAO7F,KAAK,SAAS6D,KAAK,SAASC,MAAQN,EAAWwO,OAAS6D,KAAmB,OAAbS,QAAa,IAAbA,OAAA,EAAAA,EAAetE,UAAuB,OAAbsE,QAAa,IAAbA,OAAA,EAAAA,EAAerE,gBAAf,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWE,SAAYoD,IAAK,EAAGzP,SAAWjC,EAAekC,YAAY,MAClM,qDAAoC,OAAb0Q,QAAa,IAAbA,OAAA,EAAAA,EAAetE,UAAuB,OAAbsE,QAAa,IAAbA,OAAA,EAAAA,EAAerE,gBAAf,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWE,eAGlG,eAAC,GAAD,CAAYxO,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QAnHhB,SAAAnC,GAIjB,I1CkE+B6S,E0CrE/B7S,EAAEwB,iBAGcmQ,OAAOC,QAAQ,2EAG3B/V,G1C+D2BgX,E0C/DO,CAC9Bb,aAAc7D,EAAU6D,aACxBc,iBAAkBpL,SAAUyG,EAAU3H,UACtCwM,eAAgB7E,EAAUE,Q1C6DtC,uCAAO,WAAOxS,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAqD,GACLA,EAAIjD,KAAOwX,EAAMb,cAClBnW,EAAUsD,GAAqB,6BACxBb,EAAIlD,QADmB,IAE1BC,GAAIiD,EAAIjD,GACRkL,eAAkBjI,EAAIlD,OAAOmL,eAAiBsM,EAAMC,iBACpDxE,cAAiBhQ,EAAIlD,OAAOkT,cAAgBuE,EAAMG,eAClDhN,OAAU1H,EAAIlD,OAAOoL,UAAalI,EAAIlD,OAAOkT,cAAgBuE,EAAMG,gBAAqB,EAAI,YAAc,iBAZnH,2CAAP,0D0C1DQnX,EAAUuD,GAAyB+O,EAAU9S,KAC7CqS,EAAY1N,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAoGPV,UAAU,iCAA3C,+BCpRpB8R,GAAmB,SAAC,GAA2B,IAAzBpP,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YACrC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAmB2J,YAAcA,OCN1D0F,GAAiB,WAE1B,MAAqF7O,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,KAAK8P,aAA7G3H,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWlJ,EAA7B,EAA6BA,OAAQO,EAArC,EAAqCA,UAAWS,EAAhD,EAAgDA,MAAO6P,EAAvD,EAAuDA,YAAagE,EAApE,EAAoEA,QAAS7D,EAA7E,EAA6EA,IAE7E,OACI,uBAAKlN,UAAU,gBAAf,UACI,kDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,iDAEV,0CAAW,gCAAQ,IAAI7C,KAAMD,GAAQqI,0BAErC,6CAAc,uCAAU0L,KAAKC,IAAK/L,SAElC,sDAAuB,gCAAQjJ,OAE/B,8CAAe,gCAAQO,OAEvB,2CAAY,gCAAQ2I,OAElB2L,GAAW,4CAAa,gCAAQA,OAEhC7D,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMtO,OAAO,SAASwO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCvB5BiF,GAAqB,SAAC,GAA2B,IAAzBtP,EAAwB,EAAxBA,KAAM2J,EAAkB,EAAlBA,YACvC,OACI,qCAEiB,aAAT3J,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAmB2J,YAAcA,OCG1D4F,GAAgB,SAAC,GAAqB,IAyF3CrW,EAzFwByQ,EAAkB,EAAlBA,YAEtB7R,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACR,EAAsC6C,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB6T,EAApB,KACA,EAA2CtR,mBAAS,IAApD,mBAAOwP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BnS,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAAkCrR,oBAAS,GAA3C,mBAAOyQ,EAAP,KAAkBC,EAAlB,KAEA,EAAqCd,KAA7BrB,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,cAEnB,EAA2DpL,GAASyO,GAAwB,CACxF5P,MAAOC,KAAK0Q,MACZ3R,OAAQuN,EAAc,GACtBhN,UAAWf,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWsP,EAAc,MAAI7N,WAAW,GAC1EuJ,SAAU,EACVD,eAAgB,EAChB7K,KAAM,eACNiL,QAAS,GACT0H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbpI,OAAQ,cAXZ,mBAAQnG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAkFA,OAHsCnD,EAAhB,gBAAtB4C,EAAWtC,OAAwC,IAAmBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,WAIxH,wBAAMqE,SArEW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM8P,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,OAA0B,CACrC,IAAM+T,EAAWxC,GAAa,CAAEzR,YAAaA,EAAa+R,eAAgBA,IAC1E,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYsR,EACvBvT,EAAUuB,GAAoB,CAC1B5B,OAAQ6B,EACRJ,WAAY,CAAEmS,MAKtB,GAA0B,gBAAtBvP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMwT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW/B,UAAYsR,EAEvBvT,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWtC,OACnBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,YAA7D,CAAyEmS,OAItFjB,GACDtS,EAAUoD,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/DlG,EAAU4C,GAAqB,gBACxBoB,GACJ,kBACHiC,IAAKC,KAAK,uBAAwB,kCAAmC,YAEzE2L,EAAY1N,QA5CRiR,EAAYK,EAASrC,MA+DzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAsB,yBACtC6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,iBAAf,UACI,wBAAOa,QAAQ,UAAf,uBACA,sBAAKb,UAAU,UAAf,SACI,wBAAOhF,KAAK,OAAO6D,KAAK,UAAUC,MAAQN,EAAW8G,QAAU3E,SAAWjC,EAAekC,YAAY,4BAG7G,uBAAKZ,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMkR,EAAgBlR,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BN,EAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQlH,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQiP,EAAiBpN,SAAW,SAAAhC,GAAC,OAAI+R,EAAkB/R,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAI3K,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,uBAAKpQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAO7F,KAAK,SAAS6D,KAAK,SAASC,MAAQN,EAAWwO,OAASrM,SAAWjC,EAAekC,YAAY,IAAIwP,IAAK,OAElH,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QA7EhB,SAAAnC,GACjBA,EAAEwB,iBACcmQ,OAAOC,QAAQ,2EAG3B/V,EAAUuD,GAAyB+O,EAAU9S,KAC7CqS,EAAY1N,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAsEPV,UAAU,iCAA3C,6BCpKpBkS,GAAkB,WAE3B,IAAM1X,EAAW8E,cAETwN,EAAc5J,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,QAAzC8P,UAEA3H,EAAkI2H,EAAlI3H,SAAUjJ,EAAwH4Q,EAAxH5Q,OAAQO,EAAgHqQ,EAAhHrQ,UAAW4I,EAAqGyH,EAArGzH,UAAWC,EAA0FwH,EAA1FxH,QAASpI,EAAiF4P,EAAjF5P,MAAO6P,EAA0ED,EAA1EC,YAAapI,EAA6DmI,EAA7DnI,OAAQO,EAAqD4H,EAArD5H,eAAgB8H,EAAqCF,EAArCE,OAAQC,EAA6BH,EAA7BG,cAAe5S,EAAcyS,EAAdzS,KAAM6S,EAAQJ,EAARI,IAWlI,OACI,uBAAKlN,UAAU,gBAAf,UACe,aAAT3F,EAAuB,mDAA4B,yDAGrD,2BAAS2F,UAAU,mBAAnB,UACI,yCAAU,gCAAgB,aAAT3F,EAAuB,WAAa,sBAErD,0CAAW,gCAAQ6C,EAAMqI,0BAEzB,mDAAoB,uCAAU0L,KAAKC,IAAK/L,SAExC,qDAAsB,uCAAUD,QAEhC,sDAAuB,uCAAU+L,KAAKC,IAAK/L,GAAaD,QAGpDG,EAAY,8CAAe,gCAAQA,OACvB,4CAAa,gCAAQC,OAGrC,2CAAY,gCAAQpJ,OAEpB,8CAAe,gCAAQO,OAEvB,oDAAqB,kCAAQwQ,EAAR,IAA0BD,QAE7CE,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMtO,OAAO,SAASwO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,OAEzB,2CAAY,gCAAQpI,UAIL,cAAXA,GAA0B,yBAAQ7D,QA3CrB,SAAAnC,GACzBA,EAAEwB,iBACF3F,EAAUgI,GAAW,CACjBnI,KAAM,kBACNsI,MAAOtI,MAuCoE2F,UAAU,mBAAnD,8BC3CjCmS,GAAW,SAAC,GAAgC,IAAD,IA0FhDvW,EA1FmByQ,EAA6B,EAA7BA,YAAa5J,EAAgB,EAAhBA,UAE9BjI,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACR,EAAsC6C,mBAAS,IAA/C,mBAAOvC,EAAP,KAAoB6T,EAApB,KACA,EAA2CtR,mBAAS,IAApD,mBAAOwP,EAAP,KAAuB2C,EAAvB,KACA,EAA8BnS,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAAkCrR,oBAAS,GAA3C,mBAAOyQ,EAAP,KAAkBC,EAAlB,KAEA,EAAqCd,KAA7BrB,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,cAEnB,EAA2DpL,GAASyO,GAAwB,CACxF5P,MAAOC,KAAK0Q,MACZ3R,OAAQuN,EAAc,GACtBhN,UAAS,UAAEf,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWsP,EAAc,aAAlD,aAAE,EAAqD7N,WAAW,GAC3EuJ,SAAU,EACVD,eAAgB,EAChB7K,KAAMoI,EACN4C,UAAW,GACX2H,OAAQ,EACRC,cAAe,EACfF,YAAa,GACbpI,OAAQ,cAXZ,mBAAQnG,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAmFA,OAHsCnD,EAAhB,gBAAtB4C,EAAWtC,OAAwC,IAAgB,UAAGR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,iBAAhD,aAAG,EAAuDN,WAIzH,wBAAMqE,SAtEW,SAAAtB,GACjBA,EAAEwB,iBAGF,IAAM8P,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA0B,gBAAtBnP,EAAWtC,OAA0B,CACrC,IAAM+T,EAAWxC,GAAa,CAAEzR,YAAaA,EAAa+R,eAAgBA,IAC1E,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAWtC,OAASF,EACpBwC,EAAW/B,UAAYsR,EACvBvT,EAAUuB,GAAoB,CAC1B5B,OAAQ6B,EACRJ,WAAY,CAAEmS,MAKtB,GAA0B,gBAAtBvP,EAAWtC,QAAqD,mBAAzBsC,EAAW/B,UAAiC,CACnF,IAAMwT,EAAWxC,GAAaM,GAC9B,IAAMkC,EAAStC,GAEX,YADAiC,EAAYK,EAASrC,KAGzBpP,EAAW/B,UAAYsR,EAEvBvT,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWtC,OACnBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWtC,UAASN,YAA7D,CAAyEmS,OAItFjB,GACDtS,EAAUoD,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,aAE/DlG,EAAU4C,GAAqB,6BACxBoB,GADuB,IAE1BxE,GAAImD,KAAK0Q,QACV,kBACHpN,IAAKC,KAAK,iBAAkB,kCAAmC,YAEnE2L,EAAY1N,QA7CRiR,EAAYK,EAASrC,MAgEzB,UACI,uBAAK5N,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAsB,mBACtC6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,iBAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,sBAAKb,UAAU,YAAf,SACI,wBAAOhF,KAAK,OAAO6D,KAAK,YAAYC,MAAQN,EAAW6G,UAAY1E,SAAWjC,EAAekC,YAAY,8BAGjH,uBAAKZ,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWtC,OAASyE,SAAWjC,EAA7D,UAEQ+K,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGsB,gBAAtBN,EAAWtC,QAA4B,wBAAO4C,MAAQ9C,EAAc2E,SAAW,SAAChC,GAAD,OAAMkR,EAAgBlR,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGjK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAW/B,UAAYkE,SAAWjC,EAAnE,UACI,yBAAQI,MAAM,IAAd,eAE0B,gBAAtBN,EAAWtC,QAA4BN,EAAWqI,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAE9E,yBAAQlH,MAAM,iBAAd,mCAGyB,mBAAzBN,EAAW/B,WAAkC,wBAAOqC,MAAQiP,EAAiBpN,SAAW,SAAAhC,GAAC,OAAI+R,EAAkB/R,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAI3K,uBAAKZ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,uBAAKpQ,UAAU,kBAAf,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAO7F,KAAK,SAAS6D,KAAK,SAASC,MAAQN,EAAWwO,OAASrM,SAAWjC,EAAekC,YAAY,IAAIwP,IAAK,OAElH,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,mBAAmBqQ,WAAWrB,EAA2BhU,KAAK,SAAhF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QA7EhB,SAAAnC,GACjBA,EAAEwB,iBACcmQ,OAAOC,QAAQ,2EAG3B/V,EAAUuD,GAAyB+O,EAAU9S,KAC7CqS,EAAY1N,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAsEPV,UAAU,iCAA3C,6BCnKpBoS,GAAsB,SAAC,GAAsC,IAApC1P,EAAmC,EAAnCA,KAAM2J,EAA6B,EAA7BA,YAAa5J,EAAgB,EAAhBA,UAErD,OACI,uCAEsB,aAAdA,IACkB,aAATC,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAU2J,YAAaA,EAAa5J,UAAYA,KAGjE,iBAAdA,IACkB,aAATC,EAAsB,eAAC,GAAD,IACA,eAAC,GAAD,CAAe2J,YAAcA,SCd/DgG,GAAgB,SAAC,GAA+T,IAKrVC,EAGAC,EARwBlG,EAA4T,EAA5TA,YAAamG,EAA+S,EAA/SA,aAAcC,EAAiS,EAAjSA,aAAc3F,EAAmR,EAAnRA,UAAWrD,EAAwQ,EAAxQA,cAAekG,EAAyP,EAAzPA,QAAS5Q,EAAgP,EAAhPA,qBAAsBP,EAA0N,EAA1NA,WAAYQ,EAA8M,EAA9MA,iBAAkBtD,EAA4L,EAA5LA,QAASwD,EAAmL,EAAnLA,eAAgBwT,EAAmK,EAAnKA,gBAAiBC,EAAkJ,EAAlJA,mBAAoBC,EAA8H,EAA9HA,mBAAoBC,EAA0G,EAA1GA,sBAAuBC,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBrU,EAA4C,EAA5CA,aAAcsQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAWrU,OATAzQ,EAAWW,GAAGjD,OAAS,UACvBsC,EAAWnE,KAAM,gBAGwBiY,EAAhB,gBAAzB9T,EAAWW,GAAGjD,OAA0C,IAAqBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWW,GAAGjD,UAASN,WAG3F2W,EAAhB,gBAA3B/T,EAAWS,KAAK/C,OAA4C,IAAwBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWS,KAAK/C,UAASN,WAG3I,wBAAMqE,SAAWuS,EAAexS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAH,mBAEX6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE5C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,0BACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWS,KAAK/C,OAASyE,SAAW3B,EAAlE,UAEQyK,EAAc1D,QAAQ,SAAApK,GAAG,MAAY,YAARA,KAAoBsI,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE9E,yBAAQlH,MAAM,cAAd,gCAEyB,gBAA3BN,EAAWS,KAAK/C,QAA4B,wBAAO4C,MAAQ4T,EAAkB/R,SAAW,SAAChC,GAAD,OAAMgU,EAAoBhU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAE5K,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BqW,EAAetO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAEvF,yBAAQlH,MAAM,iBAAd,mCAE4B,mBAA9BN,EAAWS,KAAKxC,WAAkC,wBAAOqC,MAAQ8T,EAAqBjS,SAAW,SAAAhC,GAAC,OAAIkU,EAAuBlU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAEvL,wBACA,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,gCACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BoW,EAAarO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQlH,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQgU,EAAmBnS,SAAW,SAAAhC,GAAC,OAAIoU,EAAqBpU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QAAU2R,EAAezS,UAAU,iCAA3C,6BC1EpBgT,GAAe,SAAC,GAAiR,IAKtST,EAGAD,EARuBjG,EAA8Q,EAA9QA,YAAamG,EAAiQ,EAAjQA,aAAcC,EAAmP,EAAnPA,aAAc3F,EAAqO,EAArOA,UAAWrD,EAA0N,EAA1NA,cAAekG,EAA2M,EAA3MA,QAAS5Q,EAAkM,EAAlMA,qBAAsBP,EAA4K,EAA5KA,WAAYQ,EAAgK,EAAhKA,iBAAkBE,EAA8I,EAA9IA,eAAgBxD,EAA8H,EAA9HA,QAASuX,EAAqH,EAArHA,cAAeC,EAAsG,EAAtGA,iBAAmBJ,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBrU,EAA4C,EAA5CA,aAAcsQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAWtR,OATAzQ,EAAWS,KAAK/C,OAAS,UACzBsC,EAAWnE,KAAM,eAG0BkY,EAAhB,gBAA3B/T,EAAWS,KAAK/C,OAA4C,IAAuBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWS,KAAK/C,UAASN,WAGrG0W,EAAhB,gBAAzB9T,EAAWW,GAAGjD,OAA0C,IAAqBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWW,GAAGjD,UAASN,WAGlI,wBAAMqE,SAAWuS,EAAexS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAH,kBAEX6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE5C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,+BACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BqW,EAAetO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,YAK/F,wBACA,uBAAKhG,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,sCACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWW,GAAGjD,OAASyE,SAAWzB,EAAhE,UAEQuK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGyB,gBAAzBN,EAAWW,GAAGjD,QAA4B,wBAAO4C,MAAQmU,EAAgBtS,SAAW,SAAChC,GAAD,OAAMuU,EAAkBvU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGxK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BoW,EAAarO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQlH,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQgU,EAAmBnS,SAAW,SAAAhC,GAAC,OAAIoU,EAAqBpU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAE7H,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEI8M,GAAa,yBAAQhM,QAAU2R,EAAezS,UAAU,iCAA3C,6BC5EpBmT,GAAuB,WAEhC,MAAwDjQ,aAAY,SAAAC,GAAK,OAAIA,EAAMnG,KAAK8P,aAAhF3H,EAAR,EAAQA,SAAUlG,EAAlB,EAAkBA,KAAME,EAAxB,EAAwBA,GAAIjC,EAA5B,EAA4BA,MAAO6P,EAAnC,EAAmCA,YAAaG,EAAhD,EAAgDA,IAEhD,OACI,uBAAKlN,UAAU,gBAAf,UACI,wDAEA,2BAASA,UAAU,mBAAnB,UACI,yCAAU,uDAEV,0CAAW,gCAAQ9C,EAAMqI,0BAEzB,6CAAc,uCAAU0L,KAAKC,IAAK/L,SAElC,iDAAkB,kCAAQlG,EAAKxC,UAAb,KAA4BwC,EAAK/C,OAAjC,UAElB,6CAAc,kCAAQiD,EAAG1C,UAAX,KAA0B0C,EAAGjD,OAA7B,UAEZgR,GAAO,gDAAiB,oBAAGC,KAAOD,EAAMtO,OAAO,SAASwO,IAAI,aAApC,gCAE1B,gDAAiB,gCAAQL,cCpB5BqG,GAAoB,SAAC,GAAiR,IAI3Sd,EAGAC,EAP4BlG,EAA8Q,EAA9QA,YAAamG,EAAiQ,EAAjQA,aAAcC,EAAmP,EAAnPA,aAAc3F,EAAqO,EAArOA,UAAWrD,EAA0N,EAA1NA,cAAekG,EAA2M,EAA3MA,QAAS5Q,EAAkM,EAAlMA,qBAAsBP,EAA4K,EAA5KA,WAAYQ,EAAgK,EAAhKA,iBAAkBE,EAA8I,EAA9IA,eAAgBxD,EAA8H,EAA9HA,QAASuX,EAAqH,EAArHA,cAAeC,EAAsG,EAAtGA,iBAAmBJ,EAAmF,EAAnFA,iBAAkBC,EAAiE,EAAjEA,oBAAqBrU,EAA4C,EAA5CA,aAAcsQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAU3R,OARAzQ,EAAWnE,KAAM,gBAGwBiY,EAAhB,gBAAzB9T,EAAWW,GAAGjD,OAA0C,IAAqBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWW,GAAGjD,UAASN,WAG3F2W,EAAhB,gBAA3B/T,EAAWS,KAAK/C,OAA4C,IAAwBR,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWS,KAAK/C,UAASN,WAG3I,wBAAMqE,SAAWuS,EAAexS,UAAU,sBAA1C,UACI,uBAAKA,UAAU,iBAAf,UACI,8BAAM8M,EAAY,oBAAH,wBAEX6C,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE5C,eAAC,KAAD,CACIhP,SAAW5B,EACXD,MAAQN,EAAWtB,MACnB2B,KAAK,QACLoG,OAAO,UACPjF,UAAU,aAEd,uBAAKA,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,4BACA,yBAAQhC,KAAK,SAASC,MAAQN,EAAWS,KAAK/C,OAASyE,SAAW3B,EAAlE,SAEQyK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,WAKnD,uBAAKhG,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWS,KAAKxC,UAAYkE,SAAW3B,EAAxE,UACI,yBAAQF,MAAM,IAAd,eAE+B,gBAA3BN,EAAWS,KAAK/C,QAA4BqW,EAAetO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,YAK/F,wBACA,uBAAKhG,UAAU,kCAAf,UACI,wBAAOa,QAAQ,SAAf,wBACA,0BAAQhC,KAAK,SAASC,MAAQN,EAAWW,GAAGjD,OAASyE,SAAWzB,EAAhE,UAEQuK,EAAcxF,KAAK,SAAA+B,GAAE,OAAI,yBAAmBlH,MAAQkH,EAA3B,SAAkCA,GAApBA,MAE3C,yBAAQlH,MAAM,cAAd,gCAGyB,gBAAzBN,EAAWW,GAAGjD,QAA4B,wBAAO4C,MAAQmU,EAAgBtS,SAAW,SAAChC,GAAD,OAAMuU,EAAkBvU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,oBAGxK,uBAAKZ,UAAU,mCAAf,UACI,wBAAOa,QAAQ,YAAf,yBACA,0BAAQhC,KAAK,YAAYC,MAAQN,EAAWW,GAAG1C,UAAYkE,SAAWzB,EAAtE,UACI,yBAAQJ,MAAM,IAAd,eAE6B,gBAAzBN,EAAWW,GAAGjD,QAA4BoW,EAAarO,KAAK,SAAA+B,GAAE,OAAI,yBAAkBlH,MAAQkH,EAA1B,SAAiCA,GAApBA,MAEnF,yBAAQlH,MAAM,iBAAd,mCAG4B,mBAA5BN,EAAWW,GAAG1C,WAAkC,wBAAOqC,MAAQgU,EAAmBnS,SAAW,SAAAhC,GAAC,OAAIoU,EAAqBpU,EAAEC,OAAOE,QAASoR,WAAS,EAAClV,KAAK,OAAO4F,YAAY,uBAGnL,uBAAKZ,UAAU,0BAAf,UACI,wBAAOa,QAAQ,WAAf,wBACA,uBAAKb,UAAU,WAAf,cAEI,wBAAOhF,KAAK,SAAS6D,KAAK,WAAWC,MAAQN,EAAW2G,SAAWxE,SAAWjC,EAAekC,YAAY,OAAOwP,IAAK,UAG7H,eAAC,GAAD,CAAY5R,WAAaA,EAAawQ,UAAYA,EAAYC,aAAeA,IAC7E,2BAAUjP,UAAU,WAAWnB,KAAK,cAAcC,MAAQN,EAAWuO,YAAcpM,SAAWjC,EAAekC,YAAY,gCAEzH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBqQ,WAAWrB,EAA2BhU,KAAK,SAAjF,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAEA8M,GAAa,yBAAQhM,QAAU2R,EAAezS,UAAU,iCAA3C,6BCtEpBqT,GAA2B,SAAC,GAAsC,IAApChH,EAAmC,EAAnCA,YAAa3J,EAAsB,EAAtBA,KAAMD,EAAgB,EAAhBA,UAEpDjI,EAAW8E,cACjB,EAAkCf,oBAAS,GAA3C,mBAAOyQ,EAAP,KAAkBC,EAAlB,KACA,EAA8C1Q,mBAAS,IAAvD,mBAAOmU,EAAP,KAAwBC,EAAxB,KACA,EAA0CpU,mBAAS,IAAnD,mBAAO0U,EAAP,KAAsBC,EAAtB,KACA,EAAoD3U,mBAAS,IAA7D,mBAAOqU,EAAP,KAA2BC,EAA3B,KACA,EAAgDtU,mBAAS,IAAzD,mBAAOuU,EAAP,KAAyBC,EAAzB,KACA,EAA8BxU,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACQlU,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACAtB,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WAER,EAA2C+T,KAAnC1E,EAAR,EAAQA,cAAeqD,EAAvB,EAAuBA,UAAW9P,EAAlC,EAAkCA,KAGlC,EAA6FqB,GAASyO,GAAwB,CAC1H5P,MAAOC,KAAK0Q,MACZ5O,KAAM,CACF/C,OAAQuN,EAAc,GACtBhN,UAAW,KAEf0C,GAAI,CACAjD,OAAQuN,EAAc,GACtBhN,UAAW,KAEf0I,SAAU,EACV4H,YAAa,GACb1S,KAAM,GACN6S,IAAK,KAbT,mBAAQ1O,EAAR,KAAoBE,EAApB,KAAkCK,EAAlC,KAAwDC,EAAxD,KAA0EE,EAA1E,KAgBMsT,EAAe,SAAA7T,GACjBA,EAAEwB,iBAGF,IAAM8P,EAAWxC,GAAajP,GAC9B,GAAMyR,EAAStC,GAAf,CAMA,GAA6B,gBAAzBnP,EAAWW,GAAGjD,OAA0B,CAGxC,IADiBuR,GAAa,CAAEzR,YAAaiX,EAAelF,eAAgB+E,IAC7DnF,GAEX,YADAiC,EAAY,2CAIhBpR,EAAWW,GAAGjD,OAAS+W,EACvBzU,EAAWW,GAAG1C,UAAYqW,EAC1BtY,EAAUuB,GAAoB,CAC1B5B,OAAQ8Y,EACRrX,WAAY,CAAEkX,MAMtB,GAA+B,gBAA3BtU,EAAWS,KAAK/C,OAA0B,CAG1C,IADiBuR,GAAa,CAAEzR,YAAa0W,EAAiB3E,eAAgB6E,IAC/DjF,GAEX,YADAiC,EAAY,2CAIhBpR,EAAWS,KAAK/C,OAASwW,EACzBlU,EAAWS,KAAKxC,UAAYmW,EAC5BpY,EAAUuB,GAAoB,CAC1B5B,OAAQuY,EACR9W,WAAY,CAAEgX,MAsBtB,GAA6B,gBAAzBpU,EAAWW,GAAGjD,QAAwD,mBAA5BsC,EAAWW,GAAG1C,UAAiC,CAEzF,IADiBgR,GAAaqF,GACfnF,GAEX,YADAiC,EAAY,2CAIhBpR,EAAWW,GAAG1C,UAAYqW,EAE1BtY,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWW,GAAGjD,OACtBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWW,GAAGjD,UAASN,YAAhE,CAA4EkX,OAK9F,GAA+B,gBAA3BtU,EAAWS,KAAK/C,QAA0D,mBAA9BsC,EAAWS,KAAKxC,UAAiC,CAG7F,IADiBgR,GAAamF,GACfjF,GAEX,YADAiC,EAAY,2CAIhBpR,EAAWS,KAAKxC,UAAYmW,EAE5BpY,EAAU2B,GAAuB,CAC7BnC,GAAI0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWqE,EAAWtC,UAASlC,GAC5DG,OAAQqE,EAAWS,KAAK/C,OACxBN,WAAW,GAAD,oBAAOF,EAAQkM,MAAM,SAAA5B,GAAE,OAAIA,EAAG7L,SAAWqE,EAAWS,KAAK/C,UAASN,YAAlE,CAA8EgX,OAKhG,GAAK9F,EACDtS,EAAUoD,GAA2BY,IACrCiC,IAAKC,KAAK,mBAAiB,mCAAoC,eAC5D,CACH,GAAyB,iBAApBlC,EAAWnE,KAAyB,CAGrC,IAAMiZ,EAA2BnL,GAA2BnL,EAAMtB,EAAS8C,EAAWS,KAAK/C,QAAS0L,MAAM,SAAA3K,GAAG,OAAIA,EAAIR,YAAc+B,EAAWS,KAAKxC,aAAY0I,SACzJoO,EAA6CD,EAA2BjN,SAAS7H,EAAW2G,UAE9FoO,EAA6C,IACvCnZ,EAAWwN,MAAM,SAAA/N,GAAG,MAAmB,wBAAfA,EAAIM,WAC9BK,EAAUU,GAAsB,CAC5Bf,OAAQ,sBACRE,KAAM,UACNC,OAAQ,YAIhBkE,EAAW2G,SAAWmO,EAEtB9Y,EAAU4C,GAAqB,CAC3BpD,GAAImD,KAAK0Q,MACT1I,SAAU8L,KAAKC,IAAKqC,GACpBlZ,KAAM,UACN+K,UAAW,sBACXlJ,OAAQsC,EAAWW,GAAGjD,OACtBO,UAAW+B,EAAWW,GAAG1C,UACzBS,MAAOC,KAAK0Q,MACZwB,YAAa7Q,EAAW0O,IACxBH,YAAY,YAAD,OAAevO,EAAWS,KAAKxC,YAC3C,kBAIXjC,EAAU4C,GAAqB,gBACxBoB,GACJ,uBAEHiC,IAAKC,KAAK,mBAAoB,kCAAmC,WAGrE2L,EAAY1N,QAtIRiR,EAAYK,EAASrC,MAyIvB6E,EAAe,SAAA9T,GACjBA,EAAEwB,iBACcmQ,OAAOC,QAAQ,2EAG3B/V,EAAUuD,GAAyB+O,EAAU9S,KAC7CqS,EAAY1N,GACZ8B,IAAKC,KAAK,YAAa,qCAAsC,aAIrE,OACI,uCAEiB,aAATgC,GAAuB,eAAC,GAAD,IAGN,kBAAdD,IAA4C,UAATC,GAA6B,WAATA,IAClD,eAAC,GAAD,CACA2J,YAAcA,EACdmG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZpR,QAAUA,EACV+N,cAAgBA,EAChBkG,QAAUA,EACV5Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClB+T,cAAgBA,EAChBC,iBAAmBA,EACnBJ,iBAAmBA,EACnBC,oBAAuBA,EACvBrU,aAAeA,EACfsQ,UAAYA,EACZC,aAAeA,IAIR,kBAAdxM,IAA4C,UAATC,GAA6B,WAATA,IAC/C,eAAC,GAAD,CACA2J,YAAcA,EACfmG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZpR,QAAUA,EACV+N,cAAgBA,EAChBkG,QAAUA,EACV5Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClBwT,gBAAkBA,EAClBC,mBAAqBA,EACrBC,mBAAqBA,EACrBC,sBAAyBA,EACzBC,iBAAmBA,EACnBC,oBAAuBA,EACvBrU,aAAeA,EACfsQ,UAAYA,EACZC,aAAeA,IAGR,iBAAdxM,IAA2C,UAATC,GAA6B,WAATA,IAC/C,eAAC,GAAD,CACA2J,YAAcA,EACdmG,aAAeA,EACfC,aAAeA,EACf3F,UAAYA,EACZpR,QAAWA,EACX+N,cAAgBA,EAChBkG,QAAUA,EACV5Q,qBAAuBA,EACvBP,WAAaA,EACbQ,iBAAmBA,EACnBE,eAAkBA,EAClB+T,cAAgBA,EAChBC,iBAAmBA,EACnBJ,iBAAmBA,EACnBC,oBAAuBA,EACvBrU,aAAeA,EACfsQ,UAAYA,EACZC,aAAeA,QCzQ1BuE,GAAmB,SAAC,GAAgC,IAA9BnH,EAA6B,EAA7BA,YAAaoH,EAAgB,EAAhBA,UAEpCrZ,EAAe8I,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAA1CS,WAEFI,EAAW8E,cACjB,EAA8Bf,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAA+CrR,mBAAS,CACpDvE,GAAIyZ,EAAUzZ,GACdK,KAAMoZ,EAAUpZ,KAChBF,OAAQ,GACRG,OAAQF,EAAWwN,MAAM,SAAA/N,GAAG,OAAIA,EAAIM,SAAWsZ,EAAUnN,aAAYhM,SAJzE,mBAAQoZ,EAAR,KAAyBC,EAAzB,KAOMjV,EAAe,SAAAC,GACjBgV,EAAmB,6BACZD,GADW,mBAEb/U,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAqClC,OACI,qCACI,wBAAMkB,UAAU,mBAAmBC,SAnChB,SAAAtB,GACvBA,EAAEwB,iBAGF,I3DwF4BtG,E2DxFtBoW,EAAWxC,GAAa,CAC1BO,eAAgB0F,EAAgBvZ,SAG9B8V,EAAStC,IAKfnT,G3D+E4BX,E2D/EI6Z,E3DgFpC,uCAAO,WAAOlZ,EAAUC,GAAjB,iBAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,WAEFsa,EAJP,gBAI6B/Z,IACNG,GALvB,SAOOoC,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,2BAAkCO,EAAIG,KAAS4Z,GAPpE,OASCpZ,EAAUa,GAAiBxB,IAT5B,gDAYCgB,QAAQC,IAAR,MAZD,yDAAP,0D2D/EIN,EvDgFkC,SAAAX,GACtC,8CAAO,WAAOW,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAqD,GACLA,EAAIlD,OAAOqL,YAAcvL,EAAIga,iBAE9BrZ,EAAUoD,GAA0B,6BAAKX,EAAIlD,QAAV,IAAkBC,GAAIiD,EAAIjD,GAAIoL,UAAWvL,EAAImU,sBARrF,2CAAP,wDuDjFc8F,CAA4BJ,IACtCrH,EAAY1N,GACZ8B,IAAKC,KAAK,wBAAyBgT,EAAgBvZ,OAAQ,sCAAuC,YAP9FyV,EAAYK,EAASrC,MA0BrB,UACI,uBAAK5N,UAAU,iBAAf,UACI,mDACE2P,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAC1C,2BAAS3P,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,kBAAf,6BACA,8BAAM4S,EAAUnN,eAEpB,2BAAStG,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,SAAf,4BACA,wBAAO/B,MAAQ4U,EAAgBvZ,OAAS0E,KAAK,SAAS8B,SAAWjC,EAAe1D,KAAK,OAAO4F,YAAY,8BAE5G,2BAASZ,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,SAAf,sBACA,wBAAOhC,KAAK,SAASC,MAAQ4U,EAAgBpZ,OAASqG,SAAWjC,EAAe1D,KAAK,OAAO4F,YAAY,uBAGhH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBhF,KAAK,SAA3C,qBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBAC4B,IAA1ByT,EAAUlN,aAAqB,yBAAQzF,QApCpC,SAAAnC,GAIb,I3D0G0B9E,G2D7G9B8E,EAAEwB,iBAE6B,IAA1BsT,EAAUlN,eACQ+J,OAAOC,QAAP,4DAAkEkD,EAAUnN,UAA5E,SAEf9L,G3DwGsBX,E2DxGY6Z,E3DyG9C7Y,QAAQC,IAAKjB,GACb,uCAAO,WAAOW,EAAUC,GAAjB,eAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAGO0E,YAAW3B,YAAKtD,EAAF,UAAUO,EAAV,2BAAkCO,EAAIG,MAH3D,OAICQ,EAAUe,GAAmB1B,IAJ9B,gDAMCgB,QAAQC,IAAR,MAND,yDAAP,0D2DzGY2F,IAAKC,KAAK,sBAAV,uBAAkD+S,EAAUnN,UAA5D,iCAAuG,aAI/G+F,EAAY1N,IAyBkEqB,UAAU,gCAA3C,+BC3ExC+T,GAAgB,SAAC,GAA+B,IAA7B1H,EAA4B,EAA5BA,YAAalH,EAAe,EAAfA,SAEnC3K,EAAW8E,cACjB,EAA8Bf,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACOoE,EAAiB9Q,aAAa,SAAAC,GAAK,OAAIA,EAAMzH,WAA7CsY,aACP,EAAyCzV,mBAAS,6BAC3CyV,GAD0C,IAE7ChY,YAAa,MAFjB,mBAAQiY,EAAR,KAAsBC,EAAtB,KA8CA,OACI,qCACI,wBAAMlU,UAAU,gBAAgBC,SAnCb,SAAAtB,GACvBA,EAAEwB,iBAGF,I1DgFyBjE,EEkCMP,EwDlHzBsU,EAAWxC,GAAa,CAC1BzR,YAAaiY,EAAajY,cAGxBiU,EAAStC,IAKfnT,G1DuEyB0B,E0DvEI+X,E1DwEjC,uCAAO,WAAOzZ,EAAUC,GAAjB,iBAAAlB,EAAA,sEAGSD,EAAQmB,IAAWC,KAAnBpB,WAEF6a,EALP,6BAKgCjY,GALhC,IAKwC/B,OAAQ+B,EAAOF,eAE7BhC,UAClBma,EAAkBhP,gBAClBgP,EAAkBnY,YACzBnB,QAAQC,IAAKqZ,GAVd,SAYO/X,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,wBAA+B4C,EAAOlC,KAASma,GAZpE,OAcC3Z,EAAU+B,GAAa,6BAAM4X,GAAP,IAA0Bna,GAAIkC,EAAOlC,OAd5D,kDAiBCa,QAAQC,IAAR,MAjBD,0DAAP,0D0DvEIN,GxDwG+BmB,EwDxGIsY,ExDyGvC,uCAAO,WAAOzZ,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAqD,GAAQ,IAAD,IACZA,EAAIlD,OAAOmC,SAAWP,EAAIxB,QAC3BK,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAIkC,OAASP,EAAIK,iBAE9E,UAAAiB,EAAIlD,OAAOkF,YAAX,eAAiB/C,UAAWP,EAAIxB,QACjCK,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAIiF,KAAK,6BAAMhC,EAAIgC,MAAX,IAAiB/C,OAAQP,EAAIK,mBAElG,UAAAiB,EAAIlD,OAAOoF,UAAX,eAAejD,UAAWP,EAAIxB,QAC/BK,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAImF,GAAG,6BAAMlC,EAAIkC,IAAX,IAAejD,OAAQP,EAAIK,qBAbpG,2CAAP,0DwDxGIyE,IAAKC,KAAK,wBAAyBuT,EAAajY,YAAa,mCAAoC,WAEjGqQ,EAAY1N,IARRiR,EAAYK,EAASrC,MA0BrB,UACI,uBAAK5N,UAAU,iBAAf,UACI,gDACE2P,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE1C,2BAAS3P,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,eAAf,oCACA,8BAAMmT,EAAa7Z,YAEvB,2BAAS6F,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,cAAf,4BACA,wBAAO/B,MAAQmV,EAAajY,YAAc2E,SAtDzC,SAAAhC,GAEjBuV,EAAgB,6BACTD,GADQ,mBAEVtV,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkDsD9D,KAAK,OAAO6D,KAAK,cAAc+B,YAAY,uBAIvH,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBhF,KAAK,SAA3C,oBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBACc,IAAbmF,GAAkB,yBAAQrE,QAjCtB,SAAAnC,GAIb,I1D8HuB3E,G0DjI3B2E,EAAEwB,iBAEgB,IAAbgF,KACkBmL,OAAOC,QAAP,yDAA+DyD,EAAa7Z,OAA5E,QACHK,G1D6HOR,E0D7HwBga,EAAaha,G1D8HpE,uCAAO,WAAOQ,EAAUC,GAAjB,eAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAGO0E,YAAW3B,YAAKtD,EAAF,UAAUO,EAAV,wBAA+BU,KAHpD,OAICQ,EAAUmC,GAAgB3C,IAJ3B,gDAOCa,QAAQC,IAAR,MAPD,yDAAP,2D0D3HIuR,EAAY1N,GACZ8B,IAAKC,KAAK,mBAAV,oBAA4CsT,EAAa7Z,OAAzD,iCAAiG,YAwBjC6F,UAAU,gCAA3C,+BCvE1BoU,GAAmB,SAAC,GAA8D,IAAD,EAA3D/H,EAA2D,EAA3DA,YAAagI,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,aAAcnP,EAAe,EAAfA,SAErE3K,EAAW8E,cACT5D,EAAYwH,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAAvCA,QACR,EAA8B6C,oBAAS,GAAvC,mBAAOoR,EAAP,KAAgBC,EAAhB,KACA,EAA+CrR,mBAAS,CACpDvE,GAAE,UAAE0B,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWma,YAAtC,aAAE,EAAoDta,GACxDua,aAAcD,EACdE,gBAAiBH,EACjBtG,eAAgB,KAJpB,mBAAQ0G,EAAR,KAAyBC,EAAzB,KA0DA,OACI,qCACI,wBAAM1U,UAAU,gBAAgBC,SA5Cb,SAAAtB,GACvBA,EAAEwB,iBAGF,I3D4G4ByI,E2D5GtBqH,EAAWxC,GAAa,CAC1BzR,YAAayY,EAAgB1G,iBAG3BkC,EAAStC,IAKfnT,G3DmG4BoO,E2DnGG,6BACxB6L,GADuB,IAE1B7Y,WAAW,aAAMF,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWma,KAAe1Y,WAAWmK,QAAQ,SAAA6C,GAAG,OAAIA,IAAQyL,GAAmBzL,Q3DkGjI,uCAAO,WAAOpO,EAAUC,GAAjB,eAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IACRsP,EAAIhN,WAAW9B,KAAM8O,EAAImF,gBAH1B,SAIO3R,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,wBAA+BsP,EAAI5O,KAAS,CAC5DG,OAAQyO,EAAI2L,aACZ3Y,WAAYgN,EAAIhN,aANrB,OAQCpB,EAAUgC,GAAiBoM,IAR5B,gDAUC/N,QAAQC,IAAR,MAVD,yDAAP,0D2DhGIN,EzD6HkC,SAAAoO,GACtC,8CAAO,WAAOpO,EAAUC,GAAjB,eAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAGgBE,YAASC,YAAYV,EAAF,UAAUO,EAAV,sBAHnC,cAKEM,SAAS,SAAAqD,GAAQ,IAAD,IAI2H,IAHvIA,EAAIlD,OAAOqL,YAAcwD,EAAI4L,iBAC9Bha,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAIoL,UAAWwD,EAAImF,oBAEhF9Q,EAAIlD,OAAOmC,SAAW0M,EAAI2L,eAAgB,UAAAtX,EAAIlD,OAAOkF,YAAX,eAAiB/C,UAAW0M,EAAI2L,eAAgB,UAAAtX,EAAIlD,OAAOoF,UAAX,eAAejD,UAAW0M,EAAI2L,gBAEpHtX,EAAIlD,OAAO0C,YAAcmM,EAAI4L,iBAC9Bha,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAIyC,UAAWmM,EAAImF,oBAEhF,UAAA9Q,EAAIlD,OAAOkF,YAAX,eAAiBxC,aAAcmM,EAAI4L,iBACpCha,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAIiF,KAAK,6BAAMhC,EAAIlD,OAAOkF,MAAlB,IAAwBxC,UAAWmM,EAAImF,sBAE5G,UAAA9Q,EAAIlD,OAAOoF,UAAX,eAAe1C,aAAcmM,EAAI4L,iBAClCha,EAAUoD,GAA0B,6BAAMX,EAAIlD,QAAX,IAAmBC,GAAIiD,EAAIjD,GAAImF,GAAG,6BAAMlC,EAAIlD,OAAOoF,IAAlB,IAAsB1C,UAAWmM,EAAImF,yBAlBlH,2CAAP,wDyD9Hc4G,CAA4BF,IACtChU,IAAKC,KAAK,wBAAyB+T,EAAgB1G,eAAgB,mCAAoC,WAEvG1B,EAAY1N,IAXRiR,EAAYK,EAASrC,MAmCrB,UACI,uBAAK5N,UAAU,iBAAf,UACI,mDACE2P,GAAW,sBAAK3P,UAAU,YAAf,SAA6B2P,IAE1C,2BAAS3P,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,eAAf,oCACA,8BAAMyT,OAEV,2BAAStU,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,kBAAf,uCACA,8BAAMwT,OAEV,2BAASrU,UAAU,iBAAnB,UACI,wBAAOa,QAAQ,iBAAf,4BACA,wBAAO/B,MAAQ2V,EAAgB1G,eAAiBpN,SApE/C,SAAAhC,GACjBA,EAAEwB,iBAEFuU,EAAmB,6BACZD,GADW,mBAEb9V,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UA+D4D9D,KAAK,OAAO6D,KAAK,iBAAiB+B,YAAY,uBAIhI,uBAAKZ,UAAU,UAAf,UACI,yBAAQA,UAAU,oBAAoBhF,KAAK,SAA3C,oBACA,yBAAQ8F,QAAUuL,EAAcrM,UAAU,iCAA1C,sBACe,IAAbmF,GAAkB,yBAAQrE,QA3CvB,SAAAnC,GAIb,I3D4I0BiK,G2D/I9BjK,EAAEwB,iBAEgB,IAAbgF,KACkBmL,OAAOC,QAAP,4DAAkEkE,EAAgBD,gBAAlF,SAEfha,G3D0IsBoO,E2D1IW,6BAC1B6L,GADyB,IAE5B7Y,WAAW,aAAMF,EAAQkM,MAAM,SAAAjM,GAAG,OAAIA,EAAIxB,SAAWma,KAAe1Y,WAAWmK,QAAQ,SAAA6C,GAAG,OAAIA,IAAQyL,GAAmBzL,Q3DyIzI/N,QAAQC,IAAK8N,GACb,uCAAO,WAAOpO,EAAUC,GAAjB,eAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAGO8C,YAAWC,YAAKtD,EAAF,UAAUO,EAAV,wBAA+BsP,EAAI5O,KAAQ,CAC3DG,OAAQyO,EAAI2L,aACZ3Y,WAAYgN,EAAIhN,aALrB,OAOCpB,EAAUoC,GAAmBgM,IAP9B,gDASC/N,QAAQC,IAAR,MATD,yDAAP,0D2DxIY2F,IAAKC,KAAK,mBAAV,uBAA+C+T,EAAgBD,gBAA/D,iCAAgH,aAIxHnI,EAAY1N,IA6BqDqB,UAAU,gCAA3C,+BC/E3B4U,GAAQ,WAEjB,IAAMpa,EAAW8E,cACjB,EAAoC4D,aAAY,SAAAC,GAAK,OAAIA,EAAMiL,UAAvDyG,EAAR,EAAQA,OAAQpS,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,KACnB+Q,EAAcvQ,aAAY,SAAAC,GAAK,OAAIA,EAAMxJ,QAAzC8Z,UACAO,EAAiB9Q,aAAY,SAAAC,GAAK,OAAIA,EAAMzH,WAA5CsY,aAGF3H,EAAc,SAAA1N,GAChBA,EAAEwB,iBACF3F,EpDXJ,CACIQ,KAAM5B,IoDWNoB,E1DuCJ,CACIQ,KAAM5B,I0DvCNoB,E9D6JJ,CACIQ,KAAM5B,K8D7JNoB,E5DsMJ,CACIQ,KAAM5B,K4DpMV,OACI,uCACI,sBAAK4G,UAAU,sEAAsEc,QAAUuL,IAE/F,uBAAKrM,UAAU,eAAf,UACI,oBAAGc,QAAUuL,EAAcrM,UAAU,eAE/B6U,GAAwB,UAAdpS,GAA2B,eAAC,GAAD,CAAkB4J,YAAcA,EAAc3J,KAAOA,IAG1FmS,GAAwB,YAAdpS,GAA6B,eAAC,GAAD,CAAoB4J,YAAcA,EAAc3J,KAAOA,IAG9FmS,GAAwB,kBAAdpS,GAAmC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAG7HoS,GAAwB,UAAdpS,GAA2B,eAAC,GAAD,CAAkB4J,YAAcA,EAAc3J,KAAOA,KAGxFmS,GAAwB,aAAdpS,GAAgCoS,GAAwB,iBAAdpS,IAAoC,eAAC,GAAD,CAAqB4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAGrKoS,GAAwB,iBAAdpS,GAAkC,eAAC,GAAD,CAAa4J,YAAcA,IAGvEwI,GAAwB,oBAAdpS,GAAqC,eAAC,GAAD,CAAgB4J,YAAcA,IAG7EwI,GAAwB,sBAAdpS,GAAuC,eAAC,GAAD,CAAkB4J,YAAcA,EAAcoH,UAAYA,IAG3GoB,GAAwB,mBAAdpS,GAAoC,eAAC,GAAD,CAAe4J,YAAcA,EAAciI,aAAeN,EAAajL,UAAY5D,SAAW6O,EAAa7O,WAGzJ0P,GAAwB,sBAAdpS,GAAuC,eAAC,GAAD,CAAkB4J,YAAcA,EAAcgI,gBAAkBL,EAAa3K,aAAeiL,aAAeN,EAAajL,UAAY5D,SAAW6O,EAAa7O,WAG7M0P,GAAwB,kBAAdpS,GAAmC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,IAG7HoS,GAAwB,iBAAdpS,GAAkC,eAAC,GAAD,CAA0B4J,YAAcA,EAAc3J,KAAOA,EAAOD,UAAYA,WCnErIqS,GAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElBF,EAAW3R,aAAY,SAAAC,GAAK,OAAIA,EAAMiL,UAAtCyG,OACAvb,EAAQ4J,aAAY,SAAAC,GAAK,OAAIA,EAAMzI,QAAnCpB,IAER,OACI,iCAEQub,GAAU,eAAC,GAAD,IAGVvb,EACMyb,EACA,eAAC,IAAD,CAAU5V,GAAG,eCdtB6V,GAAc,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAI1B,OAFgB7R,aAAY,SAAAC,GAAK,OAAIA,EAAMzI,QAAnCpB,IAIO,eAAC,IAAD,CAAU6F,GAAG,MACd4V,GCXLE,GAAgB,WACzB,OACI,sBAAKjV,UAAU,kBAAf,SACI,4CAAa,+CCYZkV,GAAY,WAErB,IAAM1a,EAAW8E,cACjB,EAAgCf,oBAAU,GAA1C,mBAAO4W,EAAP,KAAiBC,EAAjB,KAeA,OAbApO,qBAAW,WACP,IAAMtM,EAAO0F,cACbiV,YAAoB3a,GAAM,SAAA4F,IACtB,OAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMhH,OACPkB,EAAU0D,GAAOoC,EAAKhH,IAAKgH,EAAKC,cAChC/F,E9D+CZ,uCAAO,WAAOA,EAAUC,GAAjB,iBAAAlB,EAAA,6DACKD,EAAQmB,IAAWC,KAAnBpB,IADL,SAEgBwD,GAAUxD,GAF1B,OAEG0D,EAFH,OAGHxC,EAAUmD,GAAmBX,IAH1B,2CAAP,yD8D9CYxC,ElEmDZ,uCAAO,WAAOA,EAAUC,GAAjB,iBAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAGoBD,GAAgBC,GAHpC,OAGOK,EAHP,OAKCa,EAAUO,GAAkBpB,IAL7B,gDAQCkB,QAAQC,IAAR,MARD,yDAAP,yDkElDYN,EhEoBZ,uCAAO,WAAQA,EAAUC,GAAlB,iBAAAlB,EAAA,sEAESD,EAAQmB,IAAWC,KAAnBpB,IAFT,SAG+BkC,GAAalC,GAH5C,OAGOgc,EAHP,OAKC9a,EAAUsB,GAAewZ,IAL1B,gDAQCza,QAAQC,IAAR,MARD,yDAAP,0DgElBQsa,GAAa,SAIhBD,EACM,eAAC,GAAD,IAKP,eAAC,IAAD,UACI,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAQvI,KAAK,KACLnC,QACI,eAAC,GAAD,UACI,eAAC,GAAD,QAIhB,eAAC,IAAD,CAAQmC,KAAK,WACLnC,QACI,eAAC,GAAD,UACI,eAAC,GAAD,c,kBCjD1BnM,GAAe,CACjBlE,WAAY,GACZgJ,WAAW,EACXqQ,UAAW,MCHTnV,GAAe,CACjB5C,QAAS,GACT0H,WAAW,EACX4Q,aAAc,MCJZ1V,GAAe,CACjBuW,QAAQ,EACRpS,UAAW,KACXC,KAAM,ICHJpE,GAAe,CACjBwO,UAAW,KACX9P,KAAM,ICFJsB,GAAe,CACjBhF,IAAK,KACLuF,KAAM,MCFJP,GAAe,CACjB8I,MAAM,CACF,CACIjN,OAAQ,UACRuN,MAAO,GAEX,CACIvN,OAAQ,UACRuN,MAAO,GAGX,CACIvN,OAAQ,UACRuN,MAAO,KCNb6N,GAAsC,qBAAXjF,QAA0BA,OAAOkF,sCAAyCC,KAGrGC,GAAWC,aAAgB,CAC7B3Y,KHN8B,WAAoC,IAAlCmG,EAAiC,uDAAzB7E,GAAcsX,EAAW,uCAEjE,OAASA,EAAO5a,MAEZ,KAAK5B,EACD,oCACO+J,GADP,IAEInG,KAAM4Y,EAAO3a,UAGrB,KAAK7B,EAML,KAAKA,EAKL,KAAKA,EACD,oCACO+J,GADP,IAEInG,KAAK,CAAG4Y,EAAO3a,SAAX,oBAAuBkI,EAAMnG,SAEzC,KAAK5D,EACD,oCACO+J,GADP,IAEI2J,UAAU,gBACH8I,EAAO3a,WAGtB,KAAK7B,EACD,oCACO+J,GADP,IAEI2J,UAAW,OAEnB,KAAK1T,EACD,oCACO+J,GADP,IAEInG,KAAMmG,EAAMnG,KAAKiH,KAAK,SAAA+B,GAAE,OAAIA,EAAGhM,KAAO4b,EAAO3a,QAAQjB,GAAKgM,EAAK4P,EAAO3a,aAE9E,KAAK7B,EACD,oCACO+J,GADP,IAEInG,KAAMmG,EAAMnG,KAAK+I,QAAQ,SAAAC,GAAE,OAAIA,EAAGhM,KAAO4b,EAAO3a,SAAW+K,OAEnE,KAAK5M,EAKL,KAAKA,EACD,oCACO+J,GADP,IAEInG,KAAK,CAAG4Y,EAAO3a,SAAX,oBAAuBkI,EAAMnG,SAGzC,KAAK5D,EACD,oCACO+J,GADP,IAEInG,KAAMmG,EAAMnG,KAAKiH,KAAK,SAAA+B,GAAE,OAAIA,EAAGZ,YAAcwQ,EAAO3a,QAAQ4Y,gBAAhC,6BAAuD7N,GAAvD,IAA2DZ,UAAWwQ,EAAO3a,QAAQ+S,eAAgB1T,OAAQsb,EAAO3a,QAAQX,SAAW0L,OAsE3K,KAAK5M,EACD,oCACO+J,GADP,IAEInG,KAAM,GACN8P,UAAW,OAInB,QACI,OAAO3J,IGtIfiL,OJNyB,WAAmC,IAAjCjL,EAAgC,uDAA1B7E,GAAcsX,EAAY,uCAC3D,OAASA,EAAO5a,MAEZ,KAAK5B,EACD,OAAO,6BACA+J,GADP,IAEI0R,QAAQ,EACRpS,UAAWmT,EAAO3a,QAAQZ,KAC1BqI,KAAMkT,EAAO3a,QAAQyH,KACrBC,MAAOiT,EAAO3a,QAAQ0H,QAG9B,KAAKvJ,EACD,OAAO,6BACA+J,GADP,IAEI0R,QAAQ,EACRpS,UAAW,KACXC,KAAM,GACNC,MAAO,OAGf,QACI,OAAOQ,IIffxJ,KNN6B,WAAoC,IAAlCwJ,EAAiC,uDAA1B7E,GAAcsX,EAAY,uCAEhE,OAASA,EAAO5a,MAEZ,KAAK5B,GACD,oCACO+J,GADP,IAEI/I,WAAYwb,EAAO3a,UAG3B,KAAK7B,EACD,oCACO+J,GADP,IAEI/I,WAAW,GAAD,oBAAO+I,EAAM/I,YAAb,CAAyBwb,EAAO3a,YAIlD,KAAK7B,EACD,oCACO+J,GADP,IAEI/I,WAAY+I,EAAM/I,WAAW6J,KAAK,SAAApK,GAAG,OAAIA,EAAIG,KAAO4b,EAAO3a,QAAQjB,GAAK4b,EAAO3a,QAAUpB,OAGjG,KAAKT,EACD,oCACO+J,GADP,IAEIC,WAAW,IAGnB,KAAKhK,GACD,oCACO+J,GADP,IAEIC,WAAW,IAGnB,KAAKhK,EACD,oCACO+J,GADP,IAEI/I,WAAY+I,EAAM/I,WAAW2L,QAAQ,SAAAlM,GAAG,OAAIA,EAAIG,KAAO4b,EAAO3a,QAAQjB,IAAMH,OAGpF,KAAKT,GACD,oCACO+J,GADP,IAEIsQ,UAAWmC,EAAO3a,UAG1B,KAAK7B,GACD,oCACO+J,GADP,IAEIsQ,UAAW,OAGnB,KAAKra,GACD,oCACO+J,GADP,IAEI/I,WAAY,GACZgJ,WAAW,EACXqQ,UAAW,OAInB,QACI,OAAOtQ,IMxDfzH,QLP0B,WAAoC,IAAlCyH,EAAiC,uDAA1B7E,GAAcsX,EAAY,uCAE7D,OAASA,EAAO5a,MAEZ,KAAK5B,EACD,oCACO+J,GADP,IAEIzH,QAASka,EAAO3a,UAGxB,KAAK7B,EACD,oCACO+J,GADP,IAEIzH,QAAQ,GAAD,oBAAOyH,EAAMzH,SAAb,CAAsBka,EAAO3a,YAI5C,KAAK7B,EACD,oCACO+J,GADP,IAEIzH,QAASyH,EAAMzH,QAAQuI,KAAK,SAAA+B,GAAE,OAAIA,EAAG7L,SAAWyb,EAAO3a,QAAQd,OAASyb,EAAO3a,QAAU+K,OAGjG,KAAK5M,EAED,OADAyB,QAAQC,IAAK8a,EAAO3a,SACpB,6BACOkI,GADP,IAEIzH,QAASyH,EAAMzH,QAAQuI,KAAK,SAAAtI,GAAG,OAAIA,EAAI3B,KAAO4b,EAAO3a,QAAQjB,GAAK4b,EAAO3a,QAAUU,OAG3F,KAAKvC,EACD,oCACO+J,GADP,IAEIzH,QAASyH,EAAMzH,QAAQuI,KAAK,SAAAtI,GAAG,OAAIA,EAAIxB,SAAWyb,EAAO3a,QAAQsZ,aACnD5Y,EADqB,6BAEhBA,GAFgB,IAEXC,WAAYD,EAAIC,WAAWqI,KAAK,SAAA2E,GAAG,OAAIA,IAAQgN,EAAO3a,QAAQuZ,gBAC5DoB,EAAO3a,QAAQ8S,eACfnF,YAGlC,KAAKxP,EACD,oCACO+J,GADP,IAEIC,WAAW,IAGnB,KAAKhK,EACD,oCACO+J,GADP,IAEIC,WAAW,IAGnB,KAAKhK,EACD,oCACO+J,GADP,IAEIzH,QAASyH,EAAMzH,QAAQqK,QAAQ,SAAApK,GAAG,OAAIA,EAAI3B,KAAO4b,EAAO3a,SAAWU,OAG3E,KAAKvC,EACD,oCACO+J,GADP,IAEIzH,QAASyH,EAAMzH,QAAQuI,KAAK,SAAAtI,GAAG,OAAIA,EAAIxB,SAAWyb,EAAO3a,QAAQsZ,aACnD5Y,EADqB,6BAEhBA,GAFgB,IAEXC,WAAYga,EAAO3a,QAAQW,kBAI3D,KAAKxC,EACD,oCACO+J,GADP,IAEI6Q,aAAc4B,EAAO3a,UAG7B,KAAK7B,EACD,oCACO+J,GADP,IAEI6Q,aAAc,OAGtB,KAAK5a,EACD,oCACO+J,GADP,IAEIzH,QAAS,GACT0H,WAAW,EACX4Q,aAAc,OAGtB,QACI,OAAO7Q,IKhFfiE,MDI0B,WAAmC,IAAjCjE,EAAgC,uDAAzB7E,GAAcsX,EAAW,uCAE5D,OAASA,EAAO5a,OACP5B,GACD,6BACO+J,GADP,IAGIiE,MAAOwO,EAAO3a,UAIXkI,GCdfzI,KFXuB,WAAqC,IAAnCyI,EAAkC,uDAA1B7E,GAAcsX,EAAY,uCAE3D,OAASA,EAAO5a,MAEZ,KAAK5B,GACD,oCACO+J,GADP,IAEI7J,IAAKsc,EAAO3a,QAAQ3B,IACpBuF,KAAM+W,EAAO3a,QAAQkD,WAG7B,KAAK/E,GACD,oCACO+J,GADP,IAEI7J,IAAK,KACLuF,KAAM,OAGd,QACI,OAAOsE,MELN0S,GAAQC,aACjBJ,GACAH,GACIQ,aAAiBC,QCXVC,OARf,WACI,OACI,eAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,eAAC,GAAD,O,OCHZK,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b56fb98e.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { GoogleAuthProvider } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBX0u1mqveILXYZTpAk7IYYZ1LpETpP-XQ\",\r\n    authDomain: \"cuentas-claras-react.firebaseapp.com\",\r\n    projectId: \"cuentas-claras-react\",\r\n    storageBucket: \"cuentas-claras-react.appspot.com\",\r\n    messagingSenderId: \"668234537938\",\r\n    appId: \"1:668234537938:web:1e1d45c820953a6fd3860b\",\r\n    measurementId: \"G-GZG5TZLLN9\"\r\n  };\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider()\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    analytics\r\n}","export const types = {\r\n\r\n    nuevoIngreso: '[Movimientos] Nuevo Ingreso',\r\n    nuevoGasto: '[Movimientos] Nuevo Gasto',\r\n    nuevaTransferencia: '[Movimientos] Nueva Transferencia',\r\n    insertarMovActivo: '[Movimientos] Insertar Movimiento Activo',\r\n    eliminarMovActivo: '[Movimientos] Eliminar Movimiento Activo',\r\n    actualizarMovimiento: '[Movimientos] Actualizar Movimiento',\r\n    eliminarMovimiento: '[Movimientos] Eliminar Movimientos',\r\n    nuevaDeuda: '[Movimientos] Nueva Deuda',\r\n    editarMontosDeuda: '[Movimientos] Editar Montos Deuda',\r\n    eliminarCuotaDeuda: '[Movimientos] Eliminar Cuota Deuda',\r\n    nuevoPrestamo: '[Movimientos] Nuevo Prestamo',\r\n    editarNombreCategoria: '[Movimientos] Editar Nombre Categoria',\r\n    editarNombreCuenta: '[Movimientos] Editar Nombre Cuenta',\r\n    editarNombreSubcuenta: '[Movimientos] Editar Nombre Subcuenta',\r\n    limpiarMovimientos: '[Movimientos] Limpiar Movimientos',\r\n    cargarMovimientos: '[Movimientos] Cargar Movimientos',\r\n\r\n    openModal: '[Modal] Open Modal',\r\n    closeModal: '[Modal] Close Modal',\r\n\r\n    agregarCuenta: '[Cuentas] Agregar Cuenta',\r\n    eliminarCuenta: '[Cuentas] Eliminar Cuenta',\r\n    editarCuenta: '[Cuentas] Editar Cuenta',\r\n    agregarSubcuenta: '[Cuentas] Agregar Subcuenta',\r\n    eliminarSubcuenta: '[Cuentas] Eliminar Subcuenta',\r\n    editarSubcuenta: '[Cuentas] Editar Subcuenta',\r\n    abrirModoEdicionCuentas: '[Cuentas] Abrir Modo Edicion',\r\n    cerrarModoEdicionCuentas: '[Cuentas] Cerrar Modo Edicion',\r\n    insertarCuentaActiva: '[Cuentas] Insertar cuenta activa',\r\n    eliminarCuentaActiva: '[Cuentas] Eliminar cuenta activa',\r\n    limpiarCuentas: '[Cuentas] Limpiar Cuentas',\r\n    cargarCuentas: '[Cuentas] Cargar Cuentas',\r\n\r\n    agregarCategoria: '[Categorias] Agregar Categoria',\r\n    eliminarCategoria: '[Categorias] Eliminar Categoria',\r\n    editarCategoria: '[Categorias] Editar Categoria',\r\n    botonEditarCategoriaVisible: '[Categorias] Boton Editar Categoria Visible',\r\n    abrirModoEdicionCategorias: '[Categorias] Abrir Modo Edicion',\r\n    cerrarModoEdicionCategorias: '[Categorias] Cerrar Modo Edicion',\r\n    insertarCategoriaActiva: '[Categorias] Insertar Categoria activa',\r\n    eliminarCategoriaActiva: '[Categorias] Eliminar Categoria activa',\r\n    limpiarCategorias: '[Categorias] Limpiar Categorias',\r\n    cargarCategorias: '[Categorias] Cargar Categorias',\r\n\r\n    actualizarValores: '[Valores] Actualizar Valores',\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n\r\n}","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadCategorias = async( uid ) => {\r\n    const catsCollection = await getDocs( collection( db, `${ uid }/app/categorias` ) )\r\n    const cats = []\r\n\r\n    catsCollection.forEach( cat => {\r\n        cats.push({\r\n            ...cat.data(),\r\n            id: cat.id\r\n        })\r\n    })\r\n\r\n    cats.sort( ( a, b) => a.nombre > b.nombre ? 1 : -1 )\r\n    \r\n    return cats\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadCategorias } from '../helpers/loadCategorias';\r\nimport { types } from \"../types/types\";\r\n\r\nconst categorias = [\r\n        {\r\n            nombre: 'Materiales de cocina',\r\n            tipo: 'gasto',\r\n            sector: 'hogar'\r\n        },\r\n        {\r\n            nombre: 'Comida',\r\n            tipo: 'gasto',\r\n            sector: 'gastos varios'\r\n        },\r\n        {\r\n            nombre: 'Sueldo',\r\n            tipo: 'ingreso',\r\n            sector: 'ingresos varios'\r\n        },\r\n        {\r\n            nombre: 'Ventas',\r\n            tipo: 'ingreso',\r\n            sector: 'ingresos varios'\r\n        },\r\n        {\r\n            nombre: 'Luz',\r\n            tipo: 'gasto',\r\n            sector: 'servicios'\r\n        },\r\n        {\r\n            nombre: 'Gas',\r\n            tipo: 'gasto',\r\n            sector: 'servicios'\r\n        },\r\n        {\r\n            nombre: 'Netflix',\r\n            tipo: 'gasto',\r\n            sector: 'streaming'\r\n        },\r\n        {\r\n            nombre: 'Aporte inicial',\r\n            tipo: 'ingreso',\r\n            sector: 'Aporte inicial'\r\n        },\r\n        {\r\n            nombre: 'Intereses',\r\n            tipo: 'ingreso',\r\n            sector: 'Intereses'\r\n        },\r\n        {\r\n            nombre: 'Perdida',\r\n            tipo: 'gasto',\r\n            sector: 'Perdida'\r\n        },\r\n        \r\n    ]\r\n\r\nexport const startAgregarCategoriasPorDefecto = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            categorias.forEach( async cat => {\r\n\r\n                await addDoc( collection( db, `${ uid }/app/categorias` ), cat )\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCargarCategorias = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const cats = await loadCategorias( uid );\r\n\r\n            dispatch( cargarCategorias( cats ))\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const cargarCategorias = cats => (\r\n    {\r\n        type: types.cargarCategorias,\r\n        payload: cats\r\n    }\r\n)\r\n\r\nexport const startAgregarCategoria = cat => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const nuevaCat = await addDoc( collection( db, `${ uid }/app/categorias`), cat );\r\n            dispatch( agregarCategoria( { id: nuevaCat.id, ...cat }))\r\n\r\n        } catch (err) {\r\n            console.log( err );\r\n        }   \r\n\r\n    }\r\n}\r\n\r\nexport const agregarCategoria = cat => (\r\n    {\r\n        type: types.agregarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const startEditarCategoria = cat => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const catToFirestore = { ...cat };\r\n            delete catToFirestore.id;\r\n\r\n            await updateDoc( doc( db, `${ uid }/app/categorias/${ cat.id }` ), catToFirestore );\r\n\r\n            dispatch( editarCategoria( cat ))\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const editarCategoria = cat => (\r\n    {\r\n        type: types.editarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const abrirModoEdicionCategorias = () => (\r\n    {\r\n        type: types.abrirModoEdicionCategorias\r\n    }\r\n)\r\n\r\nexport const cerrarModoEdicionCategorias = () => (\r\n    {\r\n        type: types.cerrarModoEdicionCategorias\r\n    }\r\n)\r\n\r\nexport const startEliminarCategoria = cat => {\r\n    console.log( cat );\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await deleteDoc( doc( db, `${ uid }/app/categorias/${ cat.id }` ));\r\n            dispatch( eliminarCategoria( cat ) )\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarCategoria = cat => (\r\n    {\r\n        type: types.eliminarCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const insertarCategoriaActiva = cat =>(\r\n    {\r\n        type: types.insertarCategoriaActiva,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const eliminarCategoriaActiva = () => (\r\n    {\r\n        type: types.eliminarCategoriaActiva\r\n    }\r\n)\r\n\r\nexport const limpiarCategorias = () => (\r\n    {\r\n        type: types.limpiarCategorias\r\n    }\r\n)","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadCuentas = async( uid ) => {\r\n    const cuentasCollection = await getDocs( collection( db, `${ uid }/app/cuentas` ) )\r\n    const cuentas = []\r\n\r\n    cuentasCollection.forEach( cta => {\r\n        cuentas.push({\r\n            ...cta.data(),\r\n            id: cta.id\r\n        })\r\n    })\r\n\r\n    cuentas.sort( ( a, b) => a.nombre > b.nombre ? 1 : -1 )\r\n    \r\n    return cuentas\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadCuentas } from '../helpers/loadCuentas';\r\nimport { types } from \"../types/types\";\r\n\r\nconst cuentas = [\r\n    {\r\n        nombre: 'ARS',\r\n        subcuentas: ['Efectivo', 'Banco HSBC', 'Mercado Pago']\r\n    },{\r\n        nombre: 'USD',\r\n        subcuentas: ['Efectivo','Banco HSBC', 'Plazo Fijo']\r\n    },\r\n    {\r\n        nombre: 'BTC',\r\n        subcuentas: ['Binance', 'Decrypto']\r\n    },\r\n    {\r\n        nombre: 'ETH',\r\n        subcuentas: ['Binance', 'Decrypto']\r\n    },\r\n    {\r\n        nombre: 'Activos',\r\n        subcuentas: ['Auto', 'Moto', 'Casa', 'Terreno', 'Bici', 'NFTs' ]\r\n    },\r\n    {\r\n        nombre: 'Otras criptomonedas',\r\n        subcuentas: ['Ethereum', 'Cardano']\r\n    },\r\n]\r\n\r\nexport const startAgregarCuentasPorDefecto = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            cuentas.forEach( async cta => {\r\n                await addDoc( collection( db, `${ uid }/app/cuentas`), cta )\r\n\r\n            })\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCargarCuentas = () => {\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const cuentasFirebase = await loadCuentas( uid )\r\n\r\n            dispatch( cargarCuentas( cuentasFirebase ) )\r\n\r\n        } catch ( err) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nconst cargarCuentas = cuentas => (\r\n    {\r\n        type: types.cargarCuentas,\r\n        payload: cuentas\r\n    }\r\n)\r\n\r\nexport const startAgregarCuenta = cta => {\r\n    return async( dispatch, getState ) =>{\r\n        try {\r\n            const { uid } = getState().auth;\r\n            const nuevaCuenta = await addDoc( collection( db, `${ uid }/app/cuentas` ), cta )\r\n            dispatch( agregarCuenta({\r\n                id: nuevaCuenta.id,\r\n                ...cta\r\n            }))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const agregarCuenta = cuenta => (\r\n    {\r\n        type: types.agregarCuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startAgregarSubcuenta = cuenta => {\r\n    console.log( cuenta );\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ cuenta.id }`), cuenta )\r\n            dispatch( agregarSubcuenta( cuenta ))\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const agregarSubcuenta = cuenta => (\r\n    {\r\n        type: types.agregarSubcuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startEditarCuenta = cuenta => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n\r\n            const cuentaToFirestore = { ...cuenta, nombre: cuenta.nuevaCuenta }\r\n\r\n            delete cuentaToFirestore.id\r\n            delete cuentaToFirestore.cantidad\r\n            delete cuentaToFirestore.nuevaCuenta\r\n            console.log( cuentaToFirestore );\r\n    \r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ cuenta.id }` ), cuentaToFirestore )\r\n            \r\n            dispatch( editarCuenta( { ...cuentaToFirestore, id: cuenta.id } ));\r\n\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const editarCuenta = cuenta => (\r\n    {\r\n        type: types.editarCuenta,\r\n        payload: cuenta\r\n    }\r\n)\r\n\r\nexport const startEditarSubcuenta = sub => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            sub.subcuentas.push( sub.nuevaSubcuenta )\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ sub.id }` ), {\r\n                nombre: sub.cuentaActual,\r\n                subcuentas: sub.subcuentas\r\n            })\r\n            dispatch( editarSubcuenta( sub ))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const editarSubcuenta = subcuenta => (\r\n    {\r\n        type: types.editarSubcuenta,\r\n        payload: subcuenta\r\n    }\r\n)\r\n\r\nexport const abrirModoEdicionCuentas = () => (\r\n    {\r\n        type: types.abrirModoEdicionCuentas\r\n    }\r\n)\r\n\r\nexport const cerrarModoEdicionCuentas = () => (\r\n    {\r\n        type: types.cerrarModoEdicionCuentas\r\n    }\r\n)\r\n\r\nexport const startEliminarCuenta = id => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await deleteDoc( doc( db, `${ uid }/app/cuentas/${ id }`))\r\n            dispatch( eliminarCuenta( id ))\r\n            \r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarCuenta = id => (\r\n    {\r\n        type: types.eliminarCuenta,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const startEliminarSubcuenta = sub => {\r\n    console.log( sub );\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { uid } = getState().auth;\r\n            await updateDoc( doc( db, `${ uid }/app/cuentas/${ sub.id }`), {\r\n                nombre: sub.cuentaActual,\r\n                subcuentas: sub.subcuentas\r\n            })\r\n            dispatch( eliminarSubcuenta( sub ))\r\n        } catch ( err ) {\r\n            console.log( err );\r\n        }\r\n    }\r\n}\r\n\r\nexport const eliminarSubcuenta = subcuenta => (\r\n    {\r\n        type: types.eliminarSubcuenta,\r\n        payload: subcuenta\r\n    }\r\n)\r\n\r\nexport const insertarCuentaActiva = cta =>(\r\n    {\r\n        type: types.insertarCuentaActiva,\r\n        payload: cta\r\n    }\r\n)\r\n\r\nexport const eliminarCuentaActiva = () => (\r\n    {\r\n        type: types.eliminarCuentaActiva\r\n    }\r\n)\r\n\r\nexport const limpiarCuentas = () => (\r\n    {\r\n        type: types.limpiarCuentas\r\n    }\r\n)","import { getDocs, collection } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config'\r\n\r\nexport const loadMovs = async( uid ) => {\r\n    const movsCollection = await getDocs( collection( db, `${ uid }/app/movimientos` ) )\r\n    const movs = []\r\n\r\n    movsCollection.forEach( mov => {\r\n        movs.push({\r\n            ...mov.data(),\r\n            id: mov.id,\r\n            fecha: new Date( mov.data().fecha ),\r\n        })\r\n    })\r\n\r\n    movs.sort( ( a, b) => a.fecha > b.fecha ? -1 : 1 )\r\n    \r\n    return movs\r\n}","import { addDoc, collection, updateDoc, doc, deleteDoc, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadMovs } from '../helpers/loadMovs';\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNuevoMovimiento = ( mov, tipo ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth\r\n        try {\r\n            const doc = await addDoc( collection( db, `${ uid }/app/movimientos`), mov )\r\n\r\n            tipo === 'nuevoIngreso' && dispatch( nuevoIngreso({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevoGasto' && dispatch( nuevoGasto({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevaTransferencia' && dispatch( nuevaTransferencia({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevoPrestamo' && dispatch( nuevoPrestamo({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            tipo === 'nuevaDeuda' && dispatch( nuevaDeuda({ id: doc.id, ...mov, fecha: new Date( mov.fecha ) }))\r\n            \r\n        } catch (err) {\r\n            console.log( err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const nuevoIngreso = (mov) => (\r\n    {\r\n        type: types.nuevoIngreso,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevoGasto = (mov) => (\r\n    {\r\n        type: types.nuevoGasto,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevaTransferencia = (mov) => (\r\n    {\r\n        type: types.nuevaTransferencia,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevaDeuda = mov => (\r\n    {\r\n        type: types.nuevaDeuda,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const nuevoPrestamo = mov => (\r\n    {\r\n        type: types.nuevoPrestamo,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const insertarMovimientoActivo = mov => (\r\n    {\r\n        type: types.insertarMovActivo,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const eliminarMovimientoActivo = () => (\r\n    {\r\n        type: types.eliminarMovActivo,\r\n    }\r\n)\r\n\r\nexport const startCargarMovimientos = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n        const movs = await loadMovs( uid );\r\n        dispatch( cargarMovimientos( movs ))\r\n    }\r\n}\r\n\r\nconst cargarMovimientos = movs => (\r\n    {\r\n        type: types.cargarMovimientos,\r\n        payload: movs\r\n    }\r\n)\r\n\r\nexport const startActualizarMovimiento = ( mov ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth\r\n\r\n        const movToFirestore = { ...mov };\r\n        delete movToFirestore.id;\r\n\r\n        await updateDoc( doc( db, `${ uid }/app/movimientos/${ mov.id }` ), movToFirestore )\r\n\r\n        dispatch( actualizarMovimiento( { ...mov, fecha: new Date( mov.fecha ) } ));\r\n    }\r\n}\r\n\r\nexport const actualizarMovimiento = mov => (\r\n    {\r\n        type: types.actualizarMovimiento,\r\n        payload: mov\r\n    }\r\n)\r\n\r\nexport const startEliminarMovimiento = id => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await deleteDoc( doc( db, `${ uid }/app/movimientos/${ id }`))\r\n        dispatch( eliminarMovimiento( id ))\r\n    }\r\n}\r\n\r\nexport const eliminarMovimiento = id => (\r\n    {\r\n        type: types.eliminarMovimiento,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const startEditarNombreCategoria = cat => {\r\n    return async( dispatch, getState ) =>{\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) )\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().categoria === cat.categoriaActual ) {\r\n\r\n                dispatch( startActualizarMovimiento( {...mov.data(), id: mov.id, categoria: cat.nuevaCategoria } ) )\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const editarNombreCategoria = cat =>(\r\n    {\r\n        type: types.editarNombreCategoria,\r\n        payload: cat\r\n    }\r\n)\r\n\r\nexport const startEditarNombreCuenta = cta => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, cuenta : cta.nuevaCuenta }))\r\n            }\r\n            if ( mov.data().from?.cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, from: { ...mov.from, cuenta: cta.nuevaCuenta } }))\r\n            }\r\n            if ( mov.data().to?.cuenta === cta.nombre ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, to: { ...mov.to, cuenta: cta.nuevaCuenta } }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const editarNombreCuenta = cta =>(\r\n    {\r\n        type: types.editarNombreCuenta,\r\n        payload: cta\r\n    }\r\n) */\r\n\r\nexport const startEditarNombreSubcuenta = sub => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.data().categoria === sub.subcuentaActual ) {\r\n                dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, categoria: sub.nuevaSubcuenta }))\r\n            }\r\n            if ( mov.data().cuenta === sub.cuentaActual || mov.data().from?.cuenta === sub.cuentaActual || mov.data().to?.cuenta === sub.cuentaActual ) {\r\n                \r\n                if ( mov.data().subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, subcuenta: sub.nuevaSubcuenta }))\r\n                }\r\n                if ( mov.data().from?.subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, from: { ...mov.data().from, subcuenta: sub.nuevaSubcuenta } }))\r\n                }\r\n                if ( mov.data().to?.subcuenta === sub.subcuentaActual ) {\r\n                    dispatch( startActualizarMovimiento( { ...mov.data(), id: mov.id, to: { ...mov.data().to, subcuenta: sub.nuevaSubcuenta } }))\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n/* export const editarNombreSubcuenta = sub => (\r\n    {\r\n        type: types.editarNombreSubcuenta,\r\n        payload: sub\r\n    }\r\n) */\r\n\r\nexport const startEditarMontosDeuda = deuda => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.id === deuda.idReferencia ) {\r\n                dispatch( startActualizarMovimiento( {\r\n                    ...mov.data(),\r\n                    id: mov.id,\r\n                    subcuenta: deuda.subcuenta,\r\n                    cantidadPagada: ( mov.data().cantidadPagada - deuda.cantidadAnterior + deuda.cantidadNueva ),\r\n                    cuotasPagadas: ( mov.data().cuotasPagadas - deuda.cuotasAnterior + deuda.cuotasNuevas ),\r\n                    estado: ( mov.data().cantidad - (mov.data().cantidadPagada - deuda.cantidadAnterior) - deuda.cantidadNueva) > 0 ? 'pendiente' : 'saldado'\r\n                }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const editarMontosDeuda = deuda =>(\r\n{\r\n    type: types.editarMontosDeuda,\r\n    payload: deuda\r\n}\r\n) */\r\n\r\nexport const startEliminarCuotaDeuda = deuda => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const movs = await getDocs( collection( db, `${ uid }/app/movimientos` ) );\r\n\r\n        movs.forEach( mov => {\r\n            if ( mov.id === deuda.idReferencia ) {\r\n                dispatch( actualizarMovimiento( {\r\n                    ...mov.data(),\r\n                    id: mov.id,\r\n                    cantidadPagada: ( mov.data().cantidadPagada - deuda.cantidadAnterior ),\r\n                    cuotasPagadas: ( mov.data().cuotasPagadas - deuda.cuotasAnterior ),\r\n                    estado: ( mov.data().cantidad - ( mov.data().cuotasPagadas - deuda.cuotasAnterior ) ) > 0 ? 'pendiente' : 'saldado'\r\n                }))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const eliminarCuotaDeuda = deuda =>(\r\n    {\r\n        type: types.eliminarCuotaDeuda,\r\n        payload: deuda\r\n    }\r\n) */\r\n    \r\nexport const limpiarMovimientos = () => (\r\n    {\r\n        type: types.limpiarMovimientos\r\n    }\r\n)","import { getAuth, signInWithPopup, signOut, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport Swal from 'sweetalert2'\r\nimport { googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from '../types/types'\r\nimport { limpiarCategorias, startAgregarCategoriasPorDefecto } from './categoriasActions'\r\nimport { limpiarCuentas, startAgregarCuentasPorDefecto } from './cuentasActions'\r\nimport { limpiarMovimientos } from './movsActions'\r\n\r\nexport const startingLoginWithGoogle = () => {\r\n    return async( dispatch, getState ) =>{\r\n        const auth = getAuth()\r\n        const { user } = await signInWithPopup( auth, googleAuthProvider )\r\n        dispatch( login( user.uid, user.displayName ))\r\n\r\n        if ( !localStorage.getItem('clientGoogle' ) ) {\r\n            dispatch( startAgregarCategoriasPorDefecto() )\r\n            dispatch( startAgregarCuentasPorDefecto() )\r\n            localStorage.setItem('clientGoogle', true )\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = ( uid, userName ) =>(\r\n    {\r\n        type: types.login,\r\n        payload:{\r\n            uid, userName\r\n        }\r\n    }\r\n)\r\n\r\nexport const startingLogout = () => {\r\n    return( async dispatch => {\r\n        const auth = getAuth();\r\n        await signOut( auth )\r\n        dispatch( logout() )\r\n        dispatch( limpiarMovimientos() )\r\n        dispatch( limpiarCuentas() )\r\n        dispatch( limpiarCategorias() )\r\n    })\r\n}\r\n\r\nconst logout = () => (\r\n    {\r\n        type: types.logout\r\n    }\r\n)\r\n\r\nexport const startingRegisterWithEmail = ( nombre, email, password ) => {\r\n    return async( dispatch ) =>{\r\n        try {\r\n            const auth = getAuth();\r\n            const { user } = await createUserWithEmailAndPassword( auth, email, password )\r\n            await updateProfile( user, { displayName: nombre })\r\n            dispatch( login( user.uid, nombre ))\r\n\r\n            if ( !localStorage.getItem('clientEmail' ) ) {\r\n                dispatch( startAgregarCategoriasPorDefecto() )\r\n                dispatch( startAgregarCuentasPorDefecto() )\r\n                localStorage.setItem('clientEmail', true )\r\n            }\r\n\r\n        } catch (err) {\r\n            if ( err.code === 'auth/email-already-in-use' ) {\r\n                \r\n                Swal.fire('Ups', 'Ya existe una cuenta con ese mail', 'error')\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const startingLoginWithEmail = ( email, password ) => {\r\n    return async dispatch => {\r\n        try {\r\n            const auth = getAuth();\r\n            const { user } = await signInWithEmailAndPassword( auth, email, password )\r\n            dispatch( login( user.uid, user.displayName ))\r\n        } catch (err) {\r\n            if ( err.code === 'auth/wrong-password') {\r\n                Swal.fire('Contraseña incorrecta', 'Usuario y contraseña no coinciden', 'error')\r\n            }\r\n            if ( err.code === 'auth/user-not-found') {\r\n                Swal.fire( 'Email incorrecto', 'Usuario no encontrado', 'error')\r\n            }\r\n        }\r\n        \r\n    }\r\n}","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [formValues, setFormValues] = useState( initialState )\r\n\r\n    const handleChange = (e)=> {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ e.target.name ]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChangeCalendar = e => {\r\n        setFormValues({\r\n            ...formValues,\r\n            fecha: e\r\n        })\r\n    }\r\n\r\n    const handleChangeFrom = e =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            from:{\r\n                ...formValues.from,\r\n                [ e.target.name ]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChangeTo = e =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            to:{\r\n                ...formValues.to,\r\n                [ e.target.name ]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    return [ formValues, handleChange, handleChangeCalendar, handleChangeFrom, handleChangeTo ];\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport validator from 'validator';\r\nimport { startingLoginWithEmail, startingLoginWithGoogle } from \"../../actions/authActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginForm = ({ handleChangeScreen }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [errorForm, setErrorForm] = useState( false )\r\n\r\n    const loginWithGoogle = e => {\r\n        e.preventDefault()\r\n        dispatch( startingLoginWithGoogle() )\r\n    }\r\n\r\n    const [ formValues, handleChange ] = useForm({\r\n        email: '',\r\n        pass: '',\r\n    })\r\n\r\n    const isFormLoginValid = () =>{\r\n        if ( !validator.isEmail( formValues.email1.trim() )) {\r\n            setErrorForm( 'Email invalido')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n        if ( isFormLoginValid ) {\r\n            \r\n            dispatch( startingLoginWithEmail( formValues.email, formValues.pass ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__container flip-scale-up-ver\">\r\n            <div className=\"img-user\">\r\n                <i className=\"bi bi-person\"></i>\r\n            </div>\r\n            <h1>Cuentas claras</h1>\r\n            {\r\n                errorForm && \r\n                    <div className=\"form__error\">\r\n                        <p className=\"msg-error\">{ errorForm }</p>\r\n                    </div>\r\n            }\r\n            <form onSubmit={ handleLogin }>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input name=\"email\" value={ formValues.email } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Email usuario\"/>\r\n                    <label htmlFor=\"floatingInput\">Email usuario</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass\" value={ formValues.pass } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\"/>\r\n                    <label htmlFor=\"floatingPassword\">Password</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn submit\">Ingresar</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresar con Google</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ loginWithGoogle }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            Sign in with google\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn change\" onClick={ handleChangeScreen }>¿No estás registrado? Registrate ahora</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { useState } from \"react\";\r\nimport { startingRegisterWithEmail } from \"../../actions/authActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const RegisterForm = ({ handleChangeScreen }) => {\r\n\r\n    const [errorForm, setErrorForm] = useState( false )\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, handleChange ] = useForm({\r\n        nombre: '',\r\n        email1: '',\r\n        email2: '',\r\n        pass1: '',\r\n        pass2: ''\r\n    })\r\n\r\n    const isFormRegisterValid = () =>{\r\n        if ( formValues.nombre.trim().length < 3 || !validator.isAlpha( formValues.nombre.trim(), ['es-ES'] ) ) {\r\n            setErrorForm('Nombre invalido')\r\n            return false;\r\n        }\r\n        if ( !validator.isEmail( formValues.email1.trim() )) {\r\n            setErrorForm( 'Email invalido')\r\n            return false;\r\n        }\r\n        if ( formValues.email2.trim() !== formValues.email1.trim() ) {\r\n            setErrorForm( 'Los emails deben ser iguales')\r\n            return false;\r\n        }\r\n        if ( !validator.isStrongPassword( formValues.pass1.trim(), { \r\n            minLength: 5,\r\n            minLowercase: 1,\r\n            minUppercase: 1,\r\n            minNumbers: 1,\r\n            minSymbols: 0,\r\n        }) ) {\r\n            setErrorForm( 'La contraseña debe tener al menos 5 caracteres, mayusculas, minusculas y numeros')\r\n            return false;\r\n        }\r\n        if ( formValues.pass1 !== formValues.pass2 ) {\r\n            setErrorForm('Las contraseñas deben ser iguales')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n        if ( isFormRegisterValid() ) {\r\n            \r\n            dispatch( startingRegisterWithEmail( formValues.nombre, formValues.email1, formValues.pass1 ) )\r\n            setErrorForm( false )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__container flip-scale-up-ver\">\r\n            <div className=\"img-user\">\r\n                <i className=\"bi bi-person\"></i>\r\n            </div>\r\n            <h1>Cuentas claras</h1>\r\n            {\r\n                errorForm && \r\n                    <div className=\"form__error\">\r\n                        <p className=\"msg-error\">{ errorForm }</p>\r\n                    </div>\r\n            }\r\n            <form onSubmit={ handleRegister }>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"nombre\" value={ formValues.nombre } onChange={ handleChange } type=\"text\" className=\"form-control\" id=\"floatingInputName\" required placeholder=\"Ingrese su nombre\"/>\r\n                    <label htmlFor=\"floatingInputName\">Ingrese su nombre</label>\r\n                </div>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"email1\" value={ formValues.email1 } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInputEmail1\" required placeholder=\"Ingrese su email\"/>\r\n                    <label htmlFor=\"floatingInputEmail1\">Ingrese su email</label>\r\n                </div>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input autoComplete=\"off\" name=\"email2\" value={ formValues.email2 } onChange={ handleChange } type=\"email\" className=\"form-control\" id=\"floatingInputEmail2\" required placeholder=\"Confirmar email\"/>\r\n                    <label htmlFor=\"floatingInputEmail2\">Confirmar email</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass1\" value={ formValues.pass1 } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword1\" required placeholder=\"Password\"/>\r\n                    <label htmlFor=\"floatingPassword1\">Password</label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                    <input name=\"pass2\" value={ formValues.pass2 } onChange={ handleChange } type=\"password\" className=\"form-control\" id=\"floatingPassword2\" required placeholder=\"Confirmar password\"/>\r\n                    <label htmlFor=\"floatingPassword2\">Confirmar password</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn submit\">Registrarse</button>\r\n                <button className=\"btn change\" onClick={ handleChangeScreen }>¿Ya estás registrado? Ingresa con tu cuenta</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { RegisterForm } from \"./RegisterForm\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [screen, setScreen] = useState('login')\r\n\r\n    const handleChangeScreen = e => {\r\n        e.preventDefault();\r\n        screen === 'login' ? setScreen( 'register') : setScreen('login')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className=\"img-fondo\" src=\"https://www.billin.net/blog/wp-content/uploads/2020/09/Libro-mayor-1140x760.jpg\" alt=\"fondo-contabilidad\" />\r\n            <div className=\"login__screen\">\r\n                {\r\n                    screen === 'login'\r\n                    && <LoginForm handleChangeScreen={ handleChangeScreen } />\r\n                }\r\n                {\r\n                    screen === 'register'\r\n                    && <RegisterForm handleChangeScreen= { handleChangeScreen } />\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const openModal = ( typeModal ) => (\r\n    {\r\n        type: types.openModal,\r\n        payload: {\r\n            tipo: typeModal.tipo,\r\n            modo: typeModal.modo,\r\n            title: typeModal.title\r\n        }\r\n    }\r\n)\r\n\r\nexport const closeModal = () => (\r\n    {\r\n        type: types.closeModal,\r\n    }\r\n)","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport { abrirModoEdicionCategorias, cerrarModoEdicionCategorias } from \"../../../actions/categoriasActions\";\r\nimport { abrirModoEdicionCuentas, cerrarModoEdicionCuentas } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const Buttons = ({ botonEditarVisible= false, ruta }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isButtonsOpen, setIsButtonsOpen] = useState(false)\r\n    const { isEditing:isEditingCuentas } = useSelector(state => state.cuentas)\r\n    const { isEditing:isEditingCategorias } = useSelector(state => state.cats)\r\n\r\n    const openVistaButtons = e => {\r\n        e.preventDefault();\r\n        setIsButtonsOpen( !isButtonsOpen )\r\n    }\r\n\r\n    const openingModal = ( e, tipo ) =>{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch( openModal( {\r\n            tipo: tipo || e.target.value,\r\n            modo: 'crear'\r\n         } ) )\r\n         setIsButtonsOpen( false )\r\n    }\r\n\r\n    const openVistaEditar = e => {\r\n        e.preventDefault();\r\n        ruta === 'cuentas' && dispatch( abrirModoEdicionCuentas() )\r\n        ruta === 'categorias' && dispatch( abrirModoEdicionCategorias() )\r\n        \r\n    }\r\n\r\n    const closeVistaEditar = e => {\r\n        e.preventDefault();\r\n        ruta === 'cuentas' && dispatch( cerrarModoEdicionCuentas() )\r\n        ruta === 'categorias' && dispatch( cerrarModoEdicionCategorias() )\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <div className='boton-editar'>\r\n            { (botonEditarVisible && !isEditingCuentas) &&   <button className=\"btn btn-warning btn-editar\">\r\n                                                                    <i onClick={ openVistaEditar } className=\"bi bi-pencil\"></i>\r\n                                                                </button>\r\n            }\r\n            { (botonEditarVisible && isEditingCuentas) && <button className=\"btn btn-editar buttons__close\">\r\n                                                                <i onClick={ closeVistaEditar } className=\"bi bi-x\"></i>\r\n                                                            </button>\r\n            }\r\n            { (botonEditarVisible && isEditingCategorias) && <button className=\"btn btn-editar buttons__close\">\r\n                                                                <i onClick={ closeVistaEditar } className=\"bi bi-x\"></i>\r\n                                                            </button>\r\n            }\r\n        </div>\r\n        <div className=\"boton-plus\">\r\n            {\r\n                !isButtonsOpen ? <button className='buttons__plus' onClick={ openVistaButtons }>+</button>\r\n                              : <button className='buttons__close' onClick={ openVistaButtons }><i className=\"bi bi-x\"></i></button>\r\n            }\r\n            <div className={`vista-buttons ${ isButtonsOpen ? 'visible' : '' }`}>\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='ingreso' className='btn btn-menu'>Nuevo ingreso<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-graph-up-arrow\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='transferencia' className='btn btn-menu'>Transferir entre cuentas<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-arrow-left-right\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='gasto' className='btn btn-menu'>Nuevo gasto<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-graph-down-arrow\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='deuda' className='btn btn-menu'>Nueva deuda<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-bank\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='prestamo' className='btn btn-menu'>Nuevo prestamo<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-bank\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='deudaACobrar' className='btn btn-menu'>Nueva deuda a cobrar<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-percent\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='compraActivos' className='btn btn-menu'>Compra de activos<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-cart\"></i></button>\r\n                {/* </div> */}\r\n                {/* <div className='buttons__cubreBoton'> */}\r\n                    <button onClick={ openingModal } value='ventaActivos' className='btn btn-menu'>Venta de activos<i onClick={ e => {e.stopPropagation(); e.target.parentElement.click()} } className=\"bi bi-piggy-bank\"></i></button>\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const Select = ({options, clase, actualizarState, state }) => {\r\n    return (\r\n        <span className='select__view'>\r\n            <select className={ clase } onChange={ actualizarState } defaultValue={ state }>\r\n                {\r\n                    options.map( op => <option key={ op } value={ op }>{ op } </option> )\r\n                }\r\n            </select>\r\n        </span>\r\n    )\r\n}\r\n\r\nSelect.propTypes = {\r\n    options : PropTypes.array.isRequired,\r\n    clase: PropTypes.string,\r\n    actualizarState: PropTypes.func\r\n}","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openModal } from '../../../actions/modalActions';\r\nimport { insertarMovimientoActivo } from '../../../actions/movsActions';\r\n\r\n\r\nexport const Table = ({ movimientos, cantMostrada, cabecera }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editarModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'editar'\r\n        } ) )\r\n    }\r\n\r\n    const detalleModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'solo ver'\r\n        } ) )\r\n    }\r\n\r\n    let ultimosMovimientos = movimientos;\r\n\r\n    if ( cantMostrada !== undefined) {\r\n        ultimosMovimientos = movimientos.slice(0,cantMostrada);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">{ cabecera[0] }</th>\r\n                        <th scope=\"col\">{ cabecera[1] }</th>\r\n                        <th scope=\"col\">{ cabecera[2] }</th>\r\n                        <th scope=\"col\">{ cabecera[3] }</th>\r\n                        {\r\n                            cabecera[4] && <th scope=\"col\">{ cabecera[4] }</th>\r\n                        }\r\n                        {\r\n                            cabecera[5] && <th scope=\"col\">{ cabecera[5] }</th>\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        ultimosMovimientos.map( mov => \r\n                            <tr key={ mov.id } className={`table__movimiento ${ mov.estado === 'saldado' ? 'saldado' : 'pendiente'}` } onClick={ e => detalleModal( e, mov ) }>\r\n                                {\r\n                                    mov.estado !== 'saldado'\r\n                                    ?   <th scope=\"row\">{ mov.tipo === 'gasto' && '-' }{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"}).format( mov.cantidadPagada ? mov.cantidad - mov.cantidadPagada : mov.cantidad ) }</th>\r\n                                    :   <th scope=\"row\">Saldado</th>\r\n                                }\r\n                                \r\n                                <td>{ mov.categoria || (mov.tipo === 'deudaACobrar' ? 'Deuda a cobrar' : mov.tipo)  }</td>\r\n                                {\r\n                                    (mov.prestador) && <td>{ mov.prestador }</td>\r\n                                }\r\n                                {\r\n                                    mov.tomador && <td>{ mov.tomador }</td>\r\n                                }\r\n                                {\r\n                                    mov.subcuenta ? <td>{ mov.subcuenta } ({mov.cuenta})</td>\r\n                                                    : <td>{ mov.cuenta }</td>\r\n                                }\r\n                                <td>{ new Date( mov.fecha ).toLocaleDateString() }</td>\r\n                                {\r\n                                    (mov.prestador || mov.tomador) && \r\n                                        <td>\r\n                                            <button className='table__btn'>{\r\n                                                mov.estado === 'saldado' ? <i className=\"bi bi-check2-circle\"></i>\r\n                                                                            : <i className=\"bi bi-clock-history\"></i>\r\n                                            } </button>\r\n                                                \r\n                                        </td> \r\n                                }\r\n                                {\r\n                                    (mov.estado !== 'saldado' && mov.categoria !== 'prestamo saldado') && <td>\r\n                                                                        <button className='table__btn'><i className=\"bi bi-pencil\" onClick={ e =>  editarModal( e, mov ) }></i></button>  \r\n                                                                    </td>\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nTable.propTypes = {\r\n    movimientos : PropTypes.array.isRequired\r\n}\r\n\r\nTable.defaultProps = {\r\n    cabecera : ['Cantidad', 'Categoria', 'Cuenta', 'Fecha' ]\r\n}","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { Table } from \"../../ui/tables/Table\"\r\n\r\nexport const MovimientosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n\r\n    const movimientos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deudaACobrar' && el.tipo !== 'compraActivos' && el.tipo !== 'ventaActivos')\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className='go-back'>\r\n                <i className=\"bi bi-arrow-left-short\"></i>\r\n            </Link>\r\n            <div className='container-view'>\r\n                <Select actualizarState={ handleChangeMes } options={ meses } state={ mesFiltro }/>\r\n                <h1 className='movimientos__titulo'>Todos los movimientos</h1>\r\n                <Table movimientos={ movimientos } />\r\n                <Buttons />\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { insertarCategoriaActiva } from \"../../../actions/categoriasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { Table } from \"../tables/Table\"\r\n\r\nexport const AcordeonTable = ({ categorias, tableElements }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isEditing } = useSelector(state => state.cats);\r\n    \r\n\r\n    const handleToggleAccordion = (e, cat ) => {\r\n\r\n        if ( e.classList.contains('accordion-button') ) {\r\n            \r\n        let cantElemInternos = tableElements.filter(el => el.categoria === cat ).length\r\n\r\n        e.classList.toggle('collapsed');\r\n        e.parentElement.nextSibling.classList.toggle('show');\r\n\r\n        if (e.parentElement.nextSibling.classList.contains('show')) {\r\n            \r\n            e.parentElement.nextSibling.style.height = 50 * ( cantElemInternos + 1 ) + 'px' ;\r\n            \r\n        } else{\r\n            e.parentElement.nextSibling.style.height = '0px'\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const sumarCantidadTotalPorCategoria = ( cat ) =>{\r\n        let cantidadTotal = 0\r\n        tableElements.filter(el => el.categoria === cat ).map( el => cantidadTotal += parseInt( el.cantidad ) );\r\n        return cantidadTotal;\r\n    }\r\n\r\n    const openingModal = ( e, catNombre, catCantidad, id, tipo ) =>{\r\n        e.preventDefault();\r\n\r\n        dispatch( openModal({\r\n            tipo: 'editar categorias',\r\n        }))\r\n        dispatch( insertarCategoriaActiva( { catNombre, catCantidad, id, tipo } ))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n            {\r\n                categorias.map( cat =>\r\n                    <div className=\"accordion-item\" key={ cat.nombre }>\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                            <button onClick={ (e) => handleToggleAccordion( e.target, cat.nombre ) } className=\"accordion-button d-flex justify-content-between align-items-center collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                                { cat.nombre }\r\n                                <span onClick={ e => e.target.parentElement.click() } className={`badge bg-secondary bg-${ (cat.tipo === 'gasto' && sumarCantidadTotalPorCategoria( cat.nombre ) !== 0 ) ? 'danger' : '' }${ ( cat.tipo === 'ingreso' && sumarCantidadTotalPorCategoria( cat.nombre ) !== 0 ) ? 'success' : '' }`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( sumarCantidadTotalPorCategoria( cat.nombre ) )  }</span>\r\n                                { isEditing && <i onClick={ e => openingModal( e, cat.nombre, sumarCantidadTotalPorCategoria( cat.nombre ), cat.id, cat.tipo )} className=\"bi bi-pencil\"></i> }\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                            <div className=\"accordion-body\">\r\n                                <Table movimientos={tableElements.filter(el => el.categoria === cat.nombre )} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { cerrarModoEdicionCategorias } from \"../../../actions/categoriasActions\"\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\n\r\nexport const CategoriesScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch( cerrarModoEdicionCategorias())\r\n        }\r\n    }, [ dispatch ])\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const movimientos = movs.filter( el => meses[ new Date( el.fecha ).getMonth()] === mesFiltro ).filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia');\r\n    \r\n    const categoriasTotales = categorias.sort( (a,b) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Categorias</h1>\r\n            <AcordeonTable categorias={ categoriasTotales } tableElements={ movimientos }/>\r\n            <Buttons botonEditarVisible={ true } ruta='categorias'/>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const convertidor = ( array, state, pares ) =>{\r\n    // console.log( array );\r\n\r\n    const coin = [ 'BTC', 'ETH', 'USD', 'XRP', 'ADA']\r\n    const fiat = ['ARS', 'USD', 'MXN']\r\n        \r\n    return array.reduce( (acumulador, actual ) => {\r\n        // console.log( actual );\r\n\r\n        if ( actual.valor !== 0) {\r\n            \r\n            if ( actual.nombre === state ) {\r\n                \r\n                actual = actual.valor\r\n                // console.log( actual );\r\n                return acumulador + actual;\r\n            }\r\n    \r\n            if ( coin.includes( state ) && fiat.includes( actual.nombre ) ) {\r\n                \r\n                actual = actual.valor / pares.find( par => par.nombre === `${ state }/${ actual.nombre }`).valor;\r\n                return acumulador + actual;\r\n            }\r\n    \r\n            if ( coin.includes( actual.nombre ) && fiat.includes( state ) ) {\r\n\r\n                actual = actual.valor * pares.find( par => par.nombre === actual.nombre + '/' + state ).valor;        \r\n                return acumulador + actual;\r\n            }\r\n        }\r\n\r\n        return acumulador + actual.valor\r\n\r\n    }, 0 )\r\n\r\n}\r\n","import { convertidor } from \"./convertidor\";\r\n\r\n\r\nexport const sumarCantidadTotalPorCuenta = ( movs, cuentas, cta ) =>{\r\n\r\n    let cantidadTotalPorCuenta = 0\r\n\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'ingreso').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'gasto').map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'prestamo').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter(el => el.cuenta === cta ).filter( el => el.tipo === 'deudaACobrar').map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'transferencia').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'transferencia').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'compraActivos').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'compraActivos').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'ventaActivos').filter( el => el.from.cuenta === cta ).map( el => cantidadTotalPorCuenta -= parseInt( el.cantidad ) );\r\n    movs.filter( el => el.tipo === 'ventaActivos').filter( el => el.to.cuenta === cta ).map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n\r\n    \r\n    movs.filter(el => cuentas.find(el => el.nombre === cta ).subcuentas.includes( el.categoria ) ).filter( el => el.tipo === 'gasto').map( el => cantidadTotalPorCuenta += parseInt( el.cantidad ) );\r\n\r\n    return {\r\n        nombre: cta,\r\n        valor : cantidadTotalPorCuenta,\r\n    }\r\n}\r\n\r\nexport const sumarCantidadEnCuentasActivos = ( movs, cta, subcuentaActivo ) => {\r\n\r\n    let cantidadTotalPorCuenta = {\r\n        nombre: cta,\r\n        valor: 0\r\n    };\r\n\r\n    movs.filter( mov => mov.tipo === 'compraActivos' && mov.from.cuenta === cta && mov.to.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor += parseInt( el.cantidad ))\r\n    movs.filter( mov => mov.tipo === 'ventaActivos' && mov.to.cuenta === cta && mov.from.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor -= parseInt( el.cantidad ))\r\n    movs.filter( mov => mov.tipo === 'ingreso' && mov.cuenta === 'Activos' && mov.monedaValuacion === cta && mov.subcuenta === subcuentaActivo ).map( el => cantidadTotalPorCuenta.valor += parseInt( el.cantidad ))\r\n\r\n    return cantidadTotalPorCuenta;\r\n    \r\n}\r\n\r\nexport const sumarCantidadPorSubcuenta = ( movs, cuentas, cta, pares ) => {\r\n\r\n    let elementos = [];\r\n    \r\n    const subcuentas = cuentas.find(el => el.nombre === cta ).subcuentas;\r\n    \r\n    subcuentas.forEach( e =>{\r\n        \r\n        let activos= []\r\n        let monedaValuacion='';\r\n        let cantidadTotal = 0;\r\n        \r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'ingreso' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'gasto' ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'prestamo' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.cuenta === cta && el.subcuenta === e ).filter( mov => mov.tipo === 'deudaACobrar' ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter(el => el.categoria === e ).filter( mov => mov.tipo === 'gasto' ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'transferencia' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'transferencia' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'compraActivos' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'compraActivos' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'ventaActivos' ).filter( el => el.from.cuenta === cta && el.from.subcuenta === e ).map( el => cantidadTotal -= parseFloat( el.cantidad ) );\r\n        movs.filter( el => el.tipo === 'ventaActivos' ).filter( el => el.to.cuenta === cta && el.to.subcuenta === e ).map( el => cantidadTotal += parseFloat( el.cantidad ) );\r\n        \r\n        movs.filter( mov => mov.tipo === 'compraActivos' && mov.to.subcuenta === e ).map( mov => monedaValuacion = mov.monedaValuacion );\r\n        movs.filter( mov => mov.tipo === 'compraActivos' && mov.to.subcuenta === e ).forEach( mov => {\r\n            activos.push({\r\n                nombre: mov.from.cuenta,\r\n                valor: cantidadTotal\r\n            })\r\n            cantidadTotal = convertidor( activos, 'USD', pares)\r\n        })\r\n        movs.filter( mov => mov.tipo === 'ingreso' && mov.cuenta === 'Activos' && mov.subcuenta === e ).map( mov => monedaValuacion = mov.monedaValuacion );\r\n\r\n        // monedaValuacion = monedaValuacion !== '' ? monedaValuacion : cta;\r\n        if ( monedaValuacion === '' ) {\r\n            monedaValuacion = cta\r\n        }\r\n        if ( cta === 'Activos' ) {\r\n            monedaValuacion = 'USD'\r\n        }\r\n\r\n        \r\n\r\n        elementos.push({\r\n            subcuenta: e,\r\n            cantidad: cantidadTotal,\r\n            monedaValuacion\r\n        })\r\n    })\r\n\r\n    return elementos;\r\n}\r\n\r\nexport const sumarCantidadTotal = ( movs, cuentas, state, pares ) =>{\r\n    let cantidadTotal = []\r\n    let cantidadTotalActivos = { nombre: 'Activos', valor: [] }\r\n    // let cantidadPrueba = { nombre: 'Activos', subcuentas: [] }\r\n\r\n    \r\n    cuentas.forEach( cta => {\r\n\r\n        if ( cta.nombre !== 'Activos' ) {\r\n            \r\n            cantidadTotal.push( sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ) )\r\n            \r\n        } else{\r\n\r\n                \r\n                    \r\n                if ( cta !== 'Activos' ) {\r\n                    // Devuelve objeto q rastrea los movimientos de \"Activos\" y va sumando en la cuenta q corresponda\r\n                    cantidadTotalActivos.valor.push( sumarCantidadEnCuentasActivos( movs, cta ))\r\n                }\r\n            \r\n        }\r\n  \r\n    })\r\n\r\n    // Convierte todos los montos en los 2 arrays a la moneda q tenga en el state\r\n    const totalCuentas = convertidor( cantidadTotal, state, pares )\r\n    const totalActivos = convertidor( cantidadTotalActivos.valor, state, pares )\r\n    \r\n    \r\n    return {totalCuentas, totalActivos}\r\n}\r\n\r\nexport const sumarCantidadTotalActivos = ( movs, cuentas, state, pares ) =>{\r\n\r\n    let cantidadTotalActivos = { nombre: 'Activos', subcuentas: [] }\r\n\r\n    cuentas.find( cta => cta.nombre === 'Activos' )?.subcuentas.map( sub => {\r\n\r\n        const subcuenta = {\r\n            nombre: sub,\r\n            valor: []\r\n        }\r\n\r\n        cuentas.filter( cuenta => cuenta.nombre !== 'Activos' ).forEach( el => {\r\n\r\n            subcuenta.valor.push( sumarCantidadEnCuentasActivos( movs, el.nombre, sub ) )\r\n        })\r\n\r\n        return cantidadTotalActivos.subcuentas.push(subcuenta)\r\n        \r\n    })\r\n\r\n\r\n    let cantidadTotalConvertida = 0;\r\n\r\n    cantidadTotalActivos.subcuentas.forEach( sub => {\r\n        cantidadTotalConvertida += convertidor( sub.valor, state, pares )\r\n    })\r\n\r\n    return { cantidadTotalActivos, cantidadTotalConvertida }\r\n}","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { insertarCuentaActiva } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { convertidor } from \"../../../helpers/convertidor\";\r\nimport { sumarCantidadTotalActivos } from \"../../../helpers/getCantidades\";\r\nimport { Select } from \"../selects/Select\";\r\n\r\nexport const List = ({ elementos, isEditing, nomCuenta }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [moneda, setMoneda] = useState('ARS')\r\n    const { pares } = useSelector(state => state.pares )\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { cuentas } = useSelector(state => state.cuentas )\r\n\r\n    const openingModal = ( e, nomSubcuenta, cantidad ) =>{\r\n        e.preventDefault();\r\n        dispatch( openModal({\r\n            tipo: 'editar subcuentas',\r\n        }))\r\n        dispatch( insertarCuentaActiva( { nomCuenta, nomSubcuenta, cantidad } ))\r\n\r\n    }\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        setMoneda( e.target.value )\r\n    }\r\n\r\n    const sumarMontosEnDistintasMonedas = (sub) =>{\r\n\r\n        let total = 0;\r\n\r\n        if ( sub.monedaValuacion === 'Activos') {\r\n            sumarCantidadTotalActivos( movs, cuentas, moneda, pares).cantidadTotalActivos.subcuentas.forEach( el => {\r\n                if ( el.nombre === sub.subcuenta ) {\r\n                    total = convertidor( el.valor, moneda, pares )\r\n                }\r\n            })\r\n        }\r\n\r\n        if ( sub.cantidad !== 0 ) {\r\n            total = convertidor([{ nombre: sub.monedaValuacion, valor:  sub.cantidad }], moneda, pares );\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='list__view'>\r\n            <Select options={['ARS', 'USD', 'BTC', 'ETH']} state={ moneda } actualizarState={ handleChange }/>\r\n            <ul className=\"list-group\">\r\n                {\r\n                    elementos.map( el =>\r\n                        <li key={ el.subcuenta } className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            { el.subcuenta }\r\n                            <span className={`badge bg-secondary bg-${ el.cantidad < 0 ? 'danger': ''}${ el.cantidad > 0 ? 'success': ''}`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\", minimumFractionDigits: 2 }).format( sumarMontosEnDistintasMonedas( el ) ) }</span>\r\n                            { isEditing && <i className=\"bi bi-pencil\" onClick={ e => openingModal( e, el.subcuenta, el.cantidad )}></i> }\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { insertarCuentaActiva } from \"../../../actions/cuentasActions\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { List } from \"../lists/List\";\r\nimport { sumarCantidadTotalPorCuenta, sumarCantidadPorSubcuenta, sumarCantidadTotalActivos } from '../../../helpers/getCantidades'\r\n\r\nexport const AcordeonList = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { pares } = useSelector(state => state.pares)\r\n    const { cuentas, isEditing } = useSelector(state => state.cuentas );\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleAccordion = (e, cta ) => {\r\n\r\n        if ( e.classList.contains('accordion-button') ) {\r\n            \r\n            let cantElemInternos = cuentas.find(el => el.nombre === cta ).subcuentas.length\r\n    \r\n            e.classList.toggle('collapsed');\r\n            e.parentElement.nextSibling.classList.toggle('show');\r\n            if (e.parentElement.nextSibling.classList.contains('show')) {\r\n                \r\n                e.parentElement.nextSibling.style.height = 'calc(' + 55 * ( cantElemInternos ) + 'px + 3rem)' ;\r\n            } else{\r\n                e.parentElement.nextSibling.style.height = '0px'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const openingModal = ( e, cta, cantidad ) =>{\r\n        e.preventDefault();\r\n        dispatch( openModal({\r\n            tipo: 'editar cuentas',\r\n        }))\r\n        dispatch( insertarCuentaActiva( {\r\n            ...cta,\r\n            cantidad\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion accordion-list\" id=\"accordionPanelsStayOpenExample\">\r\n            {\r\n                cuentas.map( cta => \r\n                    <div className=\"accordion-item\" key={ cta.nombre }>\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                            <button onClick={ (e) => handleToggleAccordion( e.target, cta.nombre ) } className=\"accordion-button d-flex justify-content-between align-items-center collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                                { cta.nombre === 'BTC' ? 'Bitcoin' : cta.nombre }\r\n                                <span onClick={ e => e.target.parentElement.click() } className={`badge bg-secondary bg-${ sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor < 0 ? 'danger': ''}${ sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor > 0 ? 'success': ''}`}>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( cta.nombre === 'Activos' ? sumarCantidadTotalActivos( movs, cuentas, 'USD', pares ).cantidadTotalConvertida : sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor )  }</span>\r\n                                { isEditing && <i onClick={ e => openingModal( e, cta, sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor ) } className=\"bi bi-pencil\"></i> }\r\n                                \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                            <div className=\"accordion-body\">\r\n                                \r\n                                <List elementos={ sumarCantidadPorSubcuenta( movs, cuentas, cta.nombre, pares ) } isEditing={ isEditing } nomCuenta={ cta.nombre } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { cerrarModoEdicionCuentas } from \"../../../actions/cuentasActions\";\r\nimport { AcordeonList } from \"../../ui/acordeon/AcordeonList\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\n\r\nexport const CuentasScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n    const { cuentas } = useSelector(state => state.cuentas );\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => { \r\n        return () => {\r\n            dispatch( cerrarModoEdicionCuentas() ) \r\n        }\r\n    },[ dispatch ])\r\n\r\n    const totalMovimientos = movs.filter( el => el.tipo !== 'deuda' );\r\n\r\n    const nombreCuentas = cuentas.map( el => el.nombre )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Cuentas</h1>\r\n            <AcordeonList nombreCuentas={ nombreCuentas } tableElements={ totalMovimientos }/>\r\n            <Buttons botonEditarVisible={ true } ruta='cuentas'/>\r\n        </div>\r\n    )\r\n}","export const EstadisticasScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Pagina en construcción...</h1>\r\n            <div className=\"page-in-construction\">\r\n                <lottie-player className='animacion' src=\"https://assets8.lottiefiles.com/packages/lf20_8uHQ7s.json\"  background=\"transparent\"  speed=\"1\"  style={{maxWidth: '300px', maxHeight: '300px'}}  loop autoplay></lottie-player>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Select } from \"../../ui/selects/Select\";\r\n\r\nexport const GastosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const tablaGastos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === 'gasto' );\r\n\r\n    const categoriasGastos = categorias.filter( el => el.tipo === 'gasto' ).sort( ( a,b ) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Gastos</h1>\r\n            <AcordeonTable categorias={ categoriasGastos } tableElements={ tablaGastos }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { Table } from \"../../ui/tables/Table\"\r\n\r\nexport const LastMovs = ({ movimientos }) => {\r\n\r\n\r\n    return (\r\n        <section className='tabla-general'>\r\n\r\n        <h3>Ultimos movimientos</h3>\r\n\r\n        <Table movimientos={ movimientos } cantMostrada={ 5 } />\r\n\r\n        </section>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { sumarCantidadTotalActivos, sumarCantidadTotalPorCuenta } from \"../../../helpers/getCantidades\"\r\n\r\nexport const CuentasHome = ( { cuentas } ) => {\r\n\r\n    const { movs } = useSelector(state => state.movs)\r\n    const { pares } = useSelector(state => state.pares)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cuentas.map( cta =>\r\n                    \r\n                    (sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor > 0 )\r\n                        &&  \r\n                        <p className=\"total-por-cuentas\" key={ cta.nombre }>{ cta.nombre } <b>{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( cta.nombre === 'Activos' ? sumarCantidadTotalActivos( movs, cuentas, 'USD', pares ).cantidadTotalConvertida : sumarCantidadTotalPorCuenta( movs, cuentas, cta.nombre ).valor ) } { cta.nombre === 'Activos' && 'usd'}</b></p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { sumarCantidadTotal, sumarCantidadTotalActivos } from \"../../../helpers/getCantidades\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { CuentasHome } from \"./CuentasHome\"\r\n\r\n\r\nexport const PatrimonioView = () => {\r\n\r\n    const [state, setState] = useState('ARS')\r\n    const { pares } = useSelector(state => state.pares)\r\n    \r\n    \r\n\r\n    const handleChange = ( e )=>{\r\n        setState( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs);\r\n    const { cuentas } = useSelector(state => state.cuentas )\r\n\r\n   \r\n    return (\r\n        <div className='patrimonio__view'>\r\n            <Select options={ ['ARS', 'USD', 'BTC', 'ETH'] } clase='upperCase' actualizarState={ handleChange} />\r\n            <div className='patrimonio__cantidad'>\r\n                <div className='patrimonio__principal'>\r\n                    <small>{ state } </small>\r\n                    <h1> { new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\", /* maximumFractionDigits: 0 */}).format( sumarCantidadTotal( movs, cuentas, state, pares ).totalCuentas + sumarCantidadTotalActivos( movs, cuentas, state, pares ).cantidadTotalConvertida ) }</h1>\r\n                </div>\r\n                <CuentasHome cuentas={ cuentas } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { LastMovs } from \"./LastMovs\"\r\nimport { PatrimonioView } from \"./PatrimonioView\"\r\n\r\nexport const HomeScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const movimientos = movs.filter( el => el.tipo !== 'deuda' && el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deudaACobrar' && el.tipo !== 'compraActivos' && el.tipo !== 'ventaActivos')\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <PatrimonioView />\r\n            <LastMovs movimientos={ movimientos } />\r\n            {\r\n                movimientos.length > 5\r\n                    &&\r\n                    <Link to='/movimientos' element='' className='ver-mas'>\r\n                        Ver mas movimientos\r\n                    </Link>\r\n            }\r\n            \r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AcordeonTable } from \"../../ui/acordeon/AcordeonTable\"\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\n\r\nexport const IngresosScreen = () => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs )\r\n    const { categorias } = useSelector(state => state.cats )\r\n\r\n    const tablaIngresos = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === 'ingreso' );\r\n\r\n    const categoriasIngresos = categorias.filter( el => el.tipo === 'ingreso' ).sort( ( a,b ) => a.nombre > b.nombre ? 1 : -1 )\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro }/>\r\n            <h1>Ingresos</h1>\r\n            <AcordeonTable tableElements={ tablaIngresos } categorias={ categoriasIngresos }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { openModal } from \"../../../actions/modalActions\";\r\nimport { insertarMovimientoActivo } from \"../../../actions/movsActions\";\r\n\r\nexport const TableTranferencias = ({ elementos }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editarModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'editar'\r\n        } ) )\r\n    }\r\n\r\n    const detalleModal = ( e, mov ) =>{\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        dispatch( insertarMovimientoActivo( mov ) );\r\n        dispatch( openModal( {\r\n            tipo: mov.tipo,\r\n            modo: 'solo ver'\r\n        } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='list__view'>\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Cantidad</th>\r\n                        <th scope=\"col\">De</th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">A</th>\r\n                        <th scope=\"col\">Fecha</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        elementos.map( mov => \r\n                            <tr key={ mov.id } className='table__movimiento' onClick={ e => detalleModal( e, mov ) }>\r\n                                <th scope=\"row\">{ new Intl.NumberFormat('en-US', {style: \"currency\", currency: \"USD\"/* , maximumFractionDigits: 0 */}).format( parseInt( mov.cantidad ) ) }</th>\r\n                                <td> { mov.from.subcuenta } ({ mov.from.cuenta })</td>\r\n                                <td><i className=\"bi bi-arrow-right\"></i></td>\r\n                                <td> { mov.to.subcuenta } ({ mov.to.cuenta })</td>\r\n                                <td>{ mov.fecha.toLocaleDateString() }</td>\r\n                                <td><button className='table__btn'><i className=\"bi bi-pencil\" onClick={ e =>  editarModal( e, mov ) }></i></button></td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\"\r\nimport { Select } from \"../../ui/selects/Select\"\r\nimport { TableTranferencias } from \"../../ui/tables/TableTranferencias\"\r\n\r\nexport const TransferenciasScreen = ({ tipo }) => {\r\n\r\n    const meses = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre','noviembre','diciembre' ]\r\n    const [mesFiltro, setMesFiltro] = useState( meses[ new Date().getMonth() ] );\r\n\r\n    const handleChangeMes = e => {\r\n        setMesFiltro( e.target.value )\r\n    }\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const transferencias = movs.filter( el => meses[el.fecha.getMonth()] === mesFiltro ).filter( el => el.tipo === tipo );\r\n\r\n\r\n    return (\r\n        <div className='container-view tabla-general'>\r\n            <Select options={ meses } actualizarState={ handleChangeMes } state={ mesFiltro } />\r\n            { tipo === 'transferencia' && <h1>Transferencias</h1> }\r\n            { tipo === 'compraActivos' && <h1>Compras</h1> }\r\n            { tipo === 'ventaActivos' && <h1>Ventas</h1> }\r\n            <TableTranferencias elementos={ transferencias }/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Table } from \"../../ui/tables/Table\";\r\n\r\nexport const DeudasScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const deudas = movs.filter( el => el.tipo === 'deuda' || el.tipo === 'prestamo' );\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Deudas</h1>\r\n            <Table movimientos={ deudas } cabecera={['Cantidad', 'Motivo','A quien', 'Cuenta', 'Fecha', 'Estado' ]}/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Buttons } from \"../../ui/buttons/Buttons\";\r\nimport { Table } from \"../../ui/tables/Table\";\r\n\r\nexport const DeudasACobrarScreen = () => {\r\n\r\n    const { movs } = useSelector(state => state.movs );\r\n\r\n    const deudasACobrar = movs.filter( el => el.tipo === 'deudaACobrar' || el.tipo === 'prestamoACobrar' );\r\n\r\n    return (\r\n        <div className='container-view'>\r\n            <h1>Deudas a cobrar</h1>\r\n            <Table movimientos={ deudasACobrar } cabecera={['Cantidad', 'Motivo','De quien', 'Cuenta', 'Fecha', 'Estado' ]}/>\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const fetchPares = async(par) =>{\r\n\r\n    const url = 'https://criptoya.com/api/satoshitango/';\r\n\r\n    const resp = await fetch( url + par ,{\r\n        header:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n\r\n    const { bid } = await resp.json()\r\n\r\n    return bid\r\n\r\n}","import { useRef } from \"react\"\r\nimport { Link, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { MovimientosScreen } from \"../../principalRoutes/movimientos/MovimientosScreen\";\r\nimport { CategoriesScreen } from \"../../principalRoutes/categories/CategoriesScreen\";\r\nimport { CuentasScreen } from \"../../principalRoutes/cuentas/CuentasScreen\";\r\nimport { EstadisticasScreen } from \"../../EstadisticasScreen\";\r\nimport { GastosScreen } from \"../../principalRoutes/gastos/GastosScreen\";\r\nimport { HomeScreen } from \"../../principalRoutes/home/HomeScreen\";\r\nimport { IngresosScreen } from \"../../principalRoutes/ingresos/IngresosScreen\";\r\nimport { TransferenciasScreen } from \"../../principalRoutes/transferencias/TransferenciasScreen\";\r\nimport { DeudasScreen } from \"../../principalRoutes/deudas/DeudasScreen\";\r\nimport { DeudasACobrarScreen } from \"../../principalRoutes/deudasACobrar/DeudasACobrarScreen\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actualizarValores } from \"../../../actions/paresActions\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchPares } from \"../../../helpers/fetchPares\";\r\nimport { startingLogout } from \"../../../actions/authActions\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth )\r\n\r\n    useEffect(() => {\r\n        \r\n        const actualizarValoresMonedas = async() =>{\r\n\r\n            const usd_ars = await fetchPares( 'dai/ars' )\r\n            const btc_usd = await fetchPares( 'btc/usd' )\r\n            const btc_ars = await fetchPares( 'btc/ars' )\r\n            const eth_ars = await fetchPares( 'eth/ars' )\r\n            const eth_usd = await fetchPares( 'eth/usd' )\r\n\r\n            return [\r\n                {\r\n                    nombre: 'USD/ARS',\r\n                    valor: usd_ars\r\n                },{\r\n                    nombre: 'BTC/USD',\r\n                    valor: btc_usd\r\n                },{\r\n                    nombre: 'BTC/ARS',\r\n                    valor: btc_ars\r\n                },{\r\n                    nombre: 'ETH/ARS',\r\n                    valor: eth_ars\r\n                },{\r\n                    nombre: 'ETH/USD',\r\n                    valor: eth_usd\r\n                },\r\n            ]\r\n        }\r\n\r\n        actualizarValoresMonedas().then( e => dispatch( actualizarValores( e )))\r\n       \r\n    }, [ dispatch ])\r\n\r\n\r\n    const menu = useRef();\r\n    const modal = useRef();\r\n\r\n    const handleOpen = () => {\r\n        menu.current.style.transform= 'translateX(0px)';\r\n        modal.current.style.zIndex = '2';\r\n        modal.current.style.opacity = '1';\r\n    }\r\n\r\n    const handleClose = () =>{\r\n        menu.current.style.transform= 'translateX(-250px)';\r\n        modal.current.style.zIndex = '-1';\r\n        modal.current.style.opacity = '0';\r\n    }\r\n\r\n    const handleLogout = e => {\r\n        e.preventDefault();\r\n        dispatch( startingLogout() )\r\n    }\r\n\r\n    return (\r\n        <div className='navbar__view'>\r\n\r\n            <header className='navbar__header'>\r\n                <button onClick={ handleOpen }><i className=\"bi bi-list\"></i></button>\r\n                <h3>Cuentas claras</h3>\r\n            </header>\r\n\r\n            <nav ref={ menu } className={`navbar__menu`}>\r\n                <ul>\r\n                    <li className=\"displayName\">\r\n                        <h5 className=\"displayName\">{ name }</h5>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/' onClick={ handleClose }>\r\n                            <i className=\"bi bi-house\"></i>Home\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/categories' onClick={ handleClose }>\r\n                            <i className=\"bi bi-list-task\"></i>Categorias\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/ingresos' onClick={ handleClose }>\r\n                            <i className=\"bi bi-graph-up-arrow\"></i>Ingresos\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/gastos' onClick={ handleClose }>\r\n                            <i className=\"bi bi-graph-down-arrow\"></i>Gastos\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/deudas' onClick={ handleClose }>\r\n                        <i className=\"bi bi-bank\"></i>Deudas\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/deudas-a-cobrar' onClick={ handleClose }>\r\n                        <i className=\"bi bi-percent\"></i>Deudas a cobrar\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/transferencias' onClick={ handleClose }>\r\n                            <i className=\"bi bi-arrow-left-right\"></i>Transferencias\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/cuentas' onClick={ handleClose }>\r\n                            <i className=\"bi bi-wallet\"></i>Cuentas\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/estadisticas' onClick={ handleClose }>\r\n                            <i className=\"bi bi-bar-chart\"></i>Estadisticas\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/compras' onClick={ handleClose }>\r\n                        <i className=\"bi bi-cart\"></i>Compras\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/ventas' onClick={ handleClose }>\r\n                        <i className=\"bi bi-piggy-bank\"></i>Ventas\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/login' onClick={ handleLogout } className=\"logout\">\r\n                            <i className=\"bi bi-box-arrow-in-left\"></i>Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <section onClick={ handleClose } className='navbar__principal'>\r\n                <div className=\"navbar__modal\" ref={ modal }>\r\n                </div>\r\n                <div className='navbar__vista'>\r\n                    <Routes>\r\n                        <Route path='/' element={ <HomeScreen />} />\r\n                        <Route path='/categories' element={ <CategoriesScreen />} />\r\n                        <Route path='/ingresos' element={ <IngresosScreen />} />\r\n                        <Route path='/gastos' element={ <GastosScreen />} />\r\n                        <Route path='/transferencias' element={ <TransferenciasScreen tipo={ 'transferencia'} />} />\r\n                        <Route path='/estadisticas' element={ <EstadisticasScreen />} />\r\n                        <Route path='/cuentas' element={ <CuentasScreen />} />\r\n                        <Route path='/movimientos' element={ <MovimientosScreen />} />\r\n                        <Route path='/deudas' element={ <DeudasScreen />} />\r\n                        <Route path='/deudas-a-cobrar' element={ <DeudasACobrarScreen />} />\r\n                        <Route path='/compras' element={ <TransferenciasScreen tipo={'compraActivos'} />} />\r\n                        <Route path='/ventas' element={ <TransferenciasScreen tipo={'ventaActivos'} />} />\r\n                        <Route path='*' element={ <Navigate to='/' /> } />\r\n                    </Routes>\r\n                </div>\r\n            </section>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const actualizarValores = pares => {\r\n\r\n    return{\r\n        type: types.actualizarValores,\r\n        payload: pares\r\n    }\r\n}\r\n","import { useDispatch } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const DetalleDeuda = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeMov} = useSelector(state => state.movs)\r\n\r\n    const { cantidad, cantidadPagada, categoria, prestador, cuenta, fecha, descripcion, estado, cuotas, cuotasPagadas, url } = activeMov;\r\n\r\n    const handleSaldarDeuda = e => {\r\n        e.preventDefault();\r\n        dispatch( openModal( {\r\n            tipo: 'saldar deuda',\r\n         } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle deuda</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span>Deuda</span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad total: <span>$ { cantidad }</span></h4>\r\n\r\n                <h4>Cantidad abonada: <span>$ { cantidadPagada }</span></h4>\r\n\r\n                <h4>Cantidad restante: <span>$ { cantidad - cantidadPagada }</span></h4>\r\n\r\n                <h4>Prestador: <span>{ prestador }</span></h4>\r\n\r\n                <h4>Cuenta: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                <h4>Cuotas abonadas: <span> { cuotasPagadas }/{ cuotas }</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n\r\n                <h4>Estado: <span>{ estado }</span></h4>\r\n\r\n                \r\n            </section>\r\n                {\r\n                    estado === 'pendiente' && <button onClick={ handleSaldarDeuda } className=\"btn boton-saldar\">Saldar cuota</button>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","const verificarCaracteres = input =>{\r\n\r\n    if ( input ) {\r\n        const caracteresNoValidos= ['<', '>', '\"', \"'\", 'script']\r\n        input = input.toString()\r\n\r\n        if ( input.includes('script') ) {\r\n            return true;\r\n        }\r\n\r\n        for( let caracter of caracteresNoValidos ){\r\n            if ( input.includes( caracter ) ) {\r\n                return true;\r\n                // break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const isFormValid = form =>{\r\n\r\n    if ( typeof form === 'string') {\r\n        if ( form.length < 1 || form === '' || form === '-' || verificarCaracteres( form )) {\r\n            return{\r\n                ok: false,\r\n                msg: 'input no valido'\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( form.fecha > Date.now() ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'La fecha debe ser igual o menor al dia de hoy'\r\n        }\r\n    }\r\n    if ( form.cuenta?.length < 1 || form.cuenta === '' || form.cuenta === '-' || verificarCaracteres( form.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta válida'\r\n        }\r\n    }\r\n    if (form.nuevaCuenta === '' || !isNaN( form.nuevaCuenta ) || form.nuevaCuenta?.length < 2 || verificarCaracteres( form.nuevaCuenta )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese una nueva cuenta válida'\r\n        }\r\n    }\r\n    if ( form.from?.cuenta.length < 1 || form.from?.cuenta === '' || form.from?.cuenta === '-' || verificarCaracteres( form.from?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta a debitar válida'\r\n        }\r\n    }\r\n    if ( form.to?.cuenta.length < 1 || form.to?.cuenta === '' || form.to?.cuenta === '-' || verificarCaracteres( form.to?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cuenta a acreditar válida'\r\n        }\r\n    }\r\n    if ( form.subcuenta?.length < 1 || form.subcuenta === '' || form.subcuenta === '-' || verificarCaracteres( form.subcuenta )) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta válida'\r\n        }\r\n    }\r\n    if (form.nuevaSubcuenta === '' || !isNaN( form.nuevaSubcuenta ) || form.nuevaSubcuenta?.length < 2 || verificarCaracteres( form.nuevaSubcuenta )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese una nueva subcuenta válida'\r\n        }\r\n    }\r\n    if ( form.from?.subcuenta.length < 1 || form.from?.subcuenta === '' || form.from?.subcuenta === '-' || verificarCaracteres( form.from?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta a debitar válida'\r\n        }\r\n    }\r\n    if ( form.to?.subcuenta.length < 1 || form.to?.subcuenta === '' || form.to?.subcuenta === '-' || verificarCaracteres( form.to?.cuenta ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una subcuenta a acreditar válida'\r\n        }\r\n    }\r\n    if ( form.prestador === '' || !isNaN( form.prestador ) || form.prestador?.length < 2 || verificarCaracteres( form.prestador ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un prestador válido'\r\n        }\r\n    }\r\n    if ( form.tomador === '' || !isNaN( form.tomador ) || form.tomador?.length < 2 || verificarCaracteres( form.tomador ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un tomador válido'\r\n        }\r\n    }\r\n    if ( form.categoria?.length < 1 || form.categoria === '' || form.categoria === '-' || verificarCaracteres( form.categoria ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una categoria válida'\r\n        }\r\n    }\r\n    if ( form.nombre?.length < 1 || form.nombre === '' || form.nombre === '-' || verificarCaracteres( form.nombre ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de categoria válido'\r\n        }\r\n    }\r\n    if ( form.sector?.length < 1 || form.sector === '' || form.sector === '-' || verificarCaracteres( form.sector ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de sector válido'\r\n        }\r\n    }\r\n    if ( (form.cantidad !== undefined) && (form.cantidad <= 0 || form.cantidad === '' || form.cantidad === '-' || isNaN( form.cantidad ) || verificarCaracteres( form.cantidad )) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad válida (mayor a cero)'\r\n        }\r\n    }\r\n    if ( verificarCaracteres( form.descripcion ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Descripcion no valida (evite los signos como: \"<, >, \"\", `` )'\r\n        }\r\n    }\r\n    if ( form.nuevaCategoria === '' || !isNaN( form.nuevaCategoria ) || form.nuevaCategoria?.length < 2 || verificarCaracteres( form.nuevaCategoria )) {\r\n        return{\r\n            ok: false,\r\n            msg: 'Ingrese un nuevo nombre de categoria válido'\r\n        }\r\n    }\r\n    if ( (form.cuotasAPagar !== undefined) && (form.cuotasAPagar <= 0 || form.cuotasAPagar === '' || form.cuotasAPagar === '-' || isNaN( form.cuotasAPagar ) || verificarCaracteres( form.cuotasAPagar )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad de cuotas válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( (form.cantidadAPagar !== undefined) && (form.cantidadAPagar <= 0 || form.cantidadAPagar === '' || form.cantidadAPagar === '-' || isNaN( form.cantidadAPagar ) || verificarCaracteres( form.cantidadAPagar )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( (form.cuotas !== undefined) && (form.cuotas <= 0 || form.cuotas === '' || form.cuotas === '-' || isNaN( form.cuotas ) || verificarCaracteres( form.cuotas )) ){\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una cantidad de cuotas válida (mayor a cero)'\r\n        }  \r\n    }\r\n    if ( form.monedaValuacion?.length < 1 || form.monedaValuacion === '' || form.monedaValuacion === '-' || verificarCaracteres( form.monedaValuacion ) ) {\r\n        return {\r\n            ok: false,\r\n            msg: 'Ingrese una moneda para valuación válida'\r\n        }\r\n    }\r\n    \r\n    return {\r\n        ok: true\r\n    }\r\n\r\n}","import { useSelector } from \"react-redux\";\r\n\r\nexport const useManySelectors = ( tipo ) => {\r\n\r\n    const { movs, activeMov } = useSelector(state => state.movs );\r\n    const { typeModal } = useSelector(state => state.modals );\r\n    const { categorias } = useSelector(state => state.cats );\r\n    const { cuentas } = useSelector(state => state.cuentas );\r\n\r\n    const totalMovimientos = movs.filter( el => el.tipo !== 'prestamo' && el.tipo !== 'transferencia' && el.tipo !== 'deuda' );\r\n\r\n    const nombreCuentas = cuentas.map( el => el.nombre )\r\n\r\n    let nombreCategorias = []\r\n    tipo ? nombreCategorias = categorias.filter( el => el.tipo === tipo ).map( el => el.nombre ).sort()\r\n         : nombreCategorias = categorias.filter( el => el.tipo === typeModal ).map( el => el.nombre ).sort()\r\n    \r\n\r\n    return {\r\n        movs,\r\n        activeMov,\r\n        typeModal,\r\n        totalMovimientos,\r\n        cuentas,\r\n        nombreCuentas,\r\n        nombreCategorias\r\n    } ;\r\n}\r\n","\r\n\r\nexport const fileUpload = async ( file ) =>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dnnlsb3bs/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'cuentas-claras');\r\n    formData.append('file', file );\r\n    \r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        console.log( error);\r\n    }\r\n\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport { fileUpload } from \"../../../helpers/fileUpload\";\r\n\r\nexport const UploadFile = ({ formValues, isLoading, setIsLoading }) => {\r\n\r\n    const isMounted = useRef( true )\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n    const [isComprobanteAdd, setIsComprobanteAdd] = useState( formValues.url )\r\n    const comprobante = useRef();\r\n\r\n    const agregarComprobante = e => {\r\n        e.preventDefault();\r\n        comprobante.current.click();\r\n    }\r\n\r\n    const handleChangeComprobante =  async(e) => {\r\n        e.preventDefault();\r\n\r\n        if ( e.target.files.length === 0 ) {\r\n            setIsComprobanteAdd( false )\r\n        } else{\r\n            setIsLoading( true )\r\n            const url = await fileUpload( e.target.files[0] )\r\n            if ( isMounted.current ) {\r\n                formValues.url = url;\r\n                setIsComprobanteAdd( true );\r\n                setIsLoading( false )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal__section\">\r\n            <input ref={ comprobante } multiple={false} onChange={ handleChangeComprobante } type=\"file\" name=\"factura\" id=\"factura\" accept='.png, .jpg, .jpeg, .pdf'/>\r\n            <button className={`btn ${ isComprobanteAdd ? 'added' : ''}`} onClick={ agregarComprobante }> \r\n            { isComprobanteAdd \r\n                ?   <>\r\n                        Comprobante agregado <i className='bi bi-file-earmark-check'></i>\r\n                    </> \r\n                :   <>\r\n                        Agregar comprobante <i className=\"bi bi-file-earmark-arrow-up\"></i>\r\n                    </> \r\n                  }\r\n            </button>\r\n            { isLoading && <p>Cargando...</p>}\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCategoria } from '../../../actions/categoriasActions';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const Deuda = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaCategoria, setNuevaCategoria] = useState({\r\n        nombre: '',\r\n        sector: ''\r\n    })\r\n    const [nuevoActivo, setNuevoActivo] = useState('')\r\n\r\n    const { activeMov, nombreCuentas, nombreCategorias, cuentas } = useManySelectors( 'gasto' )\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        prestador: '',\r\n        tipo: 'deuda',\r\n        categoria: nombreCategorias[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( nuevaCuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: []\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva categoria\r\n        if (formValues.categoria === 'nuevaCategoria') {\r\n            const respForm = isFormValid( nuevaCategoria );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.categoria = nuevaCategoria.nombre;\r\n\r\n            dispatch( startAgregarCategoria({\r\n                nombre: nuevaCategoria.nombre,\r\n                tipo: 'gasto',\r\n                sector: nuevaCategoria.sector\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva cuenta ( Bien personal )\r\n        if ( formValues.categoria === 'nuevoActivo' ) {\r\n            const respForm = isFormValid( nuevoActivo );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.categoria = nuevoActivo;\r\n\r\n            dispatch( startAgregarSubcuenta ({\r\n                id: cuentas.find( cta => cta.nombre === 'Activos' ).id,\r\n                nombre: 'Activos',\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === 'Activos' ).subcuentas, nuevoActivo ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n                id: Date.now()\r\n             }, 'nuevaDeuda' ));\r\n            Swal.fire('Nueva deuda', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nueva deuda` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre del prestador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } className={ formValues.categoria === 'nuevaCategoria' ? 'un-focus' : '' } >\r\n                        <optgroup label='Categorias'>\r\n                            {\r\n                                nombreCategorias.map( el => <option key={ el } value={ el } multiple={ false }>{ el }</option> )\r\n                            }\r\n                            <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                        </optgroup>\r\n                        <optgroup label='Activos'>\r\n                            {\r\n                                cuentas.find( el => el.nombre === 'Activos').subcuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                            }\r\n                            <option value=\"nuevoActivo\">...nuevo bien personal</option>\r\n                        </optgroup>\r\n                    </select>\r\n                    {\r\n                        formValues.categoria === 'nuevaCategoria' && \r\n                                    <>\r\n                                        <label htmlFor=\"nuevaCategoria\">Nombre nueva categoria:</label>\r\n                                        <input id='nuevaCategoria' name='nombre' value={ nuevaCategoria.nombre } onChange={ e => setNuevaCategoria({...nuevaCategoria, [e.target.name]: e.target.value } )} autoFocus type=\"text\" placeholder='Ej. Comida, Boliche, Sueldo' />\r\n                                        <label htmlFor=\"nuevoSector\">Sector:</label>\r\n                                        <input id='nuevoSector' name='sector' value={ nuevaCategoria.sector } onChange={ e => setNuevaCategoria( {...nuevaCategoria, [e.target.name]: e.target.value } )} type=\"text\" placeholder='Ej. Hogar, Higiene, Salud' />\r\n\r\n                                    </>\r\n                    }\r\n                    {\r\n                        formValues.categoria === 'nuevoActivo' && \r\n                                    <>\r\n                                        <label htmlFor=\"nuevoActivo\">Nombre nuevo bien personal:</label>\r\n                                        <input id='nuevoActivo' name='nombre' value={ nuevoActivo } onChange={ e => setNuevoActivo( e.target.value ) } autoFocus type=\"text\" placeholder='Ej. Auto, moto, depto' />\r\n\r\n                                    </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { DetalleDeuda } from \"./DetalleDeuda\"\r\nimport { Deuda } from \"./Deuda\"\r\n\r\nexport const FormulariosDeuda = ({ modo, handleClose }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleDeuda handleClose={ handleClose } />\r\n                                    : <Deuda handleClose={handleClose} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\n\r\nexport const SaldarDeuda = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas, nombreCategorias } = useManySelectors('gasto')\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( { \r\n        ...activeMov,\r\n        subcuenta: '-',\r\n        cuotasAPagar: 1,\r\n        cantidadAPagar: activeMov.cantidad - activeMov.cantidadPagada,\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        cuentas.find( cta => cta.nombre === 'Activos' ).subcuentas.forEach( sub => {\r\n            if ( sub === formValues.categoria ) {\r\n                \r\n            }\r\n        })\r\n\r\n        \r\n\r\n        // Cuando se quiere abonar el total pero no el total de las cuotas\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) === 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) > 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Cuando la deuda es saldada parcial o totalmente\r\n        activeMov.cuotasPagadas = formValues.cuotasPagadas + parseInt(formValues.cuotasAPagar);  \r\n        activeMov.cantidadPagada = formValues.cantidadPagada + parseInt(formValues.cantidadAPagar);\r\n        activeMov.estado = ( formValues.cuotas - formValues.cuotasPagadas - formValues.cuotasAPagar ) > 0 ? 'pendiente' : 'saldado'\r\n\r\n        dispatch( startActualizarMovimiento( activeMov ))\r\n            \r\n        dispatch( startNuevoMovimiento( {\r\n            id: Date.now(),\r\n            idReferencia: formValues.id,\r\n            fecha: formValues.fecha,\r\n            cantidad: formValues.cantidadAPagar,\r\n            cuenta: formValues.cuenta,\r\n            subcuenta: formValues.subcuenta,\r\n            categoria: formValues.categoria,\r\n            aQuien: activeMov.prestador,\r\n            tipo: 'gasto',\r\n            cuotas: formValues.cuotasAPagar\r\n        }, 'nuevoGasto' ));\r\n\r\n        Swal.fire('Pago realizado', `${ formValues.cuotasAPagar } cuotas abonadas correctamente`, 'success')\r\n\r\n        handleClose(e)\r\n        return;\r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>Saldar deuda</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select disabled name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">nueva cuenta</option>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input disabled type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre'/>\r\n                    </div>   \r\n                </div>\r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select disabled name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } >\r\n                        <optgroup label='Categorias'>\r\n                            {\r\n                                nombreCategorias.map( el => <option key={ el } value={ el } multiple={ false }>{ el }</option> )\r\n                            }\r\n                            <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                        </optgroup>\r\n                        <optgroup label='Activos'>\r\n                            {\r\n                                cuentas.find( el => el.nombre === 'Activos').subcuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                            }\r\n                            <option value=\"nuevoActivo\">...nuevo bien personal</option>\r\n                        </optgroup>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidadAPagar\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cantidadAPagar\" value={ formValues.cantidadAPagar } max={ parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) } min={0} onChange={ handleChange } placeholder={1}/>\r\n                    </div>\r\n                    <p>Quedarian abonar: $ { activeMov.cantidad - activeMov.cantidadPagada }</p>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                    <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cuotasAPagar\" value={ formValues.cuotasAPagar } max={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) } min={1} onChange={ handleChange } placeholder='1'/>\r\n                    <p>Quedarian: { activeMov.cuotas - activeMov.cuotasPagadas } cuotas por pagar</p>\r\n                </div>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>  \r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Saldar deuda</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\n\r\nexport const SaldarPrestamo = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { title } = useSelector(state => state.modals)\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( {\r\n        ...activeMov,\r\n        cantidadAPagar: activeMov.cantidad - activeMov.cantidadPagada,\r\n        cuotasAPagar: 1,\r\n    } )\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Cuando se quiere abonar el total pero no el total de las cuotas\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) === 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) - parseInt( formValues.cantidadAPagar ) > 0 && parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas ) - parseInt( formValues.cuotasAPagar ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Cuando el prestamo es saldado parcial o totalmente\r\n        activeMov.cuotasPagadas = formValues.cuotasPagadas + parseInt(formValues.cuotasAPagar);  \r\n        activeMov.cantidadPagada = formValues.cantidadPagada + parseInt(formValues.cantidadAPagar);\r\n        activeMov.estado = ( formValues.cuotas - formValues.cuotasPagadas - formValues.cuotasAPagar ) > 0 ? 'pendiente' : 'saldado'\r\n\r\n        dispatch( startActualizarMovimiento( activeMov ))\r\n\r\n        if ( activeMov.tipo === 'prestamo' ) {\r\n                \r\n            dispatch( startNuevoMovimiento( {\r\n                id: Date.now(),\r\n                idReferencia: formValues.id,\r\n                fecha: formValues.fecha,\r\n                cantidad: formValues.cantidadAPagar,\r\n                cuenta: formValues.cuenta,\r\n                subcuenta: formValues.subcuenta,\r\n                categoria: 'pago '+ formValues.tipo,\r\n                aQuien: activeMov.prestador,\r\n                cuotas: formValues.cuotasAPagar,\r\n                tipo: 'gasto'  \r\n            }, 'nuevoGasto' ));\r\n            Swal.fire('Pago realizado', `${ formValues.cuotasAPagar } cuotas abonadas correctamente`, 'success')\r\n\r\n        } else if ( activeMov.tipo === 'deudaACobrar' ) {\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                id: Date.now(),\r\n                idReferencia: formValues.id,\r\n                fecha: formValues.fecha,\r\n                cantidad: formValues.cantidadAPagar,\r\n                cuenta: formValues.cuenta,\r\n                subcuenta: formValues.subcuenta,\r\n                categoria: 'cobro prestamo',\r\n                deQuien: activeMov.tomador,\r\n                tipo: 'ingreso',\r\n                cuotas: formValues.cuotasAPagar\r\n            }, 'nuevoIngreso' ));\r\n\r\n            Swal.fire('Cobro realizado', `${ formValues.cuotasAPagar } cuotas cobradas correctamente`, 'success')\r\n        }\r\n\r\n        handleClose(e)\r\n        return;\r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ title === 'prestamo' ? 'Saldar Prestamo' : 'Saldar deuda a cobrar' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select disabled name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">nueva cuenta</option>\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section'>\r\n                {\r\n                        formValues.prestador \r\n                        ?   <>\r\n                                <label htmlFor=\"prestador\">Prestador: </label>\r\n                                <div className='prestador'>\r\n                                    <input disabled type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre'/>\r\n                                </div>\r\n                            </>\r\n                        \r\n                        :   <>\r\n                                <label htmlFor=\"tomador\">Tomador: </label>\r\n                                <div className='tomador'>\r\n                                    <input disabled type=\"text\" name=\"tomador\" value={ formValues.tomador } onChange={ handleChange } placeholder='Nombre'/>\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidadAPagar\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cantidadAPagar\" value={ formValues.cantidadAPagar } max={ parseInt(formValues.cantidad) - parseInt(formValues.cantidadPagada) } min={1} onChange={ handleChange } placeholder={1}/>\r\n                    </div>\r\n                    <p>Quedarian abonar: $ { activeMov.cantidad - activeMov.cantidadPagada }</p>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                    <input disabled={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) === 1 ? true : false } type=\"number\" name=\"cuotasAPagar\" value={ formValues.cuotasAPagar } max={ parseInt(formValues.cuotas) - parseInt(formValues.cuotasPagadas) } min={1} onChange={ handleChange } placeholder='1'/>\r\n                    <p>Quedarian: { activeMov.cuotas - activeMov.cuotasPagadas } cuotas por pagar</p>\r\n                </div>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' type='submit'>Saldar cuota</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n            </div>   \r\n        </form>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleGasto = () => {\r\n\r\n    const { cantidad, categoria, cuenta, subcuenta, fecha, descripcion, cuotas, aQuien, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle gasto</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Gasto </span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Cuenta debitada: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                { cuotas && <h4>Cuotas: <span>{ cuotas }</span></h4> }\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                { aQuien && <h4>Pago a: <span>{ aQuien }</span></h4> }\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActualizarMovimiento, startEditarMontosDeuda, startEliminarCuotaDeuda, startEliminarMovimiento, startNuevoMovimiento } from '../../actions/movsActions';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useManySelectors } from '../../hooks/useManySelectors';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../actions/cuentasActions';\r\nimport { startAgregarCategoria } from '../../actions/categoriasActions';\r\nimport { isFormValid } from '../../helpers/isFormValid';\r\nimport { UploadFile } from '../ui/uploadFile/UploadFile';\r\nimport { convertidor } from '../../helpers/convertidor';\r\n\r\nexport const NuevoIngresoGasto = ({ handleClose }) => {\r\n   \r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { pares } = useSelector(state => state.pares)\r\n    \r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubcuenta] = useState('')\r\n    const [nuevaCategoria, setNuevaCategoria] = useState({\r\n        nombre: '',\r\n        sector: ''\r\n    })\r\n    const [monedaValuacion, setmonedaValuacion] = useState('')\r\n\r\n    const { typeModal, activeMov, nombreCuentas, nombreCategorias, movs } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: new Date(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0]).subcuentas[0],\r\n        categoria: nombreCategorias[0],\r\n        cantidad: '',\r\n        descripcion: '',\r\n        url: '',\r\n    })\r\n    formValues.fecha = new Date( formValues.fecha )\r\n\r\n    // Referencia tanto a deudas como a prestamos\r\n    const deudaOriginal = activeMov?.idReferencia && movs.find( el => el.id === activeMov.idReferencia );\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        formValues.fecha = Date.parse(formValues.fecha)\r\n\r\n        // DEUDAS Y PRESTAMOS\r\n        // Cuando se quiere abonar el monto total pero no el total de las cuotas\r\n        if ( parseInt(deudaOriginal?.cantidad) - ( parseInt(deudaOriginal?.cantidadPagada) - activeMov?.cantidad ) - parseInt( formValues.cantidad ) === 0 && parseInt(deudaOriginal?.cuotas) - ( parseInt(deudaOriginal?.cuotasPagadas ) - activeMov?.cuotas ) - parseInt( formValues.cuotas ) > 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total sin terminar de abonar todas las cuotas, por favor completa con las cuotas restantes o revisa el monto', 'error');\r\n            return;          \r\n        }\r\n        // Cuando se quiere abonar el total de las cuotas pero no el monto total\r\n        if ( parseInt(deudaOriginal?.cantidad) - ( parseInt(deudaOriginal?.cantidadPagada) - activeMov?.cantidad ) - parseInt( formValues.cantidad ) > 0 && parseInt(deudaOriginal?.cuotas) - ( parseInt(deudaOriginal?.cuotasPagadas ) - activeMov?.cuotas ) - parseInt( formValues.cuotas ) === 0 ) {\r\n            \r\n            Swal.fire('Cuidado','Estas tratando de abonar el total de las cuotas sin terminar de abonar la cantidad total, por favor completa con el monto restante o revisa las cuotas', 'error');\r\n            return;          \r\n        }\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n            \r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agregar nueva categoria\r\n        if (formValues.categoria === 'nuevaCategoria') {\r\n\r\n            const respForm = isFormValid( nuevaCategoria );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n\r\n            formValues.categoria = nuevaCategoria.nombre;\r\n\r\n            dispatch( startAgregarCategoria({\r\n                nombre: nuevaCategoria.nombre,\r\n                tipo: typeModal,\r\n                sector: nuevaCategoria.sector\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            // Editar pago de deuda\r\n            if ( activeMov.idReferencia) {\r\n                dispatch( startEditarMontosDeuda({\r\n                    idReferencia: activeMov.idReferencia,\r\n                    subcuenta: formValues.subcuenta,\r\n                    cantidadAnterior: parseInt( activeMov.cantidad ),\r\n                    cantidadNueva: parseInt( formValues.cantidad ),\r\n                    cuotasAnterior: activeMov.cuotas,\r\n                    cuotasNuevas: parseInt( formValues.cuotas )\r\n                    })\r\n                )\r\n            }\r\n\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n\r\n        } else if ( typeModal === 'ingreso' ) {\r\n\r\n            if ( formValues.cuenta === 'Activos') {\r\n                formValues.cantidad = convertidor([{nombre: monedaValuacion, valor: parseInt(formValues.cantidad) }], 'USD', pares )\r\n                formValues.monedaValuacion = 'USD';\r\n            }\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                // id: Date.now(),\r\n                tipo: typeModal,\r\n                ...formValues\r\n            }, 'nuevoIngreso' ))\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n\r\n        }else if ( typeModal === 'gasto' ) {\r\n            \r\n            dispatch( startNuevoMovimiento( {\r\n                tipo: typeModal,\r\n                ...formValues\r\n            }, 'nuevoGasto' ));\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n        } \r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarCuotaDeuda({\r\n                idReferencia: activeMov.idReferencia,\r\n                cantidadAnterior: parseInt( activeMov.cantidad ),\r\n                cuotasAnterior: activeMov.cuotas\r\n            }))\r\n\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }\r\n\r\n    }\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit }>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nuevo ${ typeModal }` } </h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                    maxDate={ new Date() }\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">{ typeModal === 'ingreso' ? 'Cuenta a acreditar:' : 'Cuenta a debitar:' }</label>\r\n                    <select disabled={ activeMov?.idReferencia ? true : false } name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubcuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    formValues.cuenta === 'Activos' && \r\n                    <div className='modal__section'>\r\n                        <label htmlFor=\"monedaValuacion\">En que moneda se valua:</label>\r\n                        <select name=\"monedaValuacion\" id=\"monedaValuacion\" value={ monedaValuacion } onChange={ e => setmonedaValuacion( e.target.value ) }>\r\n                            <option value=\"-\">-</option>\r\n                            { nombreCuentas.filter( cta => cta !== 'Activos' ).map( el => <option key={ el } value={ el }>{ el }</option>) }\r\n                        </select>\r\n                    </div>\r\n                }\r\n                \r\n                <div className='modal__section motivo'>\r\n                    <label htmlFor=\"motivo\">Motivo: </label>\r\n                    <select disabled={ activeMov?.idReferencia ? true : false } name=\"categoria\" value={ formValues.categoria } onChange={ handleChange } >{\r\n                        nombreCategorias.map( el => <option key={ el } value={ el }>{ el }</option> )\r\n                    }\r\n                    <option value=\"nuevaCategoria\">...nueva categoria</option>\r\n                    </select>\r\n                    {\r\n                        formValues.categoria === 'nuevaCategoria' && \r\n                                <>\r\n                                    <label htmlFor=\"nuevaCategoria\">Nombre nueva categoria:</label>\r\n                                    <input id='nuevaCategoria' name='nombre' value={ nuevaCategoria.nombre } onChange={ e => setNuevaCategoria({...nuevaCategoria, [e.target.name]: e.target.value } )} autoFocus type=\"text\" placeholder='Ej. Comida, Boliche, Sueldo' />\r\n                                    <label htmlFor=\"nuevoSector\">Sector:</label>\r\n                                    <input id='nuevoSector' name='sector' value={ nuevaCategoria.sector } onChange={ e => setNuevaCategoria( {...nuevaCategoria, [e.target.name]: e.target.value } )} type=\"text\" placeholder='Ej. Hogar, Higiene, Salud' />\r\n\r\n                                </>\r\n                    }\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } max={ deudaOriginal && deudaOriginal?.cantidad - ( deudaOriginal?.cantidadPagada - activeMov?.cantidad ) }  min={1} placeholder='1000'/>\r\n                    </div>\r\n                    { activeMov?.idReferencia && <p>La cantidad restante es: { deudaOriginal?.cantidad - ( deudaOriginal?.cantidadPagada - activeMov?.cantidad ) }</p> }\r\n                </div>\r\n                {\r\n                    activeMov?.idReferencia && \r\n                    <div className='modal__section '>\r\n                        <label htmlFor=\"cuotasaPagar\">Cuotas: </label>\r\n                        <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } max={ deudaOriginal?.cuotas -( deudaOriginal?.cuotasPagadas - activeMov?.cuotas ) }  min={1} onChange={ handleChange } placeholder='1'/>\r\n                        <p>Cuotas restantes: { deudaOriginal?.cuotas -( deudaOriginal?.cuotasPagadas - activeMov?.cuotas ) }</p>\r\n                    </div>\r\n                }\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","import { DetalleGasto } from \"./DetalleGasto\"\r\nimport { NuevoIngresoGasto } from \"../NuevoIngresoGasto\"\r\n\r\nexport const FormulariosGasto = ({ modo, handleClose }) => {\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleGasto />\r\n                                    : <NuevoIngresoGasto handleClose={ handleClose } />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleIngreso = () => {\r\n\r\n    const { cantidad, categoria, cuenta, subcuenta, fecha, descripcion, deQuien, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle ingreso</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Ingreso </span></h4>\r\n\r\n                <h4>Fecha: <span>{ new Date( fecha ).toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Cuenta acreditada: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                <h4>Motivo: <span>{ categoria }</span></h4>\r\n\r\n                { deQuien && <h4>Cobro a: <span>{ deQuien }</span></h4> }\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n                \r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import { DetalleIngreso } from \"./DetalleIngreso\"\r\nimport { NuevoIngresoGasto } from \"../NuevoIngresoGasto\"\r\n\r\n\r\nexport const FormulariosIngreso = ({ modo, handleClose }) => {\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' ? <DetalleIngreso />\r\n                                    : <NuevoIngresoGasto handleClose={ handleClose }/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const DeudasACobrar = ({ handleClose }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0]).subcuentas[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        tipo: 'deudaACobrar',\r\n        tomador: '',\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n            }, 'nuevoPrestamo' ));\r\n            Swal.fire('Nueva deuda a cobrar', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : 'Nueva deuda a cobrar' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"tomador\">Tomador: </label>\r\n                    <div className='tomador'>\r\n                        <input type=\"text\" name=\"tomador\" value={ formValues.tomador } onChange={ handleChange } placeholder='Nombre del tomador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                \r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='5000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n \r\n        </form>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { openModal } from \"../../../actions/modalActions\";\r\n\r\nexport const DetallePrestamo = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeMov } = useSelector(state => state.movs)\r\n\r\n    const { cantidad, cuenta, subcuenta, prestador, tomador, fecha, descripcion, estado, cantidadPagada, cuotas, cuotasPagadas, tipo, url } = activeMov;\r\n\r\n\r\n    const handleSaldarPrestamo = e => {\r\n        e.preventDefault();\r\n        dispatch( openModal( {\r\n            tipo: 'saldar prestamo',\r\n            title: tipo\r\n         } ) )\r\n    }\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            { tipo === 'prestamo' ?  <h1>Detalle prestamo</h1> : <h1>Detalle deuda a cobrar</h1> }\r\n            \r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span>{tipo === 'prestamo' ?  'Prestamo' : 'Deuda a cobrar' }</span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad total: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n\r\n                <h4>Cantidad abonada: <span>$ { cantidadPagada }</span></h4>\r\n\r\n                <h4>Cantidad restante: <span>$ { Math.abs( cantidad ) - cantidadPagada }</span></h4>\r\n      \r\n                {\r\n                    prestador ? <h4>Prestador: <span>{ prestador }</span></h4>\r\n                              : <h4>Tomador: <span>{ tomador }</span></h4>\r\n                }\r\n \r\n                <h4>Cuenta: <span>{ cuenta }</span></h4>\r\n\r\n                <h4>Subcuenta: <span>{ subcuenta }</span></h4>\r\n\r\n                <h4>Cuotas abonadas: <span>{ cuotasPagadas }/{ cuotas }</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n\r\n                <h4>Estado: <span>{ estado }</span></h4>\r\n\r\n            </section>\r\n                {\r\n                    estado === 'pendiente' && <button onClick={ handleSaldarPrestamo } className=\"btn boton-saldar\">Saldar cuota</button>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const Prestamo = ({ handleClose, typeModal }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [nuevaCuenta, setNuevaCuenta] = useState('')\r\n    const [nuevaSubcuenta, setNuevaSubuenta] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { activeMov, nombreCuentas } = useManySelectors()\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        cuenta: nombreCuentas[0],\r\n        subcuenta: cuentas.find( el => el.nombre === nombreCuentas[0])?.subcuentas[0],\r\n        cantidad: 0,\r\n        cantidadPagada: 0,\r\n        tipo: typeModal,\r\n        prestador: '',\r\n        cuotas: 1,\r\n        cuotasPagadas: 0,\r\n        descripcion: '',\r\n        estado: 'pendiente'\r\n    })\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta\r\n        if (formValues.cuenta === 'nuevaCuenta') {\r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuenta, nuevaSubcuenta: nuevaSubcuenta } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.cuenta = nuevaCuenta;\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuenta,\r\n                subcuentas: [ nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente\r\n        if (formValues.cuenta !== 'nuevaCuenta' && formValues.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuenta );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( respForm.msg )\r\n                return;\r\n            }\r\n            formValues.subcuenta = nuevaSubcuenta;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.cuenta ).subcuentas, nuevaSubcuenta ]\r\n            }))\r\n        }\r\n\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            dispatch( startNuevoMovimiento( {\r\n                ...formValues,\r\n                id: Date.now()\r\n            }, 'nuevoPrestamo' ));\r\n            Swal.fire('Nueva prestamo', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    let subcuentas\r\n    formValues.cuenta === 'nuevaCuenta' ? subcuentas = '-' : subcuentas = cuentas.find( el => el.nombre === formValues.cuenta )?.subcuentas\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : 'Nuevo Prestamo' }</h1>\r\n                { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section'>\r\n                    <label htmlFor=\"prestador\">Prestador: </label>\r\n                    <div className='prestador'>\r\n                        <input type=\"text\" name=\"prestador\" value={ formValues.prestador } onChange={ handleChange } placeholder='Nombre del prestador'/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.cuenta } onChange={ handleChange }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.cuenta === 'nuevaCuenta' && <input value={ nuevaCuenta } onChange={ (e)=> setNuevaCuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.subcuenta } onChange={ handleChange }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.cuenta !== 'nuevaCuenta' && subcuentas.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuenta } onChange={ e => setNuevaSubuenta( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                \r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <div className='modal__section '>\r\n                    <label htmlFor=\"cuotas\">Cuotas: </label>\r\n                    <input type=\"number\" name=\"cuotas\" value={ formValues.cuotas } onChange={ handleChange } placeholder='1' min={1}/>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className='btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n \r\n        </form>\r\n    )\r\n}\r\n","import { DeudasACobrar } from \"../formDeudasACobrar/DeudasACobrar\"\r\nimport { DetallePrestamo } from \"./DetallePrestamo\"\r\nimport { Prestamo } from \"./Prestamo\"\r\n\r\n\r\nexport const FormulariosPrestamo = ({ modo, handleClose, typeModal }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                typeModal === 'prestamo' && \r\n                        (modo === 'solo ver' ? <DetallePrestamo />\r\n                                             : <Prestamo handleClose={handleClose} typeModal={ typeModal } />)\r\n            }\r\n            {\r\n                typeModal === 'deudaACobrar' && \r\n                        (modo === 'solo ver' ? <DetallePrestamo />\r\n                                             : <DeudasACobrar handleClose={ handleClose } />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const CompraActivos = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, cuentas, handleChangeTo, nuevaCuentaFrom, setNuevaCuentaFrom ,nuevaSubcuentaFrom, setNuevaSubcuentaFrom, nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.to.cuenta = 'Activos'\r\n    formValues.tipo= 'compraActivos'\r\n\r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n    \r\n    let subcuentasFrom\r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' :  subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Comprar activo` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Con cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.from.cuenta } onChange={ handleChangeFrom }>\r\n                        {\r\n                            nombreCuentas.filter( cta => cta !== 'Activos' ).map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    { formValues.from.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaFrom } onChange={ (e)=> setNuevaCuentaFrom( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' /> }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    { formValues.from.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaFrom } onChange={ e => setNuevaSubcuentaFrom( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' /> }\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Activo a comprar: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const VentaActivos = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, handleChangeTo, cuentas, nuevaCuentaTo, setNuevaCuentaTo , nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.from.cuenta = 'Activos'\r\n    formValues.tipo= 'ventaActivos'\r\n\r\n    let subcuentasFrom \r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' : subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n    \r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Vender activo` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Activo a vender: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        {/* <option value=\"nuevaSubcuenta\">nueva subcuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">En que moneda se cobra: </label>\r\n                    <select name=\"cuenta\" value={ formValues.to.cuenta } onChange={ handleChangeTo }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaTo } onChange={ (e)=> setNuevaCuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n            <div className='botones'>\r\n                <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                }\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport const DetalleTransferencia = () => {\r\n\r\n    const { cantidad, from, to, fecha, descripcion, url } = useSelector(state => state.movs.activeMov)\r\n\r\n    return (\r\n        <div className='detalle__form'>\r\n            <h1>Detalle transferencia</h1>\r\n\r\n            <section className='detalle__section'>\r\n                <h4>Tipo: <span> Transferencia </span></h4>\r\n\r\n                <h4>Fecha: <span>{ fecha.toLocaleDateString() }</span></h4>\r\n\r\n                <h4>Cantidad: <span>$ { Math.abs( cantidad ) }</span></h4>\r\n    \r\n                <h4>Desde cuenta: <span>{ from.subcuenta } ({ from.cuenta })</span></h4>\r\n\r\n                <h4>A cuenta: <span>{ to.subcuenta } ({ to.cuenta })</span></h4>\r\n\r\n                { url && <h4>Comprobante: <a href={ url } target='_blank' rel=\"noreferrer\">Ver comprobante</a></h4> }\r\n\r\n                <h4>Descripcion: <span>{ descripcion }</span></h4>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import DateTimePicker from 'react-datetime-picker';\r\nimport { UploadFile } from '../../ui/uploadFile/UploadFile';\r\n\r\nexport const TransferenciaForm = ({ handleClose, handleSubmit, handleDelete, activeMov, nombreCuentas, msgForm, handleChangeCalendar, formValues, handleChangeFrom, handleChangeTo, cuentas, nuevaCuentaTo, setNuevaCuentaTo , nuevaSubcuentaTo, setNuevaSubcuentaTo, handleChange, isLoading, setIsLoading }) => {\r\n\r\n    formValues.tipo= 'transferencia'\r\n\r\n    let subcuentasTo \r\n    formValues.to.cuenta === 'nuevaCuenta' ? subcuentasTo = '-' : subcuentasTo = cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas\r\n    \r\n    let subcuentasFrom\r\n    formValues.from.cuenta === 'nuevaCuenta' ? subcuentasFrom = '-' :  subcuentasFrom = cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className='form__transferencia'>\r\n            <div className='form-container'>\r\n                <h1>{ activeMov ? 'Editar movimiento' : `Nueva transferencia` }</h1>\r\n                {\r\n                    msgForm && <div className='msg-error'>{ msgForm }</div>\r\n                }\r\n                <DateTimePicker\r\n                    onChange={ handleChangeCalendar }\r\n                    value={ formValues.fecha }\r\n                    name='fecha'\r\n                    format='dd-MM-y'\r\n                    className='calendar'\r\n                />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">Desde cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.from.cuenta } onChange={ handleChangeFrom }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        {/* <option value=\"nuevaCuenta\">nueva cuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.from.subcuenta } onChange={ handleChangeFrom }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.from.cuenta !== 'nuevaCuenta' && subcuentasFrom.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        {/* <option value=\"nuevaSubcuenta\">nueva subcuenta</option> */}\r\n                    </select>\r\n                </div>\r\n                <hr />\r\n                <div className='modal__section cuenta-principal'>\r\n                    <label htmlFor=\"cuenta\">A cuenta: </label>\r\n                    <select name=\"cuenta\" value={ formValues.to.cuenta } onChange={ handleChangeTo }>\r\n                        {\r\n                            nombreCuentas.map( el => <option key={ el } value={ el }>{ el }</option>)\r\n                        }\r\n                        <option value=\"nuevaCuenta\">...nueva cuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.cuenta === 'nuevaCuenta' && <input value={ nuevaCuentaTo } onChange={ (e)=> setNuevaCuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva cuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cuenta-secundaria'>\r\n                    <label htmlFor=\"subcuenta\">Subcuenta: </label>\r\n                    <select name=\"subcuenta\" value={ formValues.to.subcuenta } onChange={ handleChangeTo }>\r\n                        <option value=\"-\">-</option>\r\n                        {\r\n                            formValues.to.cuenta !== 'nuevaCuenta' && subcuentasTo.map( el => <option key={el } value={ el }>{ el }</option> )\r\n                        }\r\n                        <option value=\"nuevaSubcuenta\">...nueva subcuenta</option>\r\n                    </select>\r\n                    {\r\n                        formValues.to.subcuenta === 'nuevaSubcuenta' && <input value={ nuevaSubcuentaTo } onChange={ e => setNuevaSubcuentaTo( e.target.value )} autoFocus type=\"text\" placeholder='Nueva subcuenta' />\r\n                    }\r\n                </div>\r\n                <div className='modal__section cantidad'>\r\n                    <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                    <div className='cantidad'>\r\n                        $\r\n                        <input type=\"number\" name=\"cantidad\" value={ formValues.cantidad } onChange={ handleChange } placeholder='1000' min={1}/>\r\n                    </div>\r\n                </div>\r\n                <UploadFile formValues={ formValues } isLoading={ isLoading } setIsLoading={ setIsLoading }/>\r\n                <textarea className='textarea' name=\"descripcion\" value={ formValues.descripcion } onChange={ handleChange } placeholder='Descripción(opcional)'></textarea>\r\n            </div>\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' disabled={ isLoading ? true : false } type='submit'>Guardar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    {\r\n                    activeMov && <button onClick={ handleDelete } className=' btn btn-danger boton-eliminar'>Eliminar</button>\r\n                    }\r\n                </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import { CompraActivos } from \"../formCompraActivos/CompraActivos\"\r\nimport { VentaActivos } from \"../formVentaActivos/VentaActivos\"\r\nimport { DetalleTransferencia } from \"./DetalleTransferencia\"\r\nimport { TransferenciaForm } from \"./TransferenciaForm\"\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActualizarMovimiento, startEliminarMovimiento, startNuevoMovimiento } from '../../../actions/movsActions';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useManySelectors } from '../../../hooks/useManySelectors';\r\nimport { useState } from 'react';\r\nimport { startAgregarCuenta, startAgregarSubcuenta } from '../../../actions/cuentasActions';\r\nimport { isFormValid } from '../../../helpers/isFormValid';\r\nimport { sumarCantidadPorSubcuenta } from \"../../../helpers/getCantidades\"\r\nimport { startAgregarCategoria } from \"../../../actions/categoriasActions\"\r\n\r\nexport const FormulariosTransferencia = ({ handleClose, modo, typeModal }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [nuevaCuentaFrom, setNuevaCuentaFrom] = useState('')\r\n    const [nuevaCuentaTo, setNuevaCuentaTo] = useState('')\r\n    const [nuevaSubcuentaFrom, setNuevaSubcuentaFrom] = useState('')\r\n    const [nuevaSubcuentaTo, setNuevaSubcuentaTo] = useState('')\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const { categorias } = useSelector(state => state.cats)\r\n\r\n    const { nombreCuentas, activeMov, movs } = useManySelectors();\r\n\r\n\r\n    const [ formValues, handleChange, handleChangeCalendar, handleChangeFrom, handleChangeTo ] = useForm( activeMov ? activeMov : {\r\n        fecha: Date.now(),\r\n        from: {\r\n            cuenta: nombreCuentas[0],\r\n            subcuenta: '-'\r\n        },\r\n        to: {\r\n            cuenta: nombreCuentas[1],\r\n            subcuenta: '-'\r\n        },\r\n        cantidad: 0,\r\n        descripcion: '',\r\n        tipo: '',\r\n        url: ''\r\n    })\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( formValues );\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta - TO\r\n        if (formValues.to.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaTo, nuevaSubcuenta: nuevaSubcuentaTo } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.cuenta = nuevaCuentaTo;\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuentaTo,\r\n                subcuentas: [ nuevaSubcuentaTo ]\r\n            }))\r\n            \r\n        }\r\n\r\n        // Agrega nueva Cuenta y Subcuenta - FROM\r\n        if (formValues.from.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaFrom, nuevaSubcuenta: nuevaSubcuentaFrom } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.from.cuenta = nuevaCuentaFrom;\r\n            formValues.from.subcuenta = nuevaSubcuentaFrom;\r\n            dispatch( startAgregarCuenta( {\r\n                nombre: nuevaCuentaFrom,\r\n                subcuentas: [ nuevaSubcuentaFrom ]\r\n            }))\r\n        }\r\n\r\n        /* // Agrega nueva Cuenta y Subcuenta - To\r\n        if (formValues.to.cuenta === 'nuevaCuenta') {\r\n            \r\n            const respForm = isFormValid( { nuevaCuenta: nuevaCuentaTo, nuevaSubcuenta: nuevaSubcuentaTo } );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.cuenta = nuevaCuentaTo;\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n            dispatch( agregarCuenta( {\r\n                nombre: nuevaCuentaTo,\r\n                subcuentas: [ nuevaSubcuentaTo ]\r\n            }))\r\n        } */\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente - TO\r\n        if (formValues.to.cuenta !== 'nuevaCuenta' && formValues.to.subcuenta === 'nuevaSubcuenta' ) {\r\n            const respForm = isFormValid( nuevaSubcuentaTo );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.to.subcuenta = nuevaSubcuentaTo;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.to.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.to.cuenta ).subcuentas, nuevaSubcuentaTo ]\r\n            }))\r\n        }\r\n\r\n        // Agrega nueva Subcuenta a Cuenta ya existente - FROM\r\n        if (formValues.from.cuenta !== 'nuevaCuenta' && formValues.from.subcuenta === 'nuevaSubcuenta' ) {\r\n\r\n            const respForm = isFormValid( nuevaSubcuentaFrom );\r\n            if ( !respForm.ok ) {\r\n                setMsgForm( 'Nuevos nombres de cuentas no válidos' )\r\n                return;\r\n            }\r\n\r\n            formValues.from.subcuenta = nuevaSubcuentaFrom;\r\n\r\n            dispatch( startAgregarSubcuenta( {\r\n                id: cuentas.find( cta => cta.nombre === formValues.cuenta ).id,\r\n                nombre: formValues.from.cuenta,\r\n                subcuentas: [ ...cuentas.find( el => el.nombre === formValues.from.cuenta ).subcuentas, nuevaSubcuentaFrom ]\r\n            }))\r\n        }\r\n\r\n        // Verifica si es una edicion o un nuevo movimiento\r\n        if ( activeMov ) {\r\n            dispatch( startActualizarMovimiento( formValues ));\r\n            Swal.fire('Nueva edición', 'Movimiento editado correctamente', 'success')\r\n        } else {\r\n            if ( formValues.tipo === 'ventaActivos') {\r\n                \r\n                // Nuevo movimiento de ingreso cuando la venta supera la cantidad del activo\r\n                const cantidadRestanteEnCuenta = sumarCantidadPorSubcuenta( movs, cuentas, formValues.from.cuenta ).find( mov => mov.subcuenta === formValues.from.subcuenta ).cantidad\r\n                const restaEntreCantidadEnCuentaYCantidadVendida = cantidadRestanteEnCuenta - parseInt(formValues.cantidad )\r\n\r\n                if( restaEntreCantidadEnCuentaYCantidadVendida < 0 ){\r\n                    if ( !categorias.find( cat => cat.nombre === 'Ganancia por ventas' )) {\r\n                        dispatch( startAgregarCategoria({\r\n                            nombre: 'Ganancia por ventas',\r\n                            tipo: 'ingreso',\r\n                            sector: 'ventas'\r\n                        }))\r\n                    }\r\n\r\n                    formValues.cantidad = cantidadRestanteEnCuenta;\r\n    \r\n                    dispatch( startNuevoMovimiento({\r\n                        id: Date.now(),\r\n                        cantidad: Math.abs( restaEntreCantidadEnCuentaYCantidadVendida ),\r\n                        tipo: 'ingreso',\r\n                        categoria: 'Ganancia por ventas',\r\n                        cuenta: formValues.to.cuenta,\r\n                        subcuenta: formValues.to.subcuenta,\r\n                        fecha: Date.now(),\r\n                        comprobante: formValues.url,\r\n                        descripcion: `Venta de ${ formValues.from.subcuenta }`\r\n                    }, 'nuevoIngreso'))\r\n                }\r\n            }\r\n\r\n            dispatch( startNuevoMovimiento({\r\n                ...formValues\r\n            }, 'nuevaTransferencia') );\r\n\r\n            Swal.fire('Nuevo movimiento', 'Movimiento creado correctamente', 'success')\r\n        }\r\n        \r\n        handleClose(e);\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n        const confirm = window.confirm('¿Seguro que desea eliminar el evento? No podra recupararlo despues');\r\n\r\n        if ( confirm ) {\r\n            dispatch( startEliminarMovimiento( activeMov.id ) );\r\n            handleClose(e);\r\n            Swal.fire('Eliminado', 'Movimiento eliminado correctamente', 'success')\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                modo === 'solo ver' && <DetalleTransferencia />\r\n            }\r\n            {\r\n                ( (typeModal === 'transferencia') && (modo === 'crear' || modo === 'editar')) && \r\n                        <TransferenciaForm \r\n                        handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas={ cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo } \r\n                        nuevaCuentaTo={ nuevaCuentaTo }\r\n                        setNuevaCuentaTo={ setNuevaCuentaTo }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading }/>\r\n                        \r\n            }\r\n            {\r\n                (typeModal === 'compraActivos') && (modo === 'crear' || modo === 'editar' ) &&\r\n                         <CompraActivos \r\n                         handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas={ cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo }\r\n                        nuevaCuentaFrom={ nuevaCuentaFrom }\r\n                        setNuevaCuentaFrom={ setNuevaCuentaFrom }\r\n                        nuevaSubcuentaFrom={ nuevaSubcuentaFrom }\r\n                        setNuevaSubcuentaFrom={  setNuevaSubcuentaFrom }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading } />\r\n            }\r\n            {\r\n                (typeModal === 'ventaActivos') && (modo === 'crear' || modo === 'editar') && \r\n                        <VentaActivos \r\n                        handleClose={ handleClose } \r\n                        handleSubmit={ handleSubmit } \r\n                        handleDelete={ handleDelete }\r\n                        activeMov={ activeMov } \r\n                        cuentas= { cuentas }\r\n                        nombreCuentas={ nombreCuentas }\r\n                        msgForm={ msgForm } \r\n                        handleChangeCalendar={ handleChangeCalendar }\r\n                        formValues={ formValues }\r\n                        handleChangeFrom={ handleChangeFrom }\r\n                        handleChangeTo= { handleChangeTo }\r\n                        nuevaCuentaTo={ nuevaCuentaTo }\r\n                        setNuevaCuentaTo={ setNuevaCuentaTo }\r\n                        nuevaSubcuentaTo={ nuevaSubcuentaTo }\r\n                        setNuevaSubcuentaTo={  setNuevaSubcuentaTo }\r\n                        handleChange={ handleChange }\r\n                        isLoading={ isLoading }\r\n                        setIsLoading={ setIsLoading } />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarCategoria, startEliminarCategoria } from \"../../../actions/categoriasActions\";\r\nimport { startEditarNombreCategoria } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarCategorias = ({ handleClose, activeCat }) => {\r\n\r\n    const { categorias } = useSelector(state => state.cats)\r\n    \r\n    const dispatch = useDispatch();\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [ stateCategorias, setStateCategorias] = useState({\r\n        id: activeCat.id,\r\n        tipo: activeCat.tipo,\r\n        nombre: '',\r\n        sector: categorias.find( cat => cat.nombre === activeCat.catNombre ).sector\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setStateCategorias({\r\n            ...stateCategorias,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault()\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCategoria: stateCategorias.nombre,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarCategoria( stateCategorias ))\r\n        dispatch( startEditarNombreCategoria( stateCategorias ))\r\n        handleClose(e)\r\n        Swal.fire('Nombre actualizado a '+ stateCategorias.nombre, 'Categoria actualizada correctamente', 'success')\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( activeCat.catCantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la categoria ${ activeCat.catNombre } ?`)\r\n            if (confirmacion){\r\n                dispatch( startEliminarCategoria( stateCategorias ) )\r\n                Swal.fire('Categoria eliminada', `La categoria ${ activeCat.catNombre } ha sido borrada exitosamente`, 'success')\r\n            }\r\n        }\r\n\r\n        handleClose(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-categoria\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Categoria</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"categoriaActual\">Nombre actual: </label>\r\n                        <h4>{ activeCat.catNombre }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nombre\">Nuevo nombre: </label>\r\n                        <input value={ stateCategorias.nombre } name='nombre' onChange={ handleChange } type=\"text\" placeholder=\"Nombre de la categoria\" />\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"sector\">Sector: </label>\r\n                        <input name='sector' value={ stateCategorias.sector } onChange={ handleChange } type=\"text\" placeholder=\"Nuevo sector\" />\r\n                    </section>\r\n                </div>\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Guardar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    { activeCat.catCantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarCuenta, startEliminarCuenta } from \"../../../actions/cuentasActions\";\r\nimport { startEditarNombreCuenta } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarCuentas = ({ handleClose, cantidad }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const {activeCuenta } = useSelector( state => state.cuentas )\r\n    const [ stateCuentas, setStateCuentas] = useState({\r\n        ...activeCuenta,\r\n        nuevaCuenta: ''\r\n    })\r\n\r\n    const handleChange = e => {\r\n\r\n        setStateCuentas({\r\n            ...stateCuentas,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault();\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCuenta: stateCuentas.nuevaCuenta,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarCuenta( stateCuentas ))\r\n        dispatch( startEditarNombreCuenta( stateCuentas ))\r\n        Swal.fire('Nombre actualizado a '+ stateCuentas.nuevaCuenta, 'Cuenta actualizada correctamente', 'success')\r\n\r\n        handleClose(e)\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( cantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la cuenta ${ activeCuenta.nombre } ?`)\r\n            confirmacion && dispatch( startEliminarCuenta( activeCuenta.id ))\r\n        }\r\n\r\n        handleClose(e);\r\n        Swal.fire('Cuenta eliminada', `La cuenta ${ activeCuenta.nombre } ha sido borrada exitosamente`, 'success')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-cuenta\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Cuenta</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"cuentaActual\">Nombre actual cuenta: </label>\r\n                        <h4>{ activeCuenta.nombre }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nuevaCuenta\">Nueva cuenta: </label>\r\n                        <input value={ stateCuentas.nuevaCuenta } onChange={ handleChange } type=\"text\" name=\"nuevaCuenta\" placeholder=\"Nuevo nombre\" />\r\n                    </section>\r\n                </div>\r\n\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Editar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    {cantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startEditarSubcuenta, startEliminarSubcuenta } from \"../../../actions/cuentasActions\";\r\nimport { startEditarNombreSubcuenta } from \"../../../actions/movsActions\";\r\nimport { isFormValid } from \"../../../helpers/isFormValid\";\r\n\r\nexport const EditarSubcuentas = ({ handleClose, nombreSubcuenta, nombreCuenta, cantidad }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cuentas } = useSelector(state => state.cuentas)\r\n    const [msgForm, setMsgForm] = useState(false)\r\n    const [ stateSubcuentas, setStateSubcuentas] = useState({\r\n        id: cuentas.find( cta => cta.nombre === nombreCuenta )?.id,\r\n        cuentaActual: nombreCuenta,\r\n        subcuentaActual: nombreSubcuenta,\r\n        nuevaSubcuenta: '',\r\n    })\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault()\r\n\r\n        setStateSubcuentas({\r\n            ...stateSubcuentas,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEditar = e => {\r\n        e.preventDefault()\r\n\r\n        // Validacion formulario\r\n        const respForm = isFormValid( {\r\n            nuevaCuenta: stateSubcuentas.nuevaSubcuenta,\r\n        } );\r\n\r\n        if ( !respForm.ok ) {\r\n            setMsgForm( respForm.msg )\r\n            return;\r\n        }\r\n\r\n        dispatch( startEditarSubcuenta( { \r\n            ...stateSubcuentas,\r\n            subcuentas: [ ...cuentas.find( cta => cta.nombre === nombreCuenta ).subcuentas.filter( sub => sub !== nombreSubcuenta && sub ), ]\r\n        } ))\r\n        dispatch( startEditarNombreSubcuenta( stateSubcuentas ))\r\n        Swal.fire('Nombre actualizado a '+ stateSubcuentas.nuevaSubcuenta, 'Cuenta actualizada correctamente', 'success')\r\n\r\n        handleClose(e)\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault();\r\n\r\n        if ( cantidad === 0 ) {\r\n            let confirmacion = window.confirm(`¿Estas seguro que deseas eliminar la subcuenta ${ stateSubcuentas.subcuentaActual } ?`)\r\n            if (confirmacion){\r\n                dispatch( startEliminarSubcuenta( {\r\n                    ...stateSubcuentas,\r\n                    subcuentas: [ ...cuentas.find( cta => cta.nombre === nombreCuenta ).subcuentas.filter( sub => sub !== nombreSubcuenta && sub ), ]\r\n                } ))\r\n                Swal.fire('Cuenta eliminada', `La subcuenta ${ stateSubcuentas.subcuentaActual } ha sido borrada exitosamente`, 'success')\r\n            }\r\n        }\r\n\r\n        handleClose(e);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"editar-cuenta\" onSubmit={ handleSubmitEditar }>\r\n                <div className='form-container'>\r\n                    <h1>Editar Subcuenta</h1>\r\n                    { msgForm && <div className='msg-error'>{ msgForm }</div> }\r\n\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"cuentaActual\">Nombre actual cuenta: </label>\r\n                        <h4>{ nombreCuenta }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"subcuentaActual\">Nombre actual subcuenta: </label>\r\n                        <h4>{ nombreSubcuenta }</h4>\r\n                    </section>\r\n                    <section className=\"modal__section\">\r\n                        <label htmlFor=\"nuevaSubcuenta\">Nueva nombre: </label>\r\n                        <input value={ stateSubcuentas.nuevaSubcuenta } onChange={ handleChange } type=\"text\" name=\"nuevaSubcuenta\" placeholder=\"Nuevo nombre\" />\r\n                    </section>\r\n                </div>\r\n\r\n                <div className='botones'>\r\n                    <button className=' btn boton-submit' type='submit'>Editar</button>\r\n                    <button onClick={ handleClose } className='btn btn-secondary boton-cancel'>Cancelar</button>\r\n                    { cantidad === 0 && <button onClick={ handleDelete } className='btn btn-danger boton-eliminar'>Eliminar</button> }\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../../actions/modalActions';\r\nimport { eliminarMovimientoActivo } from '../../../actions/movsActions';\r\nimport { FormulariosDeuda } from '../../modalForms/formDeudas/FormulariosDeuda';\r\nimport { SaldarDeuda } from '../../modalForms/formDeudas/SaldarDeuda';\r\nimport { SaldarPrestamo } from '../../modalForms/formPrestamos/SaldarPrestamo';\r\nimport { FormulariosGasto } from '../../modalForms/formGastos/FormulariosGasto';\r\nimport { FormulariosIngreso } from '../../modalForms/formIngresos/FormulariosIngreso';\r\nimport { FormulariosPrestamo } from '../../modalForms/formPrestamos/FormulariosPrestamo';\r\nimport { FormulariosTransferencia } from '../../modalForms/formTransferencias/FormulariosTransferencia';\r\nimport { EditarCategorias } from '../../modalForms/formEditarCategorias/EditarCategorias';\r\nimport { EditarCuentas } from '../../modalForms/formEditarCuentas/EditarCuentas';\r\nimport { EditarSubcuentas } from '../../modalForms/formEditarCuentas/EditarSubcuentas';\r\nimport { eliminarCategoriaActiva } from '../../../actions/categoriasActions';\r\nimport { eliminarCuentaActiva } from '../../../actions/cuentasActions';\r\n\r\nexport const Modal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isOpen, typeModal, modo } = useSelector(state => state.modals)\r\n    const { activeCat } = useSelector(state => state.cats)\r\n    const { activeCuenta } = useSelector(state => state.cuentas)\r\n    \r\n\r\n    const handleClose = e => {\r\n        e.preventDefault();\r\n        dispatch( closeModal() )\r\n        dispatch( eliminarMovimientoActivo() )\r\n        dispatch( eliminarCategoriaActiva() )\r\n        dispatch( eliminarCuentaActiva() )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modal__background animate__animated animate__fadeIn animate__faster' onClick={ handleClose }>\r\n            </div>\r\n            <div className='modal__modal'>\r\n                <i onClick={ handleClose } className=\"bi bi-x-lg\"></i>\r\n                {\r\n                    ( isOpen && typeModal === 'gasto' ) && <FormulariosGasto handleClose={ handleClose } modo={ modo } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'ingreso' ) && <FormulariosIngreso handleClose={ handleClose } modo={ modo }  />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'transferencia' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'deuda' ) && <FormulariosDeuda handleClose={ handleClose } modo={ modo } />\r\n                }\r\n                {\r\n                    ( ( isOpen && typeModal === 'prestamo' ) || ( isOpen && typeModal === 'deudaACobrar' ) ) && <FormulariosPrestamo handleClose={ handleClose } modo={ modo } typeModal={ typeModal } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'saldar deuda' ) && <SaldarDeuda handleClose={ handleClose } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'saldar prestamo' ) && <SaldarPrestamo handleClose={ handleClose } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar categorias' ) && <EditarCategorias handleClose={ handleClose } activeCat={ activeCat }/>\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar cuentas' ) && <EditarCuentas handleClose={ handleClose } nombreCuenta={ activeCuenta.nomCuenta } cantidad={ activeCuenta.cantidad } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'editar subcuentas' ) && <EditarSubcuentas handleClose={ handleClose } nombreSubcuenta={ activeCuenta.nomSubcuenta } nombreCuenta={ activeCuenta.nomCuenta } cantidad={ activeCuenta.cantidad } />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'compraActivos' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal }  />\r\n                }\r\n                {\r\n                    ( isOpen && typeModal === 'ventaActivos' ) && <FormulariosTransferencia handleClose={ handleClose } modo={ modo } typeModal={ typeModal }  />\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Modal } from \"../components/ui/modal/Modal\";\r\n\r\nexport const PrivateRoute= ({ children }) => {\r\n\r\n    const { isOpen } = useSelector(state => state.modals ) \r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isOpen && <Modal />\r\n            }\r\n            {\r\n                uid\r\n                    ? children\r\n                    : <Navigate to='/login' />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        \r\n            uid  ? <Navigate to='/' /> \r\n                : children\r\n        \r\n    )\r\n}\r\n","export const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading__screen\">\r\n            <h3>Cargando <span>... </span></h3>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\r\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport { LoginScreen } from \"./components/auth/LoginScreen\";\r\nimport { Navbar } from \"./components/ui/navbar/Navbar\";\r\nimport { PrivateRoute } from \"./routers/PrivateRoute\";\r\nimport { PublicRoute } from \"./routers/PublicRoute\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./actions/authActions\";\r\nimport { useState } from \"react\";\r\nimport { LoadingScreen } from \"./components/loadings/LoadingScreen\";\r\nimport { startCargarMovimientos } from \"./actions/movsActions\";\r\nimport { startCargarCategorias } from \"./actions/categoriasActions\";\r\nimport { startCargarCuentas } from \"./actions/cuentasActions\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState( true )\r\n\r\n    useEffect( ()=> {\r\n        const auth = getAuth();\r\n        onAuthStateChanged( auth, user => {\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ))\r\n                dispatch( startCargarMovimientos() )\r\n                dispatch( startCargarCategorias() )\r\n                dispatch( startCargarCuentas() )\r\n            }\r\n            setChecking( false )\r\n        })\r\n    })\r\n\r\n    if ( checking ) {\r\n        return <LoadingScreen />\r\n    }\r\n    \r\n\r\n    return (\r\n        <HashRouter>\r\n            <Routes>\r\n                \r\n                <Route  path='/*' \r\n                        element={ \r\n                            <PrivateRoute>\r\n                                <Navbar />\r\n                            </PrivateRoute>\r\n                        } />\r\n\r\n                <Route  path='/login/*' \r\n                        element={ \r\n                            <PublicRoute>\r\n                                <LoginScreen />\r\n                            </PublicRoute> \r\n                        } />\r\n            </Routes>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    categorias: [],\r\n    isEditing: false,\r\n    activeCat: null\r\n}\r\n\r\nexport const categoriasReducer = ( state= initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarCategorias:\r\n            return{\r\n                ...state,\r\n                categorias: action.payload\r\n            }\r\n\r\n        case types.agregarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: [ ...state.categorias, action.payload ]\r\n\r\n            }\r\n        \r\n        case types.editarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: state.categorias.map( cat => cat.id === action.payload.id ? action.payload : cat )\r\n            }\r\n\r\n        case types.abrirModoEdicionCategorias:\r\n            return{\r\n                ...state,\r\n                isEditing: true\r\n            }\r\n\r\n        case types.cerrarModoEdicionCategorias:\r\n            return{\r\n                ...state,\r\n                isEditing: false\r\n            }\r\n\r\n        case types.eliminarCategoria:\r\n            return{\r\n                ...state,\r\n                categorias: state.categorias.filter( cat => cat.id !== action.payload.id && cat )\r\n            }\r\n\r\n        case types.insertarCategoriaActiva:\r\n            return{\r\n                ...state,\r\n                activeCat: action.payload\r\n            }\r\n\r\n        case types.eliminarCategoriaActiva:\r\n            return{\r\n                ...state,\r\n                activeCat: null\r\n            }\r\n\r\n        case types.limpiarCategorias:\r\n            return{\r\n                ...state,\r\n                categorias: [],\r\n                isEditing: false,\r\n                activeCat: null\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    cuentas: [],\r\n    isEditing: false,\r\n    activeCuenta: null\r\n}\r\n\r\nexport const cuentasReducer = ( state= initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarCuentas:\r\n            return{\r\n                ...state,\r\n                cuentas: action.payload\r\n            }\r\n\r\n        case types.agregarCuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: [ ...state.cuentas, action.payload ]\r\n\r\n            }\r\n        \r\n        case types.agregarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( el => el.nombre === action.payload.nombre ? action.payload : el )\r\n            }\r\n\r\n        case types.editarCuenta:\r\n            console.log( action.payload);\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.id === action.payload.id ? action.payload : cta )\r\n            }\r\n\r\n        case types.editarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.nombre !== action.payload.cuentaActual \r\n                            ? cta \r\n                            : { ...cta, subcuentas: cta.subcuentas.map( sub => sub === action.payload.subcuentaActual \r\n                                        ? action.payload.nuevaSubcuenta\r\n                                        : sub ) } )\r\n            }\r\n\r\n        case types.abrirModoEdicionCuentas:\r\n            return{\r\n                ...state,\r\n                isEditing: true\r\n            }\r\n        \r\n        case types.cerrarModoEdicionCuentas:\r\n            return{\r\n                ...state,\r\n                isEditing: false\r\n            }\r\n\r\n        case types.eliminarCuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.filter( cta => cta.id !== action.payload && cta )\r\n            }\r\n\r\n        case types.eliminarSubcuenta:\r\n            return{\r\n                ...state,\r\n                cuentas: state.cuentas.map( cta => cta.nombre !== action.payload.cuentaActual \r\n                            ? cta \r\n                            : { ...cta, subcuentas: action.payload.subcuentas }\r\n                )\r\n            }\r\n\r\n        case types.insertarCuentaActiva:\r\n            return{\r\n                ...state,\r\n                activeCuenta: action.payload\r\n            }\r\n\r\n        case types.eliminarCuentaActiva:\r\n            return{\r\n                ...state,\r\n                activeCuenta: null\r\n            }\r\n\r\n        case types.limpiarCuentas:\r\n            return{\r\n                ...state,\r\n                cuentas: [],\r\n                isEditing: false,\r\n                activeCuenta: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    isOpen: false,\r\n    typeModal: null,\r\n    modo: '',\r\n}\r\n\r\nexport const modalsReducer = ( state=initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.openModal:\r\n            return {\r\n                ...state,\r\n                isOpen: true,\r\n                typeModal: action.payload.tipo,\r\n                modo: action.payload.modo,\r\n                title: action.payload.title\r\n            };\r\n\r\n        case types.closeModal:\r\n            return {\r\n                ...state,\r\n                isOpen: false,\r\n                typeModal: null,\r\n                modo: '',\r\n                title: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    activeMov: null,\r\n    movs: []\r\n}\r\n\r\nexport const movimientosReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.cargarMovimientos:\r\n            return{\r\n                ...state,\r\n                movs: action.payload\r\n            }\r\n        \r\n        case types.nuevoIngreso:\r\n            return{\r\n                ...state,\r\n                movs : [ action.payload, ...state.movs ]\r\n            }\r\n        \r\n        case types.nuevoGasto:\r\n            return{\r\n                ...state,\r\n                movs : [ action.payload, ...state.movs ]\r\n            }\r\n        case types.nuevaTransferencia:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        case types.insertarMovActivo:\r\n            return{\r\n                ...state,\r\n                activeMov: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.eliminarMovActivo:\r\n            return{\r\n                ...state,\r\n                activeMov: null\r\n            }\r\n        case types.actualizarMovimiento:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.id ? el : action.payload )\r\n            }\r\n        case types.eliminarMovimiento:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.filter( el => el.id !== action.payload && el )\r\n            }\r\n        case types.nuevaDeuda:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        case types.nuevoPrestamo:\r\n            return{\r\n                ...state,\r\n                movs: [ action.payload, ...state.movs ]\r\n            }\r\n        \r\n        case types.editarNombreCategoria:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.categoria === action.payload.categoriaActual ? { ...el, categoria: action.payload.nuevaCategoria, sector: action.payload.sector } : el )\r\n            }\r\n\r\n        /* case types.editarNombreCuenta:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el =>{\r\n                    if (el.cuenta === action.payload.cuentaActual) {\r\n                        return { ...el, cuenta: action.payload.nuevaCuenta };\r\n                    }\r\n                    if ( el.from?.cuenta === action.payload.cuentaActual ) {\r\n                        return { ...el, from: { ...el.from, cuenta: action.payload.nuevaCuenta } } \r\n                    }\r\n                    if ( el.to?.cuenta === action.payload.cuentaActual ) {\r\n                        return { ...el, to: { ...el.to, cuenta: action.payload.nuevaCuenta} } \r\n                    }\r\n                    return el;\r\n                })\r\n            } */\r\n\r\n        /* case types.editarNombreSubcuenta:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el =>{\r\n                    if (el.categoria === action.payload.subcuentaActual) {\r\n                        return { ...el, categoria: action.payload.nuevaSubcuenta };\r\n                    }\r\n                    if (el.cuenta === action.payload.cuentaActual || el.from?.cuenta === action.payload.cuentaActual || el.to?.cuenta === action.payload.cuentaActual) {\r\n                        \r\n                        if (el.subcuenta === action.payload.subcuentaActual) {\r\n                            return { ...el, subcuenta: action.payload.nuevaSubcuenta };\r\n                        }\r\n                        if ( el.from?.subcuenta === action.payload.subcuentaActual ) {\r\n                            return { ...el, from: { ...el.from, subcuenta: action.payload.nuevaSubcuenta } } \r\n                        }\r\n                        if ( el.to?.subcuenta === action.payload.subcuentaActual ) {\r\n                            return { ...el, to: { ...el.to, subcuenta: action.payload.nuevaSubcuenta} } \r\n                        }\r\n                    }\r\n                    return el;\r\n                })\r\n            } */\r\n\r\n        /* case types.editarMontosDeuda:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.idReferencia\r\n                                            ? el \r\n                                            : { \r\n                                                ...el, \r\n                                                subcuenta: action.payload.subcuenta, \r\n                                                cantidadPagada: ( el.cantidadPagada - action.payload.cantidadAnterior + action.payload.cantidadNueva),\r\n                                                cuotasPagadas: ( el.cuotasPagadas - action.payload.cuotasAnterior + action.payload.cuotasNuevas ),\r\n                                                estado: ( el.cantidad - (el.cantidadPagada - action.payload.cantidadAnterior) - action.payload.cantidadNueva) > 0 ? 'pendiente' : 'saldado'\r\n                                            } )\r\n            } */\r\n\r\n        /* case types.eliminarCuotaDeuda:\r\n            return{\r\n                ...state,\r\n                movs: state.movs.map( el => el.id !== action.payload.idReferencia \r\n                                            ? el\r\n                                            : {\r\n                                                ...el,\r\n                                                cantidadPagada: ( el.cantidadPagada - action.payload.cantidadAnterior ),\r\n                                                cuotasPagadas: ( el.cuotasPagadas - action.payload.cuotasAnterior ),\r\n                                                estado: ( el.cantidad - ( el.cuotasPagadas - action.payload.cuotasAnterior ) ) > 0 ? 'pendiente' : 'saldado'\r\n                                            })\r\n            } */\r\n\r\n        case types.limpiarMovimientos:\r\n            return{\r\n                ...state,\r\n                movs: [],\r\n                activeMov: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.login:\r\n            return{\r\n                ...state,\r\n                uid: action.payload.uid,\r\n                name: action.payload.userName\r\n            }\r\n\r\n        case types.logout:\r\n            return{\r\n                ...state,\r\n                uid: null,\r\n                name: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    pares:[\r\n        {\r\n            nombre: 'USD/ARS',\r\n            valor: 1\r\n        },\r\n        {\r\n            nombre: 'BTC/ARS',\r\n            valor: 1\r\n\r\n        },\r\n        {\r\n            nombre: 'BTC/USD',\r\n            valor: 1\r\n\r\n        }\r\n    ]\r\n}\r\n\r\nexport const valoresReducer = ( state= initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.actualizarValores:\r\n            return{\r\n                ...state,\r\n                // paso array completo con objetos dentro\r\n                pares: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { categoriasReducer } from \"../reducers/categoriasReducer\";\r\nimport { cuentasReducer } from \"../reducers/cuentasReducer\";\r\nimport { modalsReducer } from \"../reducers/modalsReducer\";\r\nimport { movimientosReducer } from \"../reducers/movimientosReducer\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { valoresReducer } from \"../reducers/valoresReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    movs: movimientosReducer,\r\n    modals: modalsReducer,\r\n    cats: categoriasReducer,\r\n    cuentas: cuentasReducer,\r\n    pares: valoresReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    ) );","import { Provider } from 'react-redux'\nimport { AppRouter } from \"./AppRouter\";\nimport { store } from \"./store/store\";\n\n\nfunction App() {\n    return (\n        <Provider store={ store } >\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}